{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = tryRealpath;\n\nfunction _gracefulFs() {\n  const data = require('graceful-fs');\n\n  _gracefulFs = function () {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nfunction tryRealpath(path) {\n  try {\n    path = _gracefulFs().realpathSync.native(path);\n  } catch (error) {\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n\n  return path;\n}","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/jest-util/build/tryRealpath.js"],"names":["Object","defineProperty","exports","value","default","tryRealpath","_gracefulFs","data","require","path","realpathSync","native","error","code"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAMC,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAEAF,EAAAA,WAAW,GAAG,YAAY;AACxB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,WAAT,CAAqBI,IAArB,EAA2B;AACzB,MAAI;AACFA,IAAAA,IAAI,GAAGH,WAAW,GAAGI,YAAd,CAA2BC,MAA3B,CAAkCF,IAAlC,CAAP;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;AAC3B,YAAMD,KAAN;AACD;AACF;;AAED,SAAOH,IAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = tryRealpath;\n\nfunction _gracefulFs() {\n  const data = require('graceful-fs');\n\n  _gracefulFs = function () {\n    return data;\n  };\n\n  return data;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction tryRealpath(path) {\n  try {\n    path = _gracefulFs().realpathSync.native(path);\n  } catch (error) {\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n\n  return path;\n}\n"]},"metadata":{},"sourceType":"script"}