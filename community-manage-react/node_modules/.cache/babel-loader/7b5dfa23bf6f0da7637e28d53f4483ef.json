{"ast":null,"code":"import axios from 'axios';\nimport * as constants from './constants';\nimport qs from 'qs';\n\nconst getCommunitySuccess = result => ({\n  type: constants.GET_COMMUNITY_SUCCESS,\n  data: result,\n  getState: true\n});\n\nconst getCommunityError = error => ({\n  type: constants.GET_COMMUNITY_ERROR,\n  message: error.message,\n  getState: false\n});\n\nconst searchCommunitySuccess = result => ({\n  type: constants.SEARCH_COMMUNITY_SUCCESS,\n  data: result\n});\n\nconst searchCommunityError = error => ({\n  type: constants.SEARCH_COMMUNITY_ERROR,\n  message: error.message\n});\n\nconst addCommunityError = error => ({\n  type: constants.ADD_COMMUNITY_ERROR,\n  message: error.message\n});\n\nconst addCommunitySuccess = () => ({\n  type: constants.ADD_COMMUNITY_SUCCESS,\n  visible: false,\n  loading: false\n});\n\nconst deleteCommunitySuccess = () => ({\n  type: constants.DELETE_COMMUNITY_SUCCESS,\n  deleteState: true\n});\n\nconst deleteCommunityError = error => ({\n  type: constants.DELETE_COMMUNITY_ERROR,\n  deleteState: false,\n  message: error.message\n});\n\nconst showModal = () => ({\n  type: constants.SHOW_MODAL,\n  visible: true\n});\n\nconst cancelShowModal = () => ({\n  type: constants.CANCEL_SHOW_MODAL,\n  visible: false\n});\n\nconst showUpdateModal = id => ({\n  type: constants.SHOW_UPDATE_MODAL,\n  updateVisible: true,\n  updateId: id\n});\n\nconst cancelShowUpdateModal = () => ({\n  type: constants.CANCEL_SHOW_UPDATE_MODAL,\n  updateVisible: false,\n  updateId: 0\n});\n\nconst updateCommunitySuccess = () => ({\n  type: constants.UPDATE_COMMUNITY_SUCCESS,\n  updateState: true\n});\n\nconst updateCommunityError = error => ({\n  type: constants.UPDATE_COMMUNITY_ERROR,\n  updateState: false,\n  message: error.message\n});\n\nexport const communityRequest = () => {\n  return dispatch => {\n    axios.get('/api/admin/getCommunity').then(res => {\n      const result = res.data.data;\n      const action = getCommunitySuccess(result);\n      dispatch(action);\n    }).catch(error => {\n      const action = getCommunityError(error);\n      dispatch(action);\n    });\n  };\n};\nexport const searchCommunity = value => {\n  return dispatch => {\n    axios.get('/api/admin/searchCommunity', qs.stringify(value)).then(res => {\n      const result = res.data.data;\n      const action = searchCommunitySuccess(result);\n      dispatch(action);\n    }).catch(error => {\n      const action = searchCommunityError(error);\n      dispatch(action);\n    });\n  };\n};\nexport const addCommunity = values => {\n  return dispatch => {\n    axios.post('/api/admin/addCommunity', {\n      params: {\n        fields: values\n      }\n    }).then(res => {\n      console.log(values);\n      const action = addCommunitySuccess();\n      dispatch(action);\n    }).catch(error => {\n      console.log(error);\n      const action = addCommunityError(error);\n      dispatch(action);\n    });\n  };\n};\nexport const handleDelete = id => {\n  return dispatch => {\n    axios.delete('/api/admin/deleteCommunity', {\n      params: {\n        id: id\n      }\n    }).then(res => {\n      const action = deleteCommunitySuccess();\n      dispatch(action);\n    }).catch(error => {\n      const action = deleteCommunityError(error);\n      dispatch(action);\n    });\n  };\n};\nexport const handleShow = () => {\n  return dispatch => {\n    const action = showModal();\n    dispatch(action);\n  };\n};\nexport const handleCancel = () => {\n  return dispatch => {\n    const action = cancelShowModal();\n    dispatch(action);\n  };\n};\nexport const handleUpdate = id => {\n  return dispatch => {\n    const action = showUpdateModal(id);\n    dispatch(action);\n  };\n};\nexport const handleCancelUpdate = () => {\n  return dispatch => {\n    const action = cancelShowUpdateModal();\n    dispatch(action);\n  };\n};\nexport const handleUpdateCommunity = values => {\n  return dispatch => {\n    axios.post('/api/admin/updateCommunity', values).then(res => {\n      const action = updateCommunitySuccess();\n      dispatch(action);\n    }).catch(error => {\n      const action = updateCommunityError(error);\n      dispatch(action);\n    });\n  };\n};","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/src/pages/community/store/actionCreators.js"],"names":["axios","constants","qs","getCommunitySuccess","result","type","GET_COMMUNITY_SUCCESS","data","getState","getCommunityError","error","GET_COMMUNITY_ERROR","message","searchCommunitySuccess","SEARCH_COMMUNITY_SUCCESS","searchCommunityError","SEARCH_COMMUNITY_ERROR","addCommunityError","ADD_COMMUNITY_ERROR","addCommunitySuccess","ADD_COMMUNITY_SUCCESS","visible","loading","deleteCommunitySuccess","DELETE_COMMUNITY_SUCCESS","deleteState","deleteCommunityError","DELETE_COMMUNITY_ERROR","showModal","SHOW_MODAL","cancelShowModal","CANCEL_SHOW_MODAL","showUpdateModal","id","SHOW_UPDATE_MODAL","updateVisible","updateId","cancelShowUpdateModal","CANCEL_SHOW_UPDATE_MODAL","updateCommunitySuccess","UPDATE_COMMUNITY_SUCCESS","updateState","updateCommunityError","UPDATE_COMMUNITY_ERROR","communityRequest","dispatch","get","then","res","action","catch","searchCommunity","value","stringify","addCommunity","values","post","params","fields","console","log","handleDelete","delete","handleShow","handleCancel","handleUpdate","handleCancelUpdate","handleUpdateCommunity"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport qs from 'qs';\r\n\r\n\r\nconst getCommunitySuccess = (result)=>({\r\n    type : constants.GET_COMMUNITY_SUCCESS,\r\n    data: result,\r\n    getState: true\r\n})\r\n\r\nconst getCommunityError = (error)=>({\r\n    type : constants.GET_COMMUNITY_ERROR,\r\n    message : error.message,\r\n    getState: false\r\n})\r\nconst searchCommunitySuccess = (result)=>({\r\n    type: constants.SEARCH_COMMUNITY_SUCCESS,\r\n    data: result\r\n})\r\nconst searchCommunityError = (error)=>({\r\n    type: constants.SEARCH_COMMUNITY_ERROR,\r\n    message : error.message\r\n})\r\nconst addCommunityError = (error)=>({\r\n    type: constants.ADD_COMMUNITY_ERROR,\r\n    message : error.message\r\n})\r\nconst addCommunitySuccess = ()=>({\r\n    type: constants.ADD_COMMUNITY_SUCCESS,\r\n    visible: false,\r\n    loading: false\r\n})\r\nconst deleteCommunitySuccess = ()=>({\r\n    type: constants.DELETE_COMMUNITY_SUCCESS,\r\n    deleteState: true\r\n})\r\nconst deleteCommunityError = (error)=>({\r\n    type: constants.DELETE_COMMUNITY_ERROR,\r\n    deleteState: false,\r\n    message: error.message\r\n})\r\nconst showModal = ()=>({\r\n    type: constants.SHOW_MODAL,\r\n    visible: true,\r\n})\r\nconst cancelShowModal = ()=>({\r\n    type: constants.CANCEL_SHOW_MODAL,\r\n    visible: false,\r\n})\r\nconst showUpdateModal = (id)=>({\r\n    type: constants.SHOW_UPDATE_MODAL,\r\n    updateVisible: true,\r\n    updateId: id,\r\n})\r\nconst cancelShowUpdateModal = ()=>({\r\n    type: constants.CANCEL_SHOW_UPDATE_MODAL,\r\n    updateVisible: false,\r\n    updateId: 0\r\n})\r\nconst updateCommunitySuccess = ()=>({\r\n    type: constants.UPDATE_COMMUNITY_SUCCESS,\r\n    updateState: true\r\n})\r\nconst updateCommunityError = (error)=>({\r\n    type: constants.UPDATE_COMMUNITY_ERROR,\r\n    updateState: false,\r\n    message: error.message\r\n})\r\n\r\nexport const communityRequest = () => {\r\n    return (dispatch) => {\r\n        axios.get('/api/admin/getCommunity').then((res) => {\r\n            const result = res.data.data;\r\n            const action = getCommunitySuccess(result);\r\n            dispatch(action);\r\n        }).catch(error => {\r\n            const action = getCommunityError(error);\r\n            dispatch(action);\r\n        });\r\n    }\r\n};\r\nexport const searchCommunity  = (value) => {\r\n    return (dispatch) => {\r\n        axios.get('/api/admin/searchCommunity', qs.stringify(value)).then((res) => {\r\n            const result = res.data.data;\r\n            const action = searchCommunitySuccess(result);\r\n            dispatch(action);\r\n        }).catch(error => {\r\n            const action = searchCommunityError(error);\r\n            dispatch(action);\r\n        });\r\n    }\r\n};\r\nexport const addCommunity  = (values) => {\r\n    return (dispatch) => {\r\n        axios.post('/api/admin/addCommunity',{\r\n            params: {\r\n                fields: values\r\n            }\r\n        }).then((res) => {\r\n            console.log(values)\r\n            const action = addCommunitySuccess();\r\n            dispatch(action);\r\n        }).catch(error => {\r\n            console.log(error)\r\n            const action = addCommunityError(error);\r\n            dispatch(action);\r\n        });\r\n    }\r\n};\r\nexport const handleDelete  = (id) => {\r\n    return (dispatch) => {\r\n        axios.delete('/api/admin/deleteCommunity',{\r\n            params: {\r\n                id: id\r\n            }\r\n        }).then((res) => {\r\n            const action = deleteCommunitySuccess();\r\n            dispatch(action);\r\n        }).catch(error => {\r\n            const action = deleteCommunityError(error);\r\n            dispatch(action);\r\n        });\r\n    }\r\n};\r\n\r\nexport const handleShow  = () => {\r\n    return (dispatch) => {\r\n            const action = showModal();\r\n            dispatch(action);\r\n\r\n    }\r\n};\r\nexport const handleCancel  = () => {\r\n    return (dispatch) => {\r\n        const action = cancelShowModal();\r\n        dispatch(action);\r\n\r\n    }\r\n};\r\nexport const handleUpdate  = (id) => {\r\n    return (dispatch) => {\r\n        const action = showUpdateModal(id);\r\n        dispatch(action);\r\n\r\n    }\r\n};\r\nexport const handleCancelUpdate  = () => {\r\n    return (dispatch) => {\r\n        const action = cancelShowUpdateModal();\r\n        dispatch(action);\r\n\r\n    }\r\n};\r\nexport const handleUpdateCommunity  = (values) => {\r\n    return (dispatch) => {\r\n        axios.post('/api/admin/updateCommunity',values).then((res) => {\r\n            const action = updateCommunitySuccess();\r\n            dispatch(action);\r\n        }).catch(error => {\r\n            const action = updateCommunityError(error);\r\n            dispatch(action);\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}