{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"D:\\\\IDEA workspace\\\\ZUA\\\\community-manage-react\\\\src\\\\pages\\\\login\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './index.less';\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"./store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  render() {\n    const {\n      handleLogin\n    } = this.props;\n\n    if (this.props.loginState) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 42\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u7528\\u6237\\u767B\\u9646\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          className: \"login-form\",\n          ref: \"loginForm\",\n          initialValues: {\n            username: 'admin' //默认值\n\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"username\",\n            rules: [// 声明式验证: 直接使用别人定义好的验证规则进行验证\n            {\n              required: true,\n              whitespace: true,\n              message: '用户名必须输入'\n            }, {\n              min: 4,\n              message: '用户名至少4位'\n            }, {\n              max: 12,\n              message: '用户名最多12位'\n            }, {\n              pattern: /^[a-zA-Z0-9_]+$/,\n              message: '用户名必须是英文、数字或下划线组成'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 41\n              }, this),\n              placeholder: \"\\u7528\\u6237\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: 'Please input your Password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 41\n              }, this),\n              type: \"password\",\n              placeholder: \"\\u5BC6\\u7801\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              onClick: () => handleLogin(this.refs.loginForm.getFieldValue()),\n              children: \"\\u767B\\u5F55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapState = state => ({\n  loginState: state.getIn(['login', 'loginState'])\n});\n\nconst mapDispatch = dispatch => ({\n  handleLogin(values) {\n    dispatch(actionCreators.loginRequest(values));\n  }\n\n});\n\nexport default connect(mapState, mapDispatch)(Login);","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/src/pages/login/index.js"],"names":["React","Component","Redirect","UserOutlined","LockOutlined","connect","actionCreators","Login","render","handleLogin","props","loginState","username","required","whitespace","message","min","max","pattern","refs","loginForm","getFieldValue","mapState","state","getIn","mapDispatch","dispatch","values","loginRequest"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {Form, Input, Button} from 'antd';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './index.less';\r\nimport {connect} from \"react-redux\";\r\nimport {actionCreators} from \"./store\";\r\n\r\nclass Login extends Component {\r\n\r\n\r\n    render () {\r\n\r\n        const {handleLogin}  = this.props;\r\n        if(this.props.loginState){return <Redirect to='/index' />}\r\n        return (\r\n            <div className=\"form\">\r\n                <section className=\"login-content\">\r\n                    <h2>用户登陆</h2>\r\n                    <Form\r\n                         className=\"login-form\"\r\n                        ref=\"loginForm\"\r\n                        initialValues={{\r\n                            username:'admin',//默认值\r\n                        }}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[// 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                                { required: true, whitespace: true, message: '用户名必须输入' },\r\n                                { min: 4, message: '用户名至少4位' },\r\n                                { max: 12, message: '用户名最多12位' },\r\n                                { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                placeholder=\"用户名\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={()=>handleLogin(this.refs.loginForm.getFieldValue())}>\r\n                                登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapState = (state) => ({\r\n    loginState: state.getIn(['login','loginState'])\r\n});\r\nconst mapDispatch = (dispatch) => ({\r\n    handleLogin(values){\r\n        dispatch(actionCreators.loginRequest(values));\r\n    }\r\n\r\n});\r\n\r\nexport default connect(mapState,mapDispatch)(Login);\r\n"]},"metadata":{},"sourceType":"module"}