{"ast":null,"code":"import axios from 'axios';\nimport * as constants from './constants';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from \"../../../utils/AuthToken\";\n\nconst loginSuccess = (decoded, roles) => ({\n  type: constants.LOGIN_SUCCESS,\n  loginState: true,\n  user: decoded,\n  roles: roles\n});\n\nconst loginError = error => ({\n  type: constants.LOGIN_ERROR,\n  loginState: false,\n  message: error\n});\n\nexport const loginRequest = values => {\n  return dispatch => {\n    axios.post('/api/user/login', values).then(res => {\n      const {\n        token\n      } = res.data.token;\n      const {\n        roles\n      } = res.data.roles;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      const action = loginSuccess(decoded, roles);\n      dispatch(action);\n    }).catch(error => {\n      const action = loginError(error);\n      dispatch(action);\n    });\n  };\n};","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/src/pages/login/store/actionCreators.js"],"names":["axios","constants","jwt_decode","setAuthToken","loginSuccess","decoded","roles","type","LOGIN_SUCCESS","loginState","user","loginError","error","LOGIN_ERROR","message","loginRequest","values","dispatch","post","then","res","token","data","localStorage","setItem","action","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAGA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAASC,KAAT,MAAkB;AACnCC,EAAAA,IAAI,EAAGN,SAAS,CAACO,aADkB;AAEnCC,EAAAA,UAAU,EAAE,IAFuB;AAGnCC,EAAAA,IAAI,EAAEL,OAH6B;AAInCC,EAAAA,KAAK,EAAEA;AAJ4B,CAAlB,CAArB;;AAOA,MAAMK,UAAU,GAAIC,KAAD,KAAU;AACzBL,EAAAA,IAAI,EAAGN,SAAS,CAACY,WADQ;AAEzBJ,EAAAA,UAAU,EAAE,KAFa;AAGzBK,EAAAA,OAAO,EAAEF;AAHgB,CAAV,CAAnB;;AAMA,OAAO,MAAMG,YAAY,GAAIC,MAAD,IAAY;AACpC,SAAQC,QAAD,IAAc;AAEjBjB,IAAAA,KAAK,CAACkB,IAAN,CAAW,iBAAX,EAA6BF,MAA7B,EAAqCG,IAArC,CAA2CC,GAAD,IAAS;AAC/C,YAAM;AAACC,QAAAA;AAAD,UAAWD,GAAG,CAACE,IAAJ,CAASD,KAA1B;AACA,YAAM;AAACf,QAAAA;AAAD,UAAUc,GAAG,CAACE,IAAJ,CAAShB,KAAzB;AACAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCH,KAAhC;AACAlB,MAAAA,YAAY,CAACkB,KAAD,CAAZ;AACA,YAAMhB,OAAO,GAAGH,UAAU,CAACmB,KAAD,CAA1B;AAEA,YAAMI,MAAM,GAAGrB,YAAY,CAACC,OAAD,EAASC,KAAT,CAA3B;AACAW,MAAAA,QAAQ,CAACQ,MAAD,CAAR;AACH,KATD,EASGC,KATH,CASSd,KAAK,IAAI;AACd,YAAMa,MAAM,GAAGd,UAAU,CAACC,KAAD,CAAzB;AACAK,MAAAA,QAAQ,CAACQ,MAAD,CAAR;AACH,KAZD;AAaH,GAfD;AAgBH,CAjBM","sourcesContent":["import axios from 'axios';\r\nimport * as constants from './constants';\r\nimport jwt_decode from 'jwt-decode'\r\nimport setAuthToken from \"../../../utils/AuthToken\";\r\n\r\n\r\nconst loginSuccess = (decoded,roles)=>({\r\n    type : constants.LOGIN_SUCCESS,\r\n    loginState: true,\r\n    user: decoded,\r\n    roles: roles\r\n})\r\n\r\nconst loginError = (error)=>({\r\n    type : constants.LOGIN_ERROR,\r\n    loginState: false,\r\n    message: error\r\n})\r\n\r\nexport const loginRequest = (values) => {\r\n    return (dispatch) => {\r\n\r\n        axios.post('/api/user/login',values).then((res) => {\r\n            const {token } = res.data.token;\r\n            const {roles} = res.data.roles;\r\n            localStorage.setItem('jwtToken',token);\r\n            setAuthToken(token);\r\n            const decoded = jwt_decode(token)\r\n\r\n            const action = loginSuccess(decoded,roles);\r\n            dispatch(action);\r\n        }).catch(error => {\r\n            const action = loginError(error);\r\n            dispatch(action);\r\n        });\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}