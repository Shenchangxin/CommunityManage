{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as constants from './constants';\nconst defaultState = fromJS({\n  data: [],\n  getState: false,\n  communityId: '',\n  message: '',\n  visible: false,\n  loading: false\n});\n\nconst getCommunitySuccess = (state, action) => {\n  return state.merge({\n    'getState': action.getState,\n    'data': action.data\n  });\n};\n\nconst getCommunityError = (state, action) => {\n  return state.merge({\n    'getState': action.getState\n  });\n};\n\nconst updateCommunityById = (state, action) => {\n  return state.merge({\n    'communityId': action.communityId\n  });\n};\n\nconst searchCommunitySuccess = (state, action) => {\n  return state.merge({\n    'data': action.data\n  });\n};\n\nconst searchCommunityError = (state, action) => {\n  return state.merge({\n    'message': action.message\n  });\n};\n\nconst addCommunityError = (state, action) => {\n  return state.merge({\n    'message': action.message\n  });\n};\n\nconst addCommunitySuccess = (state, action) => {\n  return state.merge({\n    'visible': action.visible,\n    'loading': action.loading\n  });\n};\n\nconst showModal = (state, action) => {\n  return state.merge({\n    'visible': action.visible\n  });\n};\n\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case constants.GET_COMMUNITY_SUCCESS:\n      return getCommunitySuccess(state, action);\n\n    case constants.GET_COMMUNITY_ERROR:\n      return getCommunityError(state, action);\n\n    case constants.UPDATE_COMMUNITY_ID:\n      return updateCommunityById(state, action);\n\n    case constants.SEARCH_COMMUNITY_SUCCESS:\n      return searchCommunitySuccess(state, action);\n\n    case constants.SEARCH_COMMUNITY_ERROR:\n      return searchCommunityError(state, action);\n\n    case constants.ADD_COMMUNITY_SUCCESS:\n      return addCommunitySuccess(state, action);\n\n    case constants.ADD_COMMUNITY_ERROR:\n      return addCommunityError(state, action);\n\n    case constants.SHOW_MODAL:\n      return showModal(state, action);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/src/pages/community/store/reducer.js"],"names":["fromJS","constants","defaultState","data","getState","communityId","message","visible","loading","getCommunitySuccess","state","action","merge","getCommunityError","updateCommunityById","searchCommunitySuccess","searchCommunityError","addCommunityError","addCommunitySuccess","showModal","type","GET_COMMUNITY_SUCCESS","GET_COMMUNITY_ERROR","UPDATE_COMMUNITY_ID","SEARCH_COMMUNITY_SUCCESS","SEARCH_COMMUNITY_ERROR","ADD_COMMUNITY_SUCCESS","ADD_COMMUNITY_ERROR","SHOW_MODAL"],"mappings":"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","sourcesContent":["import { fromJS } from 'immutable';\r\nimport * as constants from './constants';\r\n\r\nconst defaultState = fromJS ({\r\n    data:[],\r\n    getState: false,\r\n    communityId:'',\r\n    message: '',\r\n    visible: false,\r\n    loading: false,\r\n});\r\n\r\nconst getCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'getState': action.getState,\r\n        'data': action.data\r\n    });\r\n}\r\nconst getCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'getState': action.getState,\r\n    });\r\n}\r\nconst updateCommunityById =(state,action)=>{\r\n    return state.merge({\r\n        'communityId': action.communityId\r\n    });\r\n}\r\nconst searchCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'data': action.data\r\n    });\r\n}\r\nconst searchCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'message': action.message\r\n    });\r\n}\r\nconst addCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'message': action.message\r\n    });\r\n}\r\nconst addCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'visible': action.visible,\r\n        'loading': action.loading\r\n    });\r\n}\r\nconst showModal =(state,action)=>{\r\n    return state.merge({\r\n        'visible': action.visible,\r\n    });\r\n}\r\n\r\nexport default (state = defaultState,action) => {\r\n    switch (action.type) {\r\n        case constants.GET_COMMUNITY_SUCCESS:\r\n            return getCommunitySuccess(state,action)\r\n        case constants.GET_COMMUNITY_ERROR:\r\n            return getCommunityError(state, action)\r\n        case constants.UPDATE_COMMUNITY_ID:\r\n            return updateCommunityById(state, action)\r\n        case constants.SEARCH_COMMUNITY_SUCCESS:\r\n            return searchCommunitySuccess(state, action)\r\n        case constants.SEARCH_COMMUNITY_ERROR:\r\n            return searchCommunityError(state, action)\r\n        case constants.ADD_COMMUNITY_SUCCESS:\r\n            return addCommunitySuccess(state, action)\r\n        case constants.ADD_COMMUNITY_ERROR:\r\n            return addCommunityError(state, action)\r\n        case constants.SHOW_MODAL:\r\n            return showModal(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}