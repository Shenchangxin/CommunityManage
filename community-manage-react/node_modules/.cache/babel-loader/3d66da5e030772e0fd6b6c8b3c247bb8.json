{"ast":null,"code":"/**\n * slice() reference.\n */\nvar slice = Array.prototype.slice;\n/**\n * Expose `co`.\n */\n\nmodule.exports = co['default'] = co.co = co;\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1); // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n\n  return new Promise(function (resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n    onFulfilled();\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n\n      next(ret);\n    }\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n\n    function onRejected(err) {\n      var ret;\n\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n\n      next(ret);\n    }\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, ' + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\n\nfunction objectToPromise(obj) {\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);else results[key] = obj[key];\n  }\n\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/co/index.js"],"names":["slice","Array","prototype","module","exports","co","wrap","fn","createPromise","__generatorFunction__","call","apply","arguments","gen","ctx","args","Promise","resolve","reject","next","onFulfilled","res","ret","e","onRejected","err","throw","done","value","toPromise","isPromise","then","TypeError","String","obj","isGeneratorFunction","isGenerator","thunkToPromise","isArray","arrayToPromise","isObject","objectToPromise","length","all","map","results","constructor","keys","Object","promises","i","key","promise","defer","undefined","push","name","displayName","val"],"mappings":"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","sourcesContent":["\n/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nmodule.exports = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1)\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n"]},"metadata":{},"sourceType":"script"}