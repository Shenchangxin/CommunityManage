{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getPath = getPath;\nexports.default = void 0;\n\nfunction _jestGetType() {\n  const data = require('jest-get-type');\n\n  _jestGetType = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nvar _default = (title, headings, row) => {\n  const table = convertRowToTable(row, headings);\n  const templates = convertTableToTemplates(table, headings);\n  return templates.map(template => ({\n    arguments: [template],\n    title: interpolate(title, template)\n  }));\n};\n\nexports.default = _default;\n\nconst convertRowToTable = (row, headings) => Array.from({\n  length: row.length / headings.length\n}).map((_, index) => row.slice(index * headings.length, index * headings.length + headings.length));\n\nconst convertTableToTemplates = (table, headings) => table.map(row => row.reduce((acc, value, index) => Object.assign(acc, {\n  [headings[index]]: value\n}), {}));\n\nconst interpolate = (title, template) => Object.keys(template).reduce(getMatchingKeyPaths(title), []) // aka flatMap\n.reduce(replaceKeyPathWithValue(template), title);\n\nconst getMatchingKeyPaths = title => (matches, key) => matches.concat(title.match(new RegExp(`\\\\$${key}[\\\\.\\\\w]*`, 'g')) || []);\n\nconst replaceKeyPathWithValue = template => (title, match) => {\n  const keyPath = match.replace('$', '').split('.');\n  const value = getPath(template, keyPath);\n\n  if ((0, _jestGetType().isPrimitive)(value)) {\n    return title.replace(match, String(value));\n  }\n\n  return title.replace(match, (0, _prettyFormat().default)(value, {\n    maxDepth: 1,\n    min: true\n  }));\n};\n/* eslint import/export: 0*/\n\n\nfunction getPath(template, [head, ...tail]) {\n  if (!head || !template.hasOwnProperty || !template.hasOwnProperty(head)) return template;\n  return getPath(template[head], tail);\n}","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/jest-each/build/table/template.js"],"names":["Object","defineProperty","exports","value","getPath","default","_jestGetType","data","require","_prettyFormat","_interopRequireDefault","obj","__esModule","_default","title","headings","row","table","convertRowToTable","templates","convertTableToTemplates","map","template","arguments","interpolate","Array","from","length","_","index","slice","reduce","acc","assign","keys","getMatchingKeyPaths","replaceKeyPathWithValue","matches","key","concat","match","RegExp","keyPath","replace","split","isPrimitive","String","maxDepth","min","head","tail","hasOwnProperty"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getPath = getPath;\nexports.default = void 0;\n\nfunction _jestGetType() {\n  const data = require('jest-get-type');\n\n  _jestGetType = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar _default = (title, headings, row) => {\n  const table = convertRowToTable(row, headings);\n  const templates = convertTableToTemplates(table, headings);\n  return templates.map(template => ({\n    arguments: [template],\n    title: interpolate(title, template)\n  }));\n};\n\nexports.default = _default;\n\nconst convertRowToTable = (row, headings) =>\n  Array.from({\n    length: row.length / headings.length\n  }).map((_, index) =>\n    row.slice(\n      index * headings.length,\n      index * headings.length + headings.length\n    )\n  );\n\nconst convertTableToTemplates = (table, headings) =>\n  table.map(row =>\n    row.reduce(\n      (acc, value, index) =>\n        Object.assign(acc, {\n          [headings[index]]: value\n        }),\n      {}\n    )\n  );\n\nconst interpolate = (title, template) =>\n  Object.keys(template)\n    .reduce(getMatchingKeyPaths(title), []) // aka flatMap\n    .reduce(replaceKeyPathWithValue(template), title);\n\nconst getMatchingKeyPaths = title => (matches, key) =>\n  matches.concat(title.match(new RegExp(`\\\\$${key}[\\\\.\\\\w]*`, 'g')) || []);\n\nconst replaceKeyPathWithValue = template => (title, match) => {\n  const keyPath = match.replace('$', '').split('.');\n  const value = getPath(template, keyPath);\n\n  if ((0, _jestGetType().isPrimitive)(value)) {\n    return title.replace(match, String(value));\n  }\n\n  return title.replace(\n    match,\n    (0, _prettyFormat().default)(value, {\n      maxDepth: 1,\n      min: true\n    })\n  );\n};\n/* eslint import/export: 0*/\n\nfunction getPath(template, [head, ...tail]) {\n  if (!head || !template.hasOwnProperty || !template.hasOwnProperty(head))\n    return template;\n  return getPath(template[head], tail);\n}\n"]},"metadata":{},"sourceType":"script"}