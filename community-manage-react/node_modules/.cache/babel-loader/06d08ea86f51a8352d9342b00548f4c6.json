{"ast":null,"code":"import \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/space/style\";\nimport _Space from \"antd/lib/space\";\nimport \"antd/lib/tag/style\";\nimport _Tag from \"antd/lib/tag\";\nvar _jsxFileName = \"D:\\\\IDEA workspace\\\\ZUA\\\\community-manage-react\\\\src\\\\pages\\\\community\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { dispatch } from \"jest-circus/build/state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: '社团名称',\n  dataIndex: 'name',\n  key: 'name',\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }, this)\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  key: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: '社团类型',\n  key: 'type',\n  dataIndex: 'type',\n  render: type => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: type.map(type => {\n      let color = type.length > 5 ? 'geekblue' : 'green';\n\n      if (type === 'loser') {\n        color = 'volcano';\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Tag, {\n        color: color,\n        children: type.toUpperCase()\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this)\n}, {\n  title: '操作',\n  key: 'manage',\n  render: () => /*#__PURE__*/_jsxDEV(_Space, {\n    size: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"\\u4FEE\\u6539\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"\\u5220\\u9664\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this)\n}]; // const data = [\n//     {\n//         key: '1',\n//         name: 'John Brown',\n//         age: 32,\n//         address: 'New York No. 1 Lake Park',\n//         type: ['nice', 'developer'],\n//     },\n//     {\n//         key: '2',\n//         name: 'Jim Green',\n//         age: 42,\n//         address: 'London No. 1 Lake Park',\n//         type: ['loser'],\n//     },\n//     {\n//         key: '3',\n//         name: 'Joe Black',\n//         age: 32,\n//         address: 'Sidney No. 1 Lake Park',\n//         type: ['cool', 'teacher'],\n//     },\n// ];\n\nclass Community extends Component {\n  componentWillMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"communityList\",\n      children: /*#__PURE__*/_jsxDEV(_Table, {\n        columns: columns,\n        pagination: {\n          position: ['bottomCenter']\n        },\n        dataSource: this.props.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapState = state => ({\n  data: state.getIn(['community', 'data'])\n});\n\nconst mapDispatch = dispatch => ({// handleLogin(values){\n  //     console.log(values);\n  //     dispatch(actionCreators.loginRequest(values));\n  // }\n});\n\nexport default connect(mapState, mapDispatch)(Community);","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/src/pages/community/index.js"],"names":["React","Component","connect","dispatch","columns","title","dataIndex","key","render","text","type","map","color","length","toUpperCase","Community","componentWillMount","position","props","data","mapState","state","getIn","mapDispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAIA,SAAQC,QAAR,QAAuB,yBAAvB;;AAGA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIC,EAAAA,GAAG,EAAE,MAHT;AAIIC,EAAAA,MAAM,EAAEC,IAAI,iBAAI;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAJpB,CADY,EAOZ;AACIJ,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,SAAS,EAAE,KAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CAPY,EAYZ;AACIF,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,SAAS,EAAE,SAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CAZY,EAiBZ;AACIF,EAAAA,KAAK,EAAE,MADX;AAEIE,EAAAA,GAAG,EAAE,MAFT;AAGID,EAAAA,SAAS,EAAE,MAHf;AAIIE,EAAAA,MAAM,EAAEE,IAAI,iBACR;AAAA,cACHA,IAAI,CAACC,GAAL,CAASD,IAAI,IAAI;AACd,UAAIE,KAAK,GAAGF,IAAI,CAACG,MAAL,GAAc,CAAd,GAAkB,UAAlB,GAA+B,OAA3C;;AACA,UAAIH,IAAI,KAAK,OAAb,EAAsB;AAClBE,QAAAA,KAAK,GAAG,SAAR;AACH;;AACD,0BACI;AAAK,QAAA,KAAK,EAAEA,KAAZ;AAAA,kBACKF,IAAI,CAACI,WAAL;AADL,SAAwBJ,IAAxB;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAVA;AADG;AAAA;AAAA;AAAA;AAAA;AALR,CAjBY,EAqCZ;AACIL,EAAAA,KAAK,EAAE,IADX;AAEIE,EAAAA,GAAG,EAAE,QAFT;AAGIC,EAAAA,MAAM,EAAE,mBACJ;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR,CArCY,CAAhB,C,CAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMO,SAAN,SAAwBd,SAAxB,CAAkC;AAE9Be,EAAAA,kBAAkB,GAAG,CAExB;;AAEGR,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BAEI;AACI,QAAA,OAAO,EAAEJ,OADb;AAEI,QAAA,UAAU,EAAE;AAAEa,UAAAA,QAAQ,EAAE,CAAE,cAAF;AAAZ,SAFhB;AAGI,QAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC;AAH3B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAlB6B;;AAqBlC,MAAMC,QAAQ,GAAIC,KAAD,KAAY;AACzBF,EAAAA,IAAI,EAAEE,KAAK,CAACC,KAAN,CAAY,CAAC,WAAD,EAAa,MAAb,CAAZ;AADmB,CAAZ,CAAjB;;AAGA,MAAMC,WAAW,GAAIpB,QAAD,KAAe,CAC/B;AACA;AACA;AACA;AAJ+B,CAAf,CAApB;;AAQA,eAAeD,OAAO,CAACkB,QAAD,EAAUG,WAAV,CAAP,CAA8BR,SAA9B,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nimport { Table, Tag, Space } from 'antd';\r\nimport {dispatch} from \"jest-circus/build/state\";\r\n\r\n\r\nconst columns = [\r\n    {\r\n        title: '社团名称',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n    },\r\n    {\r\n        title: '社团类型',\r\n        key: 'type',\r\n        dataIndex: 'type',\r\n        render: type => (\r\n            <span>\r\n        {type.map(type => {\r\n            let color = type.length > 5 ? 'geekblue' : 'green';\r\n            if (type === 'loser') {\r\n                color = 'volcano';\r\n            }\r\n            return (\r\n                <Tag color={color} key={type}>\r\n                    {type.toUpperCase()}\r\n                </Tag>\r\n            );\r\n        })}\r\n      </span>\r\n        ),\r\n    },\r\n    {\r\n        title: '操作',\r\n        key: 'manage',\r\n        render: () => (\r\n            <Space size=\"middle\">\r\n                <a>修改</a>\r\n                <a>删除</a>\r\n            </Space>\r\n        ),\r\n    },\r\n];\r\n\r\n// const data = [\r\n//     {\r\n//         key: '1',\r\n//         name: 'John Brown',\r\n//         age: 32,\r\n//         address: 'New York No. 1 Lake Park',\r\n//         type: ['nice', 'developer'],\r\n//     },\r\n//     {\r\n//         key: '2',\r\n//         name: 'Jim Green',\r\n//         age: 42,\r\n//         address: 'London No. 1 Lake Park',\r\n//         type: ['loser'],\r\n//     },\r\n//     {\r\n//         key: '3',\r\n//         name: 'Joe Black',\r\n//         age: 32,\r\n//         address: 'Sidney No. 1 Lake Park',\r\n//         type: ['cool', 'teacher'],\r\n//     },\r\n// ];\r\n\r\n\r\n\r\n\r\nclass Community extends Component {\r\n\r\n    componentWillMount() {\r\n\r\n}\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"communityList\">\r\n\r\n                <Table\r\n                    columns={columns}\r\n                    pagination={{ position: [ 'bottomCenter'] }}\r\n                    dataSource={this.props.data}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapState = (state) => ({\r\n    data: state.getIn(['community','data'])\r\n});\r\nconst mapDispatch = (dispatch) => ({\r\n    // handleLogin(values){\r\n    //     console.log(values);\r\n    //     dispatch(actionCreators.loginRequest(values));\r\n    // }\r\n\r\n})\r\n\r\nexport default connect(mapState,mapDispatch)(Community);"]},"metadata":{},"sourceType":"module"}