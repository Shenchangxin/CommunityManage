{"ast":null,"code":"import \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"D:\\\\IDEA workspace\\\\ZUA\\\\community-manage-react\\\\src\\\\pages\\\\register\\\\index.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst prefixSelector = /*#__PURE__*/_jsxDEV(_Form.Item, {\n  name: \"prefix\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(_Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      value: \"86\",\n      children: \"+86\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"87\",\n      children: \"+87\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 5\n}, this);\n\nconst onWebsiteChange = value => {};\n\nclass Register extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registerForm\",\n      children: /*#__PURE__*/_jsxDEV(_Form, { ...formItemLayout,\n        name: \"register\",\n        initialValues: {\n          residence: ['zhejiang', 'hangzhou', 'xihu'],\n          prefix: '86'\n        },\n        scrollToFirstError: true,\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"email\",\n          label: \"E-mail\",\n          rules: [{\n            type: 'email',\n            message: 'The input is not valid E-mail!'\n          }, {\n            required: true,\n            message: 'Please input your E-mail!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"password\",\n          label: \"Password\",\n          rules: [{\n            required: true,\n            message: 'Please input your password!'\n          }],\n          hasFeedback: true,\n          children: /*#__PURE__*/_jsxDEV(_Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"confirm\",\n          label: \"Confirm Password\",\n          dependencies: ['password'],\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: 'Please confirm your password!'\n          }, ({\n            getFieldValue\n          }) => ({\n            validator(_, value) {\n              if (!value || getFieldValue('password') === value) {\n                return Promise.resolve();\n              }\n\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\n            }\n\n          })],\n          children: /*#__PURE__*/_jsxDEV(_Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"nickname\",\n          label: \"Nickname\",\n          tooltip: \"What do you want others to call you?\",\n          rules: [{\n            required: true,\n            message: 'Please input your nickname!',\n            whitespace: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"phone\",\n          label: \"Phone Number\",\n          rules: [{\n            required: true,\n            message: 'Please input your phone number!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            addonBefore: prefixSelector,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          label: \"Captcha\",\n          extra: \"We must make sure that your are a human.\",\n          children: /*#__PURE__*/_jsxDEV(_Row, {\n            gutter: 8,\n            children: [/*#__PURE__*/_jsxDEV(_Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(_Form.Item, {\n                name: \"captcha\",\n                noStyle: true,\n                rules: [{\n                  required: true,\n                  message: 'Please input the captcha you got!'\n                }],\n                children: /*#__PURE__*/_jsxDEV(_Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(_Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                children: \"Get captcha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"agreement\",\n          valuePropName: \"checked\",\n          rules: [{\n            validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n          }],\n          ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(_Checkbox, {\n            children: [\"I have read the \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: \"agreement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, { ...tailFormItemLayout,\n          children: /*#__PURE__*/_jsxDEV(_Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/src/pages/register/index.js"],"names":["React","Component","Option","residences","value","label","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","width","onWebsiteChange","Register","render","residence","prefix","type","message","required","getFieldValue","validator","_","Promise","resolve","reject","Error","whitespace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Checkbox,\r\n    Button,\r\n    AutoComplete,\r\n} from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst residences = [\r\n    {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n            {\r\n                value: 'hangzhou',\r\n                label: 'Hangzhou',\r\n                children: [\r\n                    {\r\n                        value: 'xihu',\r\n                        label: 'West Lake',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n            {\r\n                value: 'nanjing',\r\n                label: 'Nanjing',\r\n                children: [\r\n                    {\r\n                        value: 'zhonghuamen',\r\n                        label: 'Zhong Hua Men',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\nconst prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n        <Select style={{ width: 70 }}>\r\n            <Option value=\"86\">+86</Option>\r\n            <Option value=\"87\">+87</Option>\r\n        </Select>\r\n    </Form.Item>\r\n);\r\n\r\n\r\n\r\nconst onWebsiteChange = (value: string) => {\r\n\r\n};\r\n\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"registerForm\">\r\n                <Form\r\n                    {...formItemLayout}\r\n\r\n                    name=\"register\"\r\n\r\n                    initialValues={{\r\n                        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                        prefix: '86',\r\n                    }}\r\n                    scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your E-mail!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirm Password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"nickname\"\r\n                        label=\"Nickname\"\r\n                        tooltip=\"What do you want others to call you?\"\r\n                        rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"Phone Number\"\r\n                        rules={[{ required: true, message: 'Please input your phone number!' }]}\r\n                    >\r\n                        <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n                        <Row gutter={8}>\r\n                            <Col span={12}>\r\n                                <Form.Item\r\n                                    name=\"captcha\"\r\n                                    noStyle\r\n                                    rules={[{ required: true, message: 'Please input the captcha you got!' }]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Button>Get captcha</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                        ]}\r\n                        {...tailFormItemLayout}\r\n                    >\r\n                        <Checkbox>\r\n                            I have read the <a href=\"\">agreement</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}