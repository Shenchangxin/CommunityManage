{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.addEventHandler = exports.dispatchSync = exports.dispatch = exports.setState = exports.getState = exports.ROOT_DESCRIBE_BLOCK_NAME = void 0;\n\nvar _types = require('./types');\n\nvar _utils = require('./utils');\n\nvar _eventHandler = _interopRequireDefault(require('./eventHandler'));\n\nvar _formatNodeAssertErrors = _interopRequireDefault(require('./formatNodeAssertErrors'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nconst eventHandlers = [_eventHandler.default, _formatNodeAssertErrors.default];\nconst ROOT_DESCRIBE_BLOCK_NAME = 'ROOT_DESCRIBE_BLOCK';\nexports.ROOT_DESCRIBE_BLOCK_NAME = ROOT_DESCRIBE_BLOCK_NAME;\nconst ROOT_DESCRIBE_BLOCK = (0, _utils.makeDescribe)(ROOT_DESCRIBE_BLOCK_NAME);\nconst INITIAL_STATE = {\n  currentDescribeBlock: ROOT_DESCRIBE_BLOCK,\n  currentlyRunningTest: null,\n  expand: undefined,\n  hasFocusedTests: false,\n  hasStarted: false,\n  includeTestLocationInResult: false,\n  parentProcess: null,\n  rootDescribeBlock: ROOT_DESCRIBE_BLOCK,\n  testNamePattern: null,\n  testTimeout: 5000,\n  unhandledErrors: []\n};\nglobal[_types.STATE_SYM] = INITIAL_STATE;\n\nconst getState = () => global[_types.STATE_SYM];\n\nexports.getState = getState;\n\nconst setState = state => global[_types.STATE_SYM] = state;\n\nexports.setState = setState;\n\nconst dispatch = async event => {\n  for (const handler of eventHandlers) {\n    await handler(event, getState());\n  }\n};\n\nexports.dispatch = dispatch;\n\nconst dispatchSync = event => {\n  for (const handler of eventHandlers) {\n    handler(event, getState());\n  }\n};\n\nexports.dispatchSync = dispatchSync;\n\nconst addEventHandler = handler => {\n  eventHandlers.push(handler);\n};\n\nexports.addEventHandler = addEventHandler;","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/jest-circus/build/state.js"],"names":["Object","defineProperty","exports","value","addEventHandler","dispatchSync","dispatch","setState","getState","ROOT_DESCRIBE_BLOCK_NAME","_types","require","_utils","_eventHandler","_interopRequireDefault","_formatNodeAssertErrors","obj","__esModule","default","eventHandlers","ROOT_DESCRIBE_BLOCK","makeDescribe","INITIAL_STATE","currentDescribeBlock","currentlyRunningTest","expand","undefined","hasFocusedTests","hasStarted","includeTestLocationInResult","parentProcess","rootDescribeBlock","testNamePattern","testTimeout","unhandledErrors","global","STATE_SYM","state","event","handler","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACI,QAAR,GAAmBJ,OAAO,CAACK,QAAR,GAAmBL,OAAO,CAACM,QAAR,GAAmBN,OAAO,CAACO,wBAAR,GAAmC,KAAK,CAAlJ;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIE,aAAa,GAAGC,sBAAsB,CAACH,OAAO,CAAC,gBAAD,CAAR,CAA1C;;AAEA,IAAII,uBAAuB,GAAGD,sBAAsB,CAClDH,OAAO,CAAC,0BAAD,CAD2C,CAApD;;AAIA,SAASG,sBAAT,CAAgCE,GAAhC,EAAqC;AACnC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAACE,IAAAA,OAAO,EAAEF;AAAV,GAArC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMG,aAAa,GAAG,CAACN,aAAa,CAACK,OAAf,EAAwBH,uBAAuB,CAACG,OAAhD,CAAtB;AACA,MAAMT,wBAAwB,GAAG,qBAAjC;AACAP,OAAO,CAACO,wBAAR,GAAmCA,wBAAnC;AACA,MAAMW,mBAAmB,GAAG,CAAC,GAAGR,MAAM,CAACS,YAAX,EAAyBZ,wBAAzB,CAA5B;AACA,MAAMa,aAAa,GAAG;AACpBC,EAAAA,oBAAoB,EAAEH,mBADF;AAEpBI,EAAAA,oBAAoB,EAAE,IAFF;AAGpBC,EAAAA,MAAM,EAAEC,SAHY;AAIpBC,EAAAA,eAAe,EAAE,KAJG;AAKpBC,EAAAA,UAAU,EAAE,KALQ;AAMpBC,EAAAA,2BAA2B,EAAE,KANT;AAOpBC,EAAAA,aAAa,EAAE,IAPK;AAQpBC,EAAAA,iBAAiB,EAAEX,mBARC;AASpBY,EAAAA,eAAe,EAAE,IATG;AAUpBC,EAAAA,WAAW,EAAE,IAVO;AAWpBC,EAAAA,eAAe,EAAE;AAXG,CAAtB;AAaAC,MAAM,CAACzB,MAAM,CAAC0B,SAAR,CAAN,GAA2Bd,aAA3B;;AAEA,MAAMd,QAAQ,GAAG,MAAM2B,MAAM,CAACzB,MAAM,CAAC0B,SAAR,CAA7B;;AAEAlC,OAAO,CAACM,QAAR,GAAmBA,QAAnB;;AAEA,MAAMD,QAAQ,GAAG8B,KAAK,IAAKF,MAAM,CAACzB,MAAM,CAAC0B,SAAR,CAAN,GAA2BC,KAAtD;;AAEAnC,OAAO,CAACK,QAAR,GAAmBA,QAAnB;;AAEA,MAAMD,QAAQ,GAAG,MAAMgC,KAAN,IAAe;AAC9B,OAAK,MAAMC,OAAX,IAAsBpB,aAAtB,EAAqC;AACnC,UAAMoB,OAAO,CAACD,KAAD,EAAQ9B,QAAQ,EAAhB,CAAb;AACD;AACF,CAJD;;AAMAN,OAAO,CAACI,QAAR,GAAmBA,QAAnB;;AAEA,MAAMD,YAAY,GAAGiC,KAAK,IAAI;AAC5B,OAAK,MAAMC,OAAX,IAAsBpB,aAAtB,EAAqC;AACnCoB,IAAAA,OAAO,CAACD,KAAD,EAAQ9B,QAAQ,EAAhB,CAAP;AACD;AACF,CAJD;;AAMAN,OAAO,CAACG,YAAR,GAAuBA,YAAvB;;AAEA,MAAMD,eAAe,GAAGmC,OAAO,IAAI;AACjCpB,EAAAA,aAAa,CAACqB,IAAd,CAAmBD,OAAnB;AACD,CAFD;;AAIArC,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.addEventHandler = exports.dispatchSync = exports.dispatch = exports.setState = exports.getState = exports.ROOT_DESCRIBE_BLOCK_NAME = void 0;\n\nvar _types = require('./types');\n\nvar _utils = require('./utils');\n\nvar _eventHandler = _interopRequireDefault(require('./eventHandler'));\n\nvar _formatNodeAssertErrors = _interopRequireDefault(\n  require('./formatNodeAssertErrors')\n);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst eventHandlers = [_eventHandler.default, _formatNodeAssertErrors.default];\nconst ROOT_DESCRIBE_BLOCK_NAME = 'ROOT_DESCRIBE_BLOCK';\nexports.ROOT_DESCRIBE_BLOCK_NAME = ROOT_DESCRIBE_BLOCK_NAME;\nconst ROOT_DESCRIBE_BLOCK = (0, _utils.makeDescribe)(ROOT_DESCRIBE_BLOCK_NAME);\nconst INITIAL_STATE = {\n  currentDescribeBlock: ROOT_DESCRIBE_BLOCK,\n  currentlyRunningTest: null,\n  expand: undefined,\n  hasFocusedTests: false,\n  hasStarted: false,\n  includeTestLocationInResult: false,\n  parentProcess: null,\n  rootDescribeBlock: ROOT_DESCRIBE_BLOCK,\n  testNamePattern: null,\n  testTimeout: 5000,\n  unhandledErrors: []\n};\nglobal[_types.STATE_SYM] = INITIAL_STATE;\n\nconst getState = () => global[_types.STATE_SYM];\n\nexports.getState = getState;\n\nconst setState = state => (global[_types.STATE_SYM] = state);\n\nexports.setState = setState;\n\nconst dispatch = async event => {\n  for (const handler of eventHandlers) {\n    await handler(event, getState());\n  }\n};\n\nexports.dispatch = dispatch;\n\nconst dispatchSync = event => {\n  for (const handler of eventHandlers) {\n    handler(event, getState());\n  }\n};\n\nexports.dispatchSync = dispatchSync;\n\nconst addEventHandler = handler => {\n  eventHandlers.push(handler);\n};\n\nexports.addEventHandler = addEventHandler;\n"]},"metadata":{},"sourceType":"script"}