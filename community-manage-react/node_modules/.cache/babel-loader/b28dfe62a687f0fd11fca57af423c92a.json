{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as constants from './constants';\nconst defaultState = fromJS({\n  data: [],\n  getState: false,\n  communityId: '',\n  message: '',\n  visible: false,\n  loading: false,\n  deleteState: false,\n  updateVisible: false,\n  updateState: false\n});\n\nconst getCommunitySuccess = (state, action) => {\n  return state.merge({\n    'getState': action.getState,\n    'data': action.data\n  });\n};\n\nconst getCommunityError = (state, action) => {\n  return state.merge({\n    'getState': action.getState\n  });\n};\n\nconst updateCommunityById = (state, action) => {\n  return state.merge({\n    'communityId': action.communityId\n  });\n};\n\nconst searchCommunitySuccess = (state, action) => {\n  return state.merge({\n    'data': action.data\n  });\n};\n\nconst searchCommunityError = (state, action) => {\n  return state.merge({\n    'message': action.message\n  });\n};\n\nconst addCommunityError = (state, action) => {\n  return state.merge({\n    'message': action.message\n  });\n};\n\nconst addCommunitySuccess = (state, action) => {\n  return state.merge({\n    'visible': action.visible,\n    'loading': action.loading\n  });\n};\n\nconst deleteCommunitySuccess = (state, action) => {\n  return state.merge({\n    'deleteState': action.deleteState\n  });\n};\n\nconst deleteCommunityError = (state, action) => {\n  return state.merge({\n    'message': action.message\n  });\n};\n\nconst updateCommunitySuccess = (state, action) => {\n  return state.merge({\n    'updateState': action.updateState\n  });\n};\n\nconst updateCommunityError = (state, action) => {\n  return state.merge({\n    'updateState': action.updateState,\n    'message': action.message\n  });\n};\n\nconst showModal = (state, action) => {\n  return state.merge({\n    'visible': action.visible\n  });\n};\n\nconst cancelShowModal = (state, action) => {\n  return state.merge({\n    'visible': action.visible\n  });\n};\n\nconst showUpdateModal = (state, action) => {\n  return state.merge({\n    'updateVisible': action.updateVisible\n  });\n};\n\nconst cancelShowUpdateModal = (state, action) => {\n  return state.merge({\n    'updateVisible': action.updateVisible\n  });\n};\n\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case constants.GET_COMMUNITY_SUCCESS:\n      return getCommunitySuccess(state, action);\n\n    case constants.GET_COMMUNITY_ERROR:\n      return getCommunityError(state, action);\n\n    case constants.UPDATE_COMMUNITY_ID:\n      return updateCommunityById(state, action);\n\n    case constants.SEARCH_COMMUNITY_SUCCESS:\n      return searchCommunitySuccess(state, action);\n\n    case constants.SEARCH_COMMUNITY_ERROR:\n      return searchCommunityError(state, action);\n\n    case constants.ADD_COMMUNITY_SUCCESS:\n      return addCommunitySuccess(state, action);\n\n    case constants.ADD_COMMUNITY_ERROR:\n      return addCommunityError(state, action);\n\n    case constants.DELETE_COMMUNITY_SUCCESS:\n      return deleteCommunitySuccess(state, action);\n\n    case constants.DELETE_COMMUNITY_ERROR:\n      return deleteCommunityError(state, action);\n\n    case constants.UPDATE_COMMUNITY_SUCCESS:\n      return updateCommunitySuccess(state, action);\n\n    case constants.UPDATE_COMMUNITY_ERROR:\n      return updateCommunityError(state, action);\n\n    case constants.SHOW_MODAL:\n      return showModal(state, action);\n\n    case constants.CANCEL_SHOW_MODAL:\n      return cancelShowModal(state, action);\n\n    case constants.SHOW_UPDATE_MODAL:\n      return showUpdateModal(state, action);\n\n    case constants.CANCEL_SHOW_UPDATE_MODAL:\n      return cancelShowUpdateModal(state, action);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/src/pages/community/store/reducer.js"],"names":["fromJS","constants","defaultState","data","getState","communityId","message","visible","loading","deleteState","updateVisible","updateState","getCommunitySuccess","state","action","merge","getCommunityError","updateCommunityById","searchCommunitySuccess","searchCommunityError","addCommunityError","addCommunitySuccess","deleteCommunitySuccess","deleteCommunityError","updateCommunitySuccess","updateCommunityError","showModal","cancelShowModal","showUpdateModal","cancelShowUpdateModal","type","GET_COMMUNITY_SUCCESS","GET_COMMUNITY_ERROR","UPDATE_COMMUNITY_ID","SEARCH_COMMUNITY_SUCCESS","SEARCH_COMMUNITY_ERROR","ADD_COMMUNITY_SUCCESS","ADD_COMMUNITY_ERROR","DELETE_COMMUNITY_SUCCESS","DELETE_COMMUNITY_ERROR","UPDATE_COMMUNITY_SUCCESS","UPDATE_COMMUNITY_ERROR","SHOW_MODAL","CANCEL_SHOW_MODAL","SHOW_UPDATE_MODAL","CANCEL_SHOW_UPDATE_MODAL"],"mappings":"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","sourcesContent":["import { fromJS } from 'immutable';\r\nimport * as constants from './constants';\r\n\r\nconst defaultState = fromJS ({\r\n    data:[],\r\n    getState: false,\r\n    communityId:'',\r\n    message: '',\r\n    visible: false,\r\n    loading: false,\r\n    deleteState: false,\r\n    updateVisible: false,\r\n    updateState: false,\r\n});\r\n\r\nconst getCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'getState': action.getState,\r\n        'data': action.data\r\n    });\r\n}\r\nconst getCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'getState': action.getState,\r\n    });\r\n}\r\nconst updateCommunityById =(state,action)=>{\r\n    return state.merge({\r\n        'communityId': action.communityId\r\n    });\r\n}\r\nconst searchCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'data': action.data\r\n    });\r\n}\r\nconst searchCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'message': action.message\r\n    });\r\n}\r\nconst addCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'message': action.message\r\n    });\r\n}\r\nconst addCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'visible': action.visible,\r\n        'loading': action.loading\r\n    });\r\n}\r\nconst deleteCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'deleteState': action.deleteState\r\n    });\r\n}\r\nconst deleteCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'message': action.message\r\n    });\r\n}\r\nconst updateCommunitySuccess =(state,action)=>{\r\n    return state.merge({\r\n        'updateState': action.updateState\r\n    });\r\n}\r\nconst updateCommunityError =(state,action)=>{\r\n    return state.merge({\r\n        'updateState': action.updateState,\r\n        'message': action.message\r\n    });\r\n}\r\nconst showModal =(state,action)=>{\r\n    return state.merge({\r\n        'visible': action.visible,\r\n    });\r\n}\r\nconst cancelShowModal =(state,action)=>{\r\n    return state.merge({\r\n        'visible': action.visible,\r\n    });\r\n}\r\nconst showUpdateModal =(state,action)=>{\r\n    return state.merge({\r\n        'updateVisible': action.updateVisible,\r\n    });\r\n}\r\nconst cancelShowUpdateModal =(state,action)=>{\r\n    return state.merge({\r\n        'updateVisible': action.updateVisible,\r\n    });\r\n}\r\n\r\nexport default (state = defaultState,action) => {\r\n    switch (action.type) {\r\n        case constants.GET_COMMUNITY_SUCCESS:\r\n            return getCommunitySuccess(state,action)\r\n        case constants.GET_COMMUNITY_ERROR:\r\n            return getCommunityError(state, action)\r\n        case constants.UPDATE_COMMUNITY_ID:\r\n            return updateCommunityById(state, action)\r\n        case constants.SEARCH_COMMUNITY_SUCCESS:\r\n            return searchCommunitySuccess(state, action)\r\n        case constants.SEARCH_COMMUNITY_ERROR:\r\n            return searchCommunityError(state, action)\r\n        case constants.ADD_COMMUNITY_SUCCESS:\r\n            return addCommunitySuccess(state, action)\r\n        case constants.ADD_COMMUNITY_ERROR:\r\n            return addCommunityError(state, action)\r\n        case constants.DELETE_COMMUNITY_SUCCESS:\r\n            return deleteCommunitySuccess(state, action)\r\n        case constants.DELETE_COMMUNITY_ERROR:\r\n            return deleteCommunityError(state, action)\r\n        case constants.UPDATE_COMMUNITY_SUCCESS:\r\n            return updateCommunitySuccess(state, action)\r\n        case constants.UPDATE_COMMUNITY_ERROR:\r\n            return updateCommunityError(state, action)\r\n        case constants.SHOW_MODAL:\r\n            return showModal(state, action)\r\n        case constants.CANCEL_SHOW_MODAL:\r\n            return cancelShowModal(state, action)\r\n        case constants.SHOW_UPDATE_MODAL:\r\n            return showUpdateModal(state, action)\r\n        case constants.CANCEL_SHOW_UPDATE_MODAL:\r\n            return cancelShowUpdateModal(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}