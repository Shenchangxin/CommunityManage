{"ast":null,"code":"'use strict';\n\nvar matcherUtils = _interopRequireWildcard(require('jest-matcher-utils'));\n\nvar _asymmetricMatchers = require('./asymmetricMatchers');\n\nvar _extractExpectedAssertionsErrors = _interopRequireDefault(require('./extractExpectedAssertionsErrors'));\n\nvar _jasmineUtils = require('./jasmineUtils');\n\nvar _jestMatchersObject = require('./jestMatchersObject');\n\nvar _matchers = _interopRequireDefault(require('./matchers'));\n\nvar _spyMatchers = _interopRequireDefault(require('./spyMatchers'));\n\nvar _toThrowMatchers = _interopRequireWildcard(require('./toThrowMatchers'));\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== 'object' && typeof obj !== 'function') {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass JestAssertionError extends Error {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, 'matcherResult', void 0);\n  }\n\n}\n\nconst isPromise = obj => !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n\nconst createToThrowErrorMatchingSnapshotMatcher = function (matcher) {\n  return function (received, testNameOrInlineSnapshot) {\n    return matcher.apply(this, [received, testNameOrInlineSnapshot, true]);\n  };\n};\n\nconst getPromiseMatcher = (name, matcher) => {\n  if (name === 'toThrow' || name === 'toThrowError') {\n    return (0, _toThrowMatchers.createMatcher)(name, true);\n  } else if (name === 'toThrowErrorMatchingSnapshot' || name === 'toThrowErrorMatchingInlineSnapshot') {\n    return createToThrowErrorMatchingSnapshotMatcher(matcher);\n  }\n\n  return null;\n};\n\nconst expect = (actual, ...rest) => {\n  if (rest.length !== 0) {\n    throw new Error('Expect takes at most one argument.');\n  }\n\n  const allMatchers = (0, _jestMatchersObject.getMatchers)();\n  const expectation = {\n    not: {},\n    rejects: {\n      not: {}\n    },\n    resolves: {\n      not: {}\n    }\n  };\n  const err = new JestAssertionError();\n  Object.keys(allMatchers).forEach(name => {\n    const matcher = allMatchers[name];\n    const promiseMatcher = getPromiseMatcher(name, matcher) || matcher;\n    expectation[name] = makeThrowingMatcher(matcher, false, '', actual);\n    expectation.not[name] = makeThrowingMatcher(matcher, true, '', actual);\n    expectation.resolves[name] = makeResolveMatcher(name, promiseMatcher, false, actual, err);\n    expectation.resolves.not[name] = makeResolveMatcher(name, promiseMatcher, true, actual, err);\n    expectation.rejects[name] = makeRejectMatcher(name, promiseMatcher, false, actual, err);\n    expectation.rejects.not[name] = makeRejectMatcher(name, promiseMatcher, true, actual, err);\n  });\n  return expectation;\n};\n\nconst getMessage = message => message && message() || matcherUtils.RECEIVED_COLOR('No message was specified for this matcher.');\n\nconst makeResolveMatcher = (matcherName, matcher, isNot, actual, outerErr) => (...args) => {\n  const options = {\n    isNot,\n    promise: 'resolves'\n  };\n\n  if (!isPromise(actual)) {\n    throw new JestAssertionError(matcherUtils.matcherErrorMessage(matcherUtils.matcherHint(matcherName, undefined, '', options), `${matcherUtils.RECEIVED_COLOR('received')} value must be a promise`, matcherUtils.printWithType('Received', actual, matcherUtils.printReceived)));\n  }\n\n  const innerErr = new JestAssertionError();\n  return actual.then(result => makeThrowingMatcher(matcher, isNot, 'resolves', result, innerErr).apply(null, args), reason => {\n    outerErr.message = matcherUtils.matcherHint(matcherName, undefined, '', options) + '\\n\\n' + `Received promise rejected instead of resolved\\n` + `Rejected to value: ${matcherUtils.printReceived(reason)}`;\n    return Promise.reject(outerErr);\n  });\n};\n\nconst makeRejectMatcher = (matcherName, matcher, isNot, actual, outerErr) => (...args) => {\n  const options = {\n    isNot,\n    promise: 'rejects'\n  };\n  const actualWrapper = typeof actual === 'function' ? actual() : actual;\n\n  if (!isPromise(actualWrapper)) {\n    throw new JestAssertionError(matcherUtils.matcherErrorMessage(matcherUtils.matcherHint(matcherName, undefined, '', options), `${matcherUtils.RECEIVED_COLOR('received')} value must be a promise or a function returning a promise`, matcherUtils.printWithType('Received', actual, matcherUtils.printReceived)));\n  }\n\n  const innerErr = new JestAssertionError();\n  return actualWrapper.then(result => {\n    outerErr.message = matcherUtils.matcherHint(matcherName, undefined, '', options) + '\\n\\n' + `Received promise resolved instead of rejected\\n` + `Resolved to value: ${matcherUtils.printReceived(result)}`;\n    return Promise.reject(outerErr);\n  }, reason => makeThrowingMatcher(matcher, isNot, 'rejects', reason, innerErr).apply(null, args));\n};\n\nconst makeThrowingMatcher = (matcher, isNot, promise, actual, err) => function throwingMatcher(...args) {\n  let throws = true;\n  const utils = { ...matcherUtils,\n    iterableEquality: _utils.iterableEquality,\n    subsetEquality: _utils.subsetEquality\n  };\n  const matcherContext = {\n    // When throws is disabled, the matcher will not throw errors during test\n    // execution but instead add them to the global matcher state. If a\n    // matcher throws, test execution is normally stopped immediately. The\n    // snapshot matcher uses it because we want to log all snapshot\n    // failures in a test.\n    dontThrow: () => throws = false,\n    ...(0, _jestMatchersObject.getState)(),\n    equals: _jasmineUtils.equals,\n    error: err,\n    isNot,\n    promise,\n    utils\n  };\n\n  const processResult = (result, asyncError) => {\n    _validateResult(result);\n\n    (0, _jestMatchersObject.getState)().assertionCalls++;\n\n    if (result.pass && isNot || !result.pass && !isNot) {\n      // XOR\n      const message = getMessage(result.message);\n      let error;\n\n      if (err) {\n        error = err;\n        error.message = message;\n      } else if (asyncError) {\n        error = asyncError;\n        error.message = message;\n      } else {\n        error = new JestAssertionError(message); // Try to remove this function from the stack trace frame.\n        // Guard for some environments (browsers) that do not support this feature.\n\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(error, throwingMatcher);\n        }\n      } // Passing the result of the matcher with the error so that a custom\n      // reporter could access the actual and expected objects of the result\n      // for example in order to display a custom visual diff\n\n\n      error.matcherResult = result;\n\n      if (throws) {\n        throw error;\n      } else {\n        (0, _jestMatchersObject.getState)().suppressedErrors.push(error);\n      }\n    }\n  };\n\n  const handleError = error => {\n    if (matcher[_jestMatchersObject.INTERNAL_MATCHER_FLAG] === true && !(error instanceof JestAssertionError) && error.name !== 'PrettyFormatPluginError' && // Guard for some environments (browsers) that do not support this feature.\n    Error.captureStackTrace) {\n      // Try to remove this and deeper functions from the stack trace frame.\n      Error.captureStackTrace(error, throwingMatcher);\n    }\n\n    throw error;\n  };\n\n  let potentialResult;\n\n  try {\n    potentialResult = matcher[_jestMatchersObject.INTERNAL_MATCHER_FLAG] === true ? matcher.call(matcherContext, actual, ...args) // It's a trap specifically for inline snapshot to capture this name\n    : // in the stack trace, so that it can correctly get the custom matcher\n    // function call.\n    function __EXTERNAL_MATCHER_TRAP__() {\n      return matcher.call(matcherContext, actual, ...args);\n    }();\n\n    if (isPromise(potentialResult)) {\n      const asyncResult = potentialResult;\n      const asyncError = new JestAssertionError();\n\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(asyncError, throwingMatcher);\n      }\n\n      return asyncResult.then(aResult => processResult(aResult, asyncError)).catch(handleError);\n    } else {\n      const syncResult = potentialResult;\n      return processResult(syncResult);\n    }\n  } catch (error) {\n    return handleError(error);\n  }\n};\n\nexpect.extend = matchers => (0, _jestMatchersObject.setMatchers)(matchers, false, expect);\n\nexpect.anything = _asymmetricMatchers.anything;\nexpect.any = _asymmetricMatchers.any;\nexpect.not = {\n  arrayContaining: _asymmetricMatchers.arrayNotContaining,\n  objectContaining: _asymmetricMatchers.objectNotContaining,\n  stringContaining: _asymmetricMatchers.stringNotContaining,\n  stringMatching: _asymmetricMatchers.stringNotMatching\n};\nexpect.objectContaining = _asymmetricMatchers.objectContaining;\nexpect.arrayContaining = _asymmetricMatchers.arrayContaining;\nexpect.stringContaining = _asymmetricMatchers.stringContaining;\nexpect.stringMatching = _asymmetricMatchers.stringMatching;\n\nconst _validateResult = result => {\n  if (typeof result !== 'object' || typeof result.pass !== 'boolean' || result.message && typeof result.message !== 'string' && typeof result.message !== 'function') {\n    throw new Error('Unexpected return from a matcher function.\\n' + 'Matcher functions should ' + 'return an object in the following format:\\n' + '  {message?: string | function, pass: boolean}\\n' + `'${matcherUtils.stringify(result)}' was returned`);\n  }\n};\n\nfunction assertions(expected) {\n  const error = new Error();\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(error, assertions);\n  }\n\n  (0, _jestMatchersObject.getState)().expectedAssertionsNumber = expected;\n  (0, _jestMatchersObject.getState)().expectedAssertionsNumberError = error;\n}\n\nfunction hasAssertions(...args) {\n  const error = new Error();\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(error, hasAssertions);\n  }\n\n  matcherUtils.ensureNoExpected(args[0], '.hasAssertions');\n  (0, _jestMatchersObject.getState)().isExpectingAssertions = true;\n  (0, _jestMatchersObject.getState)().isExpectingAssertionsError = error;\n} // add default jest matchers\n\n\n(0, _jestMatchersObject.setMatchers)(_matchers.default, true, expect);\n(0, _jestMatchersObject.setMatchers)(_spyMatchers.default, true, expect);\n(0, _jestMatchersObject.setMatchers)(_toThrowMatchers.default, true, expect);\n\nexpect.addSnapshotSerializer = () => void 0;\n\nexpect.assertions = assertions;\nexpect.hasAssertions = hasAssertions;\nexpect.getState = _jestMatchersObject.getState;\nexpect.setState = _jestMatchersObject.setState;\nexpect.extractExpectedAssertionsErrors = _extractExpectedAssertionsErrors.default;\nconst expectExport = expect;\nmodule.exports = expectExport;","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/expect/build/index.js"],"names":["matcherUtils","_interopRequireWildcard","require","_asymmetricMatchers","_extractExpectedAssertionsErrors","_interopRequireDefault","_jasmineUtils","_jestMatchersObject","_matchers","_spyMatchers","_toThrowMatchers","_utils","obj","__esModule","default","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Symbol","global","Promise","for","_defineProperty","value","enumerable","configurable","writable","JestAssertionError","Error","constructor","args","isPromise","then","createToThrowErrorMatchingSnapshotMatcher","matcher","received","testNameOrInlineSnapshot","apply","getPromiseMatcher","name","createMatcher","expect","actual","rest","length","allMatchers","getMatchers","expectation","not","rejects","resolves","err","keys","forEach","promiseMatcher","makeThrowingMatcher","makeResolveMatcher","makeRejectMatcher","getMessage","message","RECEIVED_COLOR","matcherName","isNot","outerErr","options","promise","matcherErrorMessage","matcherHint","undefined","printWithType","printReceived","innerErr","result","reason","reject","actualWrapper","throwingMatcher","throws","utils","iterableEquality","subsetEquality","matcherContext","dontThrow","getState","equals","error","processResult","asyncError","_validateResult","assertionCalls","pass","captureStackTrace","matcherResult","suppressedErrors","push","handleError","INTERNAL_MATCHER_FLAG","potentialResult","__EXTERNAL_MATCHER_TRAP__","asyncResult","aResult","catch","syncResult","extend","matchers","setMatchers","anything","any","arrayContaining","arrayNotContaining","objectContaining","objectNotContaining","stringContaining","stringNotContaining","stringMatching","stringNotMatching","stringify","assertions","expected","expectedAssertionsNumber","expectedAssertionsNumberError","hasAssertions","ensureNoExpected","isExpectingAssertions","isExpectingAssertionsError","addSnapshotSerializer","setState","extractExpectedAssertionsErrors","expectExport","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar matcherUtils = _interopRequireWildcard(require('jest-matcher-utils'));\n\nvar _asymmetricMatchers = require('./asymmetricMatchers');\n\nvar _extractExpectedAssertionsErrors = _interopRequireDefault(\n  require('./extractExpectedAssertionsErrors')\n);\n\nvar _jasmineUtils = require('./jasmineUtils');\n\nvar _jestMatchersObject = require('./jestMatchersObject');\n\nvar _matchers = _interopRequireDefault(require('./matchers'));\n\nvar _spyMatchers = _interopRequireDefault(require('./spyMatchers'));\n\nvar _toThrowMatchers = _interopRequireWildcard(require('./toThrowMatchers'));\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass JestAssertionError extends Error {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, 'matcherResult', void 0);\n  }\n}\n\nconst isPromise = obj =>\n  !!obj &&\n  (typeof obj === 'object' || typeof obj === 'function') &&\n  typeof obj.then === 'function';\n\nconst createToThrowErrorMatchingSnapshotMatcher = function (matcher) {\n  return function (received, testNameOrInlineSnapshot) {\n    return matcher.apply(this, [received, testNameOrInlineSnapshot, true]);\n  };\n};\n\nconst getPromiseMatcher = (name, matcher) => {\n  if (name === 'toThrow' || name === 'toThrowError') {\n    return (0, _toThrowMatchers.createMatcher)(name, true);\n  } else if (\n    name === 'toThrowErrorMatchingSnapshot' ||\n    name === 'toThrowErrorMatchingInlineSnapshot'\n  ) {\n    return createToThrowErrorMatchingSnapshotMatcher(matcher);\n  }\n\n  return null;\n};\n\nconst expect = (actual, ...rest) => {\n  if (rest.length !== 0) {\n    throw new Error('Expect takes at most one argument.');\n  }\n\n  const allMatchers = (0, _jestMatchersObject.getMatchers)();\n  const expectation = {\n    not: {},\n    rejects: {\n      not: {}\n    },\n    resolves: {\n      not: {}\n    }\n  };\n  const err = new JestAssertionError();\n  Object.keys(allMatchers).forEach(name => {\n    const matcher = allMatchers[name];\n    const promiseMatcher = getPromiseMatcher(name, matcher) || matcher;\n    expectation[name] = makeThrowingMatcher(matcher, false, '', actual);\n    expectation.not[name] = makeThrowingMatcher(matcher, true, '', actual);\n    expectation.resolves[name] = makeResolveMatcher(\n      name,\n      promiseMatcher,\n      false,\n      actual,\n      err\n    );\n    expectation.resolves.not[name] = makeResolveMatcher(\n      name,\n      promiseMatcher,\n      true,\n      actual,\n      err\n    );\n    expectation.rejects[name] = makeRejectMatcher(\n      name,\n      promiseMatcher,\n      false,\n      actual,\n      err\n    );\n    expectation.rejects.not[name] = makeRejectMatcher(\n      name,\n      promiseMatcher,\n      true,\n      actual,\n      err\n    );\n  });\n  return expectation;\n};\n\nconst getMessage = message =>\n  (message && message()) ||\n  matcherUtils.RECEIVED_COLOR('No message was specified for this matcher.');\n\nconst makeResolveMatcher = (matcherName, matcher, isNot, actual, outerErr) => (\n  ...args\n) => {\n  const options = {\n    isNot,\n    promise: 'resolves'\n  };\n\n  if (!isPromise(actual)) {\n    throw new JestAssertionError(\n      matcherUtils.matcherErrorMessage(\n        matcherUtils.matcherHint(matcherName, undefined, '', options),\n        `${matcherUtils.RECEIVED_COLOR('received')} value must be a promise`,\n        matcherUtils.printWithType(\n          'Received',\n          actual,\n          matcherUtils.printReceived\n        )\n      )\n    );\n  }\n\n  const innerErr = new JestAssertionError();\n  return actual.then(\n    result =>\n      makeThrowingMatcher(matcher, isNot, 'resolves', result, innerErr).apply(\n        null,\n        args\n      ),\n    reason => {\n      outerErr.message =\n        matcherUtils.matcherHint(matcherName, undefined, '', options) +\n        '\\n\\n' +\n        `Received promise rejected instead of resolved\\n` +\n        `Rejected to value: ${matcherUtils.printReceived(reason)}`;\n      return Promise.reject(outerErr);\n    }\n  );\n};\n\nconst makeRejectMatcher = (matcherName, matcher, isNot, actual, outerErr) => (\n  ...args\n) => {\n  const options = {\n    isNot,\n    promise: 'rejects'\n  };\n  const actualWrapper = typeof actual === 'function' ? actual() : actual;\n\n  if (!isPromise(actualWrapper)) {\n    throw new JestAssertionError(\n      matcherUtils.matcherErrorMessage(\n        matcherUtils.matcherHint(matcherName, undefined, '', options),\n        `${matcherUtils.RECEIVED_COLOR(\n          'received'\n        )} value must be a promise or a function returning a promise`,\n        matcherUtils.printWithType(\n          'Received',\n          actual,\n          matcherUtils.printReceived\n        )\n      )\n    );\n  }\n\n  const innerErr = new JestAssertionError();\n  return actualWrapper.then(\n    result => {\n      outerErr.message =\n        matcherUtils.matcherHint(matcherName, undefined, '', options) +\n        '\\n\\n' +\n        `Received promise resolved instead of rejected\\n` +\n        `Resolved to value: ${matcherUtils.printReceived(result)}`;\n      return Promise.reject(outerErr);\n    },\n    reason =>\n      makeThrowingMatcher(matcher, isNot, 'rejects', reason, innerErr).apply(\n        null,\n        args\n      )\n  );\n};\n\nconst makeThrowingMatcher = (matcher, isNot, promise, actual, err) =>\n  function throwingMatcher(...args) {\n    let throws = true;\n    const utils = {\n      ...matcherUtils,\n      iterableEquality: _utils.iterableEquality,\n      subsetEquality: _utils.subsetEquality\n    };\n    const matcherContext = {\n      // When throws is disabled, the matcher will not throw errors during test\n      // execution but instead add them to the global matcher state. If a\n      // matcher throws, test execution is normally stopped immediately. The\n      // snapshot matcher uses it because we want to log all snapshot\n      // failures in a test.\n      dontThrow: () => (throws = false),\n      ...(0, _jestMatchersObject.getState)(),\n      equals: _jasmineUtils.equals,\n      error: err,\n      isNot,\n      promise,\n      utils\n    };\n\n    const processResult = (result, asyncError) => {\n      _validateResult(result);\n\n      (0, _jestMatchersObject.getState)().assertionCalls++;\n\n      if ((result.pass && isNot) || (!result.pass && !isNot)) {\n        // XOR\n        const message = getMessage(result.message);\n        let error;\n\n        if (err) {\n          error = err;\n          error.message = message;\n        } else if (asyncError) {\n          error = asyncError;\n          error.message = message;\n        } else {\n          error = new JestAssertionError(message); // Try to remove this function from the stack trace frame.\n          // Guard for some environments (browsers) that do not support this feature.\n\n          if (Error.captureStackTrace) {\n            Error.captureStackTrace(error, throwingMatcher);\n          }\n        } // Passing the result of the matcher with the error so that a custom\n        // reporter could access the actual and expected objects of the result\n        // for example in order to display a custom visual diff\n\n        error.matcherResult = result;\n\n        if (throws) {\n          throw error;\n        } else {\n          (0, _jestMatchersObject.getState)().suppressedErrors.push(error);\n        }\n      }\n    };\n\n    const handleError = error => {\n      if (\n        matcher[_jestMatchersObject.INTERNAL_MATCHER_FLAG] === true &&\n        !(error instanceof JestAssertionError) &&\n        error.name !== 'PrettyFormatPluginError' && // Guard for some environments (browsers) that do not support this feature.\n        Error.captureStackTrace\n      ) {\n        // Try to remove this and deeper functions from the stack trace frame.\n        Error.captureStackTrace(error, throwingMatcher);\n      }\n\n      throw error;\n    };\n\n    let potentialResult;\n\n    try {\n      potentialResult =\n        matcher[_jestMatchersObject.INTERNAL_MATCHER_FLAG] === true\n          ? matcher.call(matcherContext, actual, ...args) // It's a trap specifically for inline snapshot to capture this name\n          : // in the stack trace, so that it can correctly get the custom matcher\n            // function call.\n            (function __EXTERNAL_MATCHER_TRAP__() {\n              return matcher.call(matcherContext, actual, ...args);\n            })();\n\n      if (isPromise(potentialResult)) {\n        const asyncResult = potentialResult;\n        const asyncError = new JestAssertionError();\n\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(asyncError, throwingMatcher);\n        }\n\n        return asyncResult\n          .then(aResult => processResult(aResult, asyncError))\n          .catch(handleError);\n      } else {\n        const syncResult = potentialResult;\n        return processResult(syncResult);\n      }\n    } catch (error) {\n      return handleError(error);\n    }\n  };\n\nexpect.extend = matchers =>\n  (0, _jestMatchersObject.setMatchers)(matchers, false, expect);\n\nexpect.anything = _asymmetricMatchers.anything;\nexpect.any = _asymmetricMatchers.any;\nexpect.not = {\n  arrayContaining: _asymmetricMatchers.arrayNotContaining,\n  objectContaining: _asymmetricMatchers.objectNotContaining,\n  stringContaining: _asymmetricMatchers.stringNotContaining,\n  stringMatching: _asymmetricMatchers.stringNotMatching\n};\nexpect.objectContaining = _asymmetricMatchers.objectContaining;\nexpect.arrayContaining = _asymmetricMatchers.arrayContaining;\nexpect.stringContaining = _asymmetricMatchers.stringContaining;\nexpect.stringMatching = _asymmetricMatchers.stringMatching;\n\nconst _validateResult = result => {\n  if (\n    typeof result !== 'object' ||\n    typeof result.pass !== 'boolean' ||\n    (result.message &&\n      typeof result.message !== 'string' &&\n      typeof result.message !== 'function')\n  ) {\n    throw new Error(\n      'Unexpected return from a matcher function.\\n' +\n        'Matcher functions should ' +\n        'return an object in the following format:\\n' +\n        '  {message?: string | function, pass: boolean}\\n' +\n        `'${matcherUtils.stringify(result)}' was returned`\n    );\n  }\n};\n\nfunction assertions(expected) {\n  const error = new Error();\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(error, assertions);\n  }\n\n  (0, _jestMatchersObject.getState)().expectedAssertionsNumber = expected;\n  (0, _jestMatchersObject.getState)().expectedAssertionsNumberError = error;\n}\n\nfunction hasAssertions(...args) {\n  const error = new Error();\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(error, hasAssertions);\n  }\n\n  matcherUtils.ensureNoExpected(args[0], '.hasAssertions');\n  (0, _jestMatchersObject.getState)().isExpectingAssertions = true;\n  (0, _jestMatchersObject.getState)().isExpectingAssertionsError = error;\n} // add default jest matchers\n\n(0, _jestMatchersObject.setMatchers)(_matchers.default, true, expect);\n(0, _jestMatchersObject.setMatchers)(_spyMatchers.default, true, expect);\n(0, _jestMatchersObject.setMatchers)(_toThrowMatchers.default, true, expect);\n\nexpect.addSnapshotSerializer = () => void 0;\n\nexpect.assertions = assertions;\nexpect.hasAssertions = hasAssertions;\nexpect.getState = _jestMatchersObject.getState;\nexpect.setState = _jestMatchersObject.setState;\nexpect.extractExpectedAssertionsErrors =\n  _extractExpectedAssertionsErrors.default;\nconst expectExport = expect;\nmodule.exports = expectExport;\n"]},"metadata":{},"sourceType":"script"}