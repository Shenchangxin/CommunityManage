{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayoutState = useLayoutState;\nexports.useTimeoutLock = useTimeoutLock;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n/**\n * Execute code before next frame but async\n */\n\n\nfunction useLayoutState(defaultState) {\n  var stateRef = (0, _react.useRef)(defaultState);\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var lastPromiseRef = (0, _react.useRef)(null);\n  var updateBatchRef = (0, _react.useRef)([]);\n\n  function setFrameState(updater) {\n    updateBatchRef.current.push(updater);\n    var promise = Promise.resolve();\n    lastPromiseRef.current = promise;\n    promise.then(function () {\n      if (lastPromiseRef.current === promise) {\n        var prevBatch = updateBatchRef.current;\n        var prevState = stateRef.current;\n        updateBatchRef.current = [];\n        prevBatch.forEach(function (batchUpdater) {\n          stateRef.current = batchUpdater(stateRef.current);\n        });\n        lastPromiseRef.current = null;\n\n        if (prevState !== stateRef.current) {\n          forceUpdate({});\n        }\n      }\n    });\n  }\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      lastPromiseRef.current = null;\n    };\n  }, []);\n  return [stateRef.current, setFrameState];\n}\n/** Lock frame, when frame pass reset the lock. */\n\n\nfunction useTimeoutLock(defaultState) {\n  var frameRef = (0, _react.useRef)(defaultState || null);\n  var timeoutRef = (0, _react.useRef)();\n\n  function cleanUp() {\n    window.clearTimeout(timeoutRef.current);\n  }\n\n  function setState(newState) {\n    frameRef.current = newState;\n    cleanUp();\n    timeoutRef.current = window.setTimeout(function () {\n      frameRef.current = null;\n      timeoutRef.current = undefined;\n    }, 100);\n  }\n\n  function getState() {\n    return frameRef.current;\n  }\n\n  (0, _react.useEffect)(function () {\n    return cleanUp;\n  }, []);\n  return [setState, getState];\n}","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/rc-table/lib/hooks/useFrame.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useLayoutState","useTimeoutLock","_slicedToArray2","_react","defaultState","stateRef","useRef","_useState","useState","_useState2","default","forceUpdate","lastPromiseRef","updateBatchRef","setFrameState","updater","current","push","promise","Promise","resolve","then","prevBatch","prevState","forEach","batchUpdater","useEffect","frameRef","timeoutRef","cleanUp","window","clearTimeout","setState","newState","setTimeout","undefined","getState"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayoutState = useLayoutState;\nexports.useTimeoutLock = useTimeoutLock;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\n/**\n * Execute code before next frame but async\n */\nfunction useLayoutState(defaultState) {\n  var stateRef = (0, _react.useRef)(defaultState);\n\n  var _useState = (0, _react.useState)({}),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var lastPromiseRef = (0, _react.useRef)(null);\n  var updateBatchRef = (0, _react.useRef)([]);\n\n  function setFrameState(updater) {\n    updateBatchRef.current.push(updater);\n    var promise = Promise.resolve();\n    lastPromiseRef.current = promise;\n    promise.then(function () {\n      if (lastPromiseRef.current === promise) {\n        var prevBatch = updateBatchRef.current;\n        var prevState = stateRef.current;\n        updateBatchRef.current = [];\n        prevBatch.forEach(function (batchUpdater) {\n          stateRef.current = batchUpdater(stateRef.current);\n        });\n        lastPromiseRef.current = null;\n\n        if (prevState !== stateRef.current) {\n          forceUpdate({});\n        }\n      }\n    });\n  }\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      lastPromiseRef.current = null;\n    };\n  }, []);\n  return [stateRef.current, setFrameState];\n}\n/** Lock frame, when frame pass reset the lock. */\n\n\nfunction useTimeoutLock(defaultState) {\n  var frameRef = (0, _react.useRef)(defaultState || null);\n  var timeoutRef = (0, _react.useRef)();\n\n  function cleanUp() {\n    window.clearTimeout(timeoutRef.current);\n  }\n\n  function setState(newState) {\n    frameRef.current = newState;\n    cleanUp();\n    timeoutRef.current = window.setTimeout(function () {\n      frameRef.current = null;\n      timeoutRef.current = undefined;\n    }, 100);\n  }\n\n  function getState() {\n    return frameRef.current;\n  }\n\n  (0, _react.useEffect)(function () {\n    return cleanUp;\n  }, []);\n  return [setState, getState];\n}"]},"metadata":{},"sourceType":"script"}