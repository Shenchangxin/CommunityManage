{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _utilities = require('./utilities');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (reducers) {\n  var getDefaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _immutable2.default.Map;\n  var reducerKeys = Object.keys(reducers); // eslint-disable-next-line space-infix-ops\n\n  return function () {\n    var inputState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getDefaultState();\n    var action = arguments[1]; // eslint-disable-next-line no-process-env\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = (0, _utilities.getUnexpectedInvocationParameterMessage)(inputState, reducers, action);\n\n      if (warningMessage) {\n        // eslint-disable-next-line no-console\n        console.error(warningMessage);\n      }\n    }\n\n    return inputState.withMutations(function (temporaryState) {\n      reducerKeys.forEach(function (reducerName) {\n        var reducer = reducers[reducerName];\n        var currentDomainState = temporaryState.get(reducerName);\n        var nextDomainState = reducer(currentDomainState, action);\n        (0, _utilities.validateNextState)(nextDomainState, reducerName, action);\n        temporaryState.set(reducerName, nextDomainState);\n      });\n    });\n  };\n};\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["../src/combineReducers.js"],"names":["getDefaultState","Map","reducerKeys","Object","inputState","action","process","warningMessage","console","reducer","reducers","currentDomainState","temporaryState","nextDomainState"],"mappings":";;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;;;;;;;kBAKe,UAAA,QAAA,EAA4E;AAAA,MAAzDA,eAAyD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA5B,WAAA,CAAA,OAAA,CAAUC,GAAkB;AACzF,MAAMC,WAAAA,GAAcC,MAAAA,CAAAA,IAAAA,CAApB,QAAoBA,CAApB,CADyF,CAGzF;;AACA,SAAO,YAA8E;AAAA,QAA7EC,UAA6E,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAArDJ,eAAAA,EAAqD;AAAA,QAAlCK,MAAkC,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CACnF;;AACA,QAAIC,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AACzC,UAAMC,cAAAA,GAAiB,CAAA,GAAA,UAAA,CAAA,uCAAA,EAAA,UAAA,EAAA,QAAA,EAAvB,MAAuB,CAAvB;;AAEA,UAAA,cAAA,EAAoB;AAClB;AACAC,QAAAA,OAAAA,CAAAA,KAAAA,CAAAA,cAAAA;AACD;AACF;;AAED,WAAO,UAAA,CAAA,aAAA,CACU,UAAA,cAAA,EAAoB;AACjCN,MAAAA,WAAAA,CAAAA,OAAAA,CAAoB,UAAA,WAAA,EAAiB;AACnC,YAAMO,OAAAA,GAAUC,QAAAA,CAAhB,WAAgBA,CAAhB;AACA,YAAMC,kBAAAA,GAAqBC,cAAAA,CAAAA,GAAAA,CAA3B,WAA2BA,CAA3B;AACA,YAAMC,eAAAA,GAAkBJ,OAAAA,CAAAA,kBAAAA,EAAxB,MAAwBA,CAAxB;AAEA,SAAA,GAAA,UAAA,CAAA,iBAAA,EAAA,eAAA,EAAA,WAAA,EAAA,MAAA;AAEAG,QAAAA,cAAAA,CAAAA,GAAAA,CAAAA,WAAAA,EAAAA,eAAAA;AAPFV,OAAAA;AAFJ,KAAO,CAAP;AAXF,GAAA","sourcesContent":["import Immutable from 'immutable';\nimport {\n  getUnexpectedInvocationParameterMessage,\n  validateNextState\n} from './utilities';\n\nexport default (reducers: Object, getDefaultState: ?Function = Immutable.Map): Function => {\n  const reducerKeys = Object.keys(reducers);\n\n  // eslint-disable-next-line space-infix-ops\n  return (inputState: ?Function = getDefaultState(), action: Object): Immutable.Map => {\n    // eslint-disable-next-line no-process-env\n    if (process.env.NODE_ENV !== 'production') {\n      const warningMessage = getUnexpectedInvocationParameterMessage(inputState, reducers, action);\n\n      if (warningMessage) {\n        // eslint-disable-next-line no-console\n        console.error(warningMessage);\n      }\n    }\n\n    return inputState\n      .withMutations((temporaryState) => {\n        reducerKeys.forEach((reducerName) => {\n          const reducer = reducers[reducerName];\n          const currentDomainState = temporaryState.get(reducerName);\n          const nextDomainState = reducer(currentDomainState, action);\n\n          validateNextState(nextDomainState, reducerName, action);\n\n          temporaryState.set(reducerName, nextDomainState);\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"script"}