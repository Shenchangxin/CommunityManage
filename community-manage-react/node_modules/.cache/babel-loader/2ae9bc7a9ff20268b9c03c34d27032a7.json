{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.validateTemplateTableHeadings = exports.validateArrayTable = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\nconst EXPECTED_COLOR = _chalk().default.green;\n\nconst RECEIVED_COLOR = _chalk().default.red;\n\nconst validateArrayTable = table => {\n  if (!Array.isArray(table)) {\n    throw new Error('`.each` must be called with an Array or Tagged Template Literal.\\n\\n' + `Instead was called with: ${(0, _prettyFormat().default)(table, {\n      maxDepth: 1,\n      min: true\n    })}\\n`);\n  }\n\n  if (isTaggedTemplateLiteral(table)) {\n    if (isEmptyString(table[0])) {\n      throw new Error('Error: `.each` called with an empty Tagged Template Literal of table data.\\n');\n    }\n\n    throw new Error('Error: `.each` called with a Tagged Template Literal with no data, remember to interpolate with ${expression} syntax.\\n');\n  }\n\n  if (isEmptyTable(table)) {\n    throw new Error('Error: `.each` called with an empty Array of table data.\\n');\n  }\n};\n\nexports.validateArrayTable = validateArrayTable;\n\nconst isTaggedTemplateLiteral = array => array.raw !== undefined;\n\nconst isEmptyTable = table => table.length === 0;\n\nconst isEmptyString = str => typeof str === 'string' && str.trim() === '';\n\nconst validateTemplateTableHeadings = (headings, data) => {\n  const missingData = data.length % headings.length;\n\n  if (missingData > 0) {\n    throw new Error('Not enough arguments supplied for given headings:\\n' + EXPECTED_COLOR(headings.join(' | ')) + '\\n\\n' + 'Received:\\n' + RECEIVED_COLOR((0, _prettyFormat().default)(data)) + '\\n\\n' + `Missing ${RECEIVED_COLOR(missingData.toString())} ${pluralize('argument', missingData)}`);\n  }\n};\n\nexports.validateTemplateTableHeadings = validateTemplateTableHeadings;\n\nconst pluralize = (word, count) => word + (count === 1 ? '' : 's');","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/jest-each/build/validation.js"],"names":["Object","defineProperty","exports","value","validateTemplateTableHeadings","validateArrayTable","_chalk","data","_interopRequireDefault","require","_prettyFormat","obj","__esModule","default","EXPECTED_COLOR","green","RECEIVED_COLOR","red","table","Array","isArray","Error","maxDepth","min","isTaggedTemplateLiteral","isEmptyString","isEmptyTable","array","raw","undefined","length","str","trim","headings","missingData","join","toString","pluralize","word","count"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.validateTemplateTableHeadings = exports.validateArrayTable = void 0;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _prettyFormat() {\n  const data = _interopRequireDefault(require('pretty-format'));\n\n  _prettyFormat = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nconst EXPECTED_COLOR = _chalk().default.green;\n\nconst RECEIVED_COLOR = _chalk().default.red;\n\nconst validateArrayTable = table => {\n  if (!Array.isArray(table)) {\n    throw new Error(\n      '`.each` must be called with an Array or Tagged Template Literal.\\n\\n' +\n        `Instead was called with: ${(0, _prettyFormat().default)(table, {\n          maxDepth: 1,\n          min: true\n        })}\\n`\n    );\n  }\n\n  if (isTaggedTemplateLiteral(table)) {\n    if (isEmptyString(table[0])) {\n      throw new Error(\n        'Error: `.each` called with an empty Tagged Template Literal of table data.\\n'\n      );\n    }\n\n    throw new Error(\n      'Error: `.each` called with a Tagged Template Literal with no data, remember to interpolate with ${expression} syntax.\\n'\n    );\n  }\n\n  if (isEmptyTable(table)) {\n    throw new Error(\n      'Error: `.each` called with an empty Array of table data.\\n'\n    );\n  }\n};\n\nexports.validateArrayTable = validateArrayTable;\n\nconst isTaggedTemplateLiteral = array => array.raw !== undefined;\n\nconst isEmptyTable = table => table.length === 0;\n\nconst isEmptyString = str => typeof str === 'string' && str.trim() === '';\n\nconst validateTemplateTableHeadings = (headings, data) => {\n  const missingData = data.length % headings.length;\n\n  if (missingData > 0) {\n    throw new Error(\n      'Not enough arguments supplied for given headings:\\n' +\n        EXPECTED_COLOR(headings.join(' | ')) +\n        '\\n\\n' +\n        'Received:\\n' +\n        RECEIVED_COLOR((0, _prettyFormat().default)(data)) +\n        '\\n\\n' +\n        `Missing ${RECEIVED_COLOR(missingData.toString())} ${pluralize(\n          'argument',\n          missingData\n        )}`\n    );\n  }\n};\n\nexports.validateTemplateTableHeadings = validateTemplateTableHeadings;\n\nconst pluralize = (word, count) => word + (count === 1 ? '' : 's');\n"]},"metadata":{},"sourceType":"script"}