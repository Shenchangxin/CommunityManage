{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMemo;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction useMemo(getValue, condition, shouldUpdate) {\n  var cacheRef = React.useRef({});\n\n  if (!('value' in cacheRef.current) || shouldUpdate(cacheRef.current.condition, condition)) {\n    cacheRef.current.value = getValue();\n    cacheRef.current.condition = condition;\n  }\n\n  return cacheRef.current.value;\n}","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/rc-util/lib/hooks/useMemo.js"],"names":["_interopRequireWildcard","require","Object","defineProperty","exports","value","default","useMemo","React","getValue","condition","shouldUpdate","cacheRef","useRef","current"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,IAAIC,KAAK,GAAGR,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,SAASM,OAAT,CAAiBE,QAAjB,EAA2BC,SAA3B,EAAsCC,YAAtC,EAAoD;AAClD,MAAIC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa,EAAb,CAAf;;AAEA,MAAI,EAAE,WAAWD,QAAQ,CAACE,OAAtB,KAAkCH,YAAY,CAACC,QAAQ,CAACE,OAAT,CAAiBJ,SAAlB,EAA6BA,SAA7B,CAAlD,EAA2F;AACzFE,IAAAA,QAAQ,CAACE,OAAT,CAAiBT,KAAjB,GAAyBI,QAAQ,EAAjC;AACAG,IAAAA,QAAQ,CAACE,OAAT,CAAiBJ,SAAjB,GAA6BA,SAA7B;AACD;;AAED,SAAOE,QAAQ,CAACE,OAAT,CAAiBT,KAAxB;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useMemo;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction useMemo(getValue, condition, shouldUpdate) {\n  var cacheRef = React.useRef({});\n\n  if (!('value' in cacheRef.current) || shouldUpdate(cacheRef.current.condition, condition)) {\n    cacheRef.current.value = getValue();\n    cacheRef.current.condition = condition;\n  }\n\n  return cacheRef.current.value;\n}"]},"metadata":{},"sourceType":"script"}