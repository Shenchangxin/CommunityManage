{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrDel = arrDel;\nexports.arrAdd = arrAdd;\nexports.posToArr = posToArr;\nexports.getPosition = getPosition;\nexports.isTreeNode = isTreeNode;\nexports.getDragChildrenKeys = getDragChildrenKeys;\nexports.isLastChild = isLastChild;\nexports.isFirstChild = isFirstChild;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.convertDataToTree = convertDataToTree;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.getDataAndAria = getDataAndAria;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n/* eslint-disable no-lonely-if */\n\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\n\n\nfunction arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragChildrenKeys;\n}\n\nfunction isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n\n  return false;\n}\n\nfunction isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n} // Only used when drag, not affect SSR.\n\n\nfunction calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n      top = _event$target$getBoun.top,\n      height = _event$target$getBoun.height; // optional chain for testing\n\n\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\n\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\n\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.data.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].data.key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\n\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = (0, _objectWithoutProperties2.default)(_ref3, [\"children\"]);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/_react.default.createElement(_TreeNode.default, processProps(props), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\n\nfunction getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/rc-tree/lib/util.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","arrDel","arrAdd","posToArr","getPosition","isTreeNode","getDragChildrenKeys","isLastChild","isFirstChild","calcDropPosition","calcSelectedKeys","convertDataToTree","parseCheckedKeys","conductExpandParent","getDataAndAria","_toConsumableArray2","_typeof2","_objectWithoutProperties2","_react","_warning","_TreeNode","list","clone","slice","index","indexOf","splice","push","pos","split","level","concat","node","type","dragNodeKey","keyEntities","dragChildrenKeys","entity","dig","arguments","length","undefined","forEach","_ref","key","children","treeNodeEntity","parent","posArr","Number","event","dragNode","targetNode","indent","startMousePosition","allowDrop","flattenedNodes","expandKeys","direction","_abstractDropNodeEnti","clientX","clientY","_event$target$getBoun","target","getBoundingClientRect","top","height","horizontalMouseOffset","x","rawDropLevelOffset","abstractDropNodeEntity","props","eventKey","nodeIndex","findIndex","flattenedNode","data","prevNodeIndex","prevNodeKey","initialAbstractDropNodeKey","abstractDragOverEntity","dragOverNodeKey","dropPosition","dropLevelOffset","includes","i","abstractDropDataNode","dropAllowed","dropNode","dropTargetKey","dropTargetPos","dropContainerKey","selectedKeys","multiple","internalProcessProps","treeData","processor","_ref2","_ref2$processProps","processProps","Array","isArray","map","_ref3","default","childrenNodes","createElement","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","keyList","expandedKeys","Set","conductUp","has","add","disabled","omitProps","startsWith"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrDel = arrDel;\nexports.arrAdd = arrAdd;\nexports.posToArr = posToArr;\nexports.getPosition = getPosition;\nexports.isTreeNode = isTreeNode;\nexports.getDragChildrenKeys = getDragChildrenKeys;\nexports.isLastChild = isLastChild;\nexports.isFirstChild = isFirstChild;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.convertDataToTree = convertDataToTree;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.conductExpandParent = conductExpandParent;\nexports.getDataAndAria = getDataAndAria;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _TreeNode = _interopRequireDefault(require(\"./TreeNode\"));\n\n/* eslint-disable no-lonely-if */\n\n/**\n * Legacy code. Should avoid to use if you are new to import these code.\n */\nfunction arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragChildrenKeys;\n}\n\nfunction isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n\n  return false;\n}\n\nfunction isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n} // Only used when drag, not affect SSR.\n\n\nfunction calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n      top = _event$target$getBoun.top,\n      height = _event$target$getBoun.height; // optional chain for testing\n\n\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\n\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\n\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.data.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].data.key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\n\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\n\n\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nfunction convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = (0, _objectWithoutProperties2.default)(_ref3, [\"children\"]);\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/_react.default.createElement(_TreeNode.default, processProps(props), childrenNodes);\n  });\n}\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\n\n\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if ((0, _typeof2.default)(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning.default)(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\n\n\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return (0, _toConsumableArray2.default)(expandedKeys);\n}\n/**\n * Returns only the data- and aria- key/value pairs\n */\n\n\nfunction getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}"]},"metadata":{},"sourceType":"script"}