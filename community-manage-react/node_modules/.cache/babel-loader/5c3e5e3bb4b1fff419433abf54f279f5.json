{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = convertDescriptorToString;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\n// See: https://github.com/facebook/jest/pull/5154\n\nfunction convertDescriptorToString(descriptor) {\n  if (typeof descriptor === 'string' || typeof descriptor === 'number' || descriptor === undefined) {\n    return descriptor;\n  }\n\n  if (typeof descriptor !== 'function') {\n    throw new Error('describe expects a class, function, number, or string.');\n  }\n\n  if (descriptor.name !== undefined) {\n    return descriptor.name;\n  } // Fallback for old browsers, pardon Flow\n\n\n  const stringified = descriptor.toString();\n  const typeDescriptorMatch = stringified.match(/class|function/);\n  const indexOfNameSpace = // @ts-expect-error: typeDescriptorMatch exists\n  typeDescriptorMatch.index + typeDescriptorMatch[0].length;\n  const indexOfNameAfterSpace = stringified.search(/\\(|\\{/);\n  const name = stringified.substring(indexOfNameSpace, indexOfNameAfterSpace);\n  return name.trim();\n}","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/jest-util/build/convertDescriptorToString.js"],"names":["Object","defineProperty","exports","value","default","convertDescriptorToString","descriptor","undefined","Error","name","stringified","toString","typeDescriptorMatch","match","indexOfNameSpace","index","length","indexOfNameAfterSpace","search","substring","trim"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,yBAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA,SAASA,yBAAT,CAAmCC,UAAnC,EAA+C;AAC7C,MACE,OAAOA,UAAP,KAAsB,QAAtB,IACA,OAAOA,UAAP,KAAsB,QADtB,IAEAA,UAAU,KAAKC,SAHjB,EAIE;AACA,WAAOD,UAAP;AACD;;AAED,MAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AACpC,UAAM,IAAIE,KAAJ,CAAU,wDAAV,CAAN;AACD;;AAED,MAAIF,UAAU,CAACG,IAAX,KAAoBF,SAAxB,EAAmC;AACjC,WAAOD,UAAU,CAACG,IAAlB;AACD,GAf4C,CAe3C;;;AAEF,QAAMC,WAAW,GAAGJ,UAAU,CAACK,QAAX,EAApB;AACA,QAAMC,mBAAmB,GAAGF,WAAW,CAACG,KAAZ,CAAkB,gBAAlB,CAA5B;AACA,QAAMC,gBAAgB,GAAG;AACvBF,EAAAA,mBAAmB,CAACG,KAApB,GAA4BH,mBAAmB,CAAC,CAAD,CAAnB,CAAuBI,MADrD;AAEA,QAAMC,qBAAqB,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,OAAnB,CAA9B;AACA,QAAMT,IAAI,GAAGC,WAAW,CAACS,SAAZ,CAAsBL,gBAAtB,EAAwCG,qBAAxC,CAAb;AACA,SAAOR,IAAI,CAACW,IAAL,EAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = convertDescriptorToString;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint-disable local/ban-types-eventually */\n// See: https://github.com/facebook/jest/pull/5154\nfunction convertDescriptorToString(descriptor) {\n  if (\n    typeof descriptor === 'string' ||\n    typeof descriptor === 'number' ||\n    descriptor === undefined\n  ) {\n    return descriptor;\n  }\n\n  if (typeof descriptor !== 'function') {\n    throw new Error('describe expects a class, function, number, or string.');\n  }\n\n  if (descriptor.name !== undefined) {\n    return descriptor.name;\n  } // Fallback for old browsers, pardon Flow\n\n  const stringified = descriptor.toString();\n  const typeDescriptorMatch = stringified.match(/class|function/);\n  const indexOfNameSpace = // @ts-expect-error: typeDescriptorMatch exists\n    typeDescriptorMatch.index + typeDescriptorMatch[0].length;\n  const indexOfNameAfterSpace = stringified.search(/\\(|\\{/);\n  const name = stringified.substring(indexOfNameSpace, indexOfNameAfterSpace);\n  return name.trim();\n}\n"]},"metadata":{},"sourceType":"script"}