{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Used for setting prototype methods that IE8 chokes on.\nvar DELETE = 'delete'; // Constants describing the size of trie nodes.\n\nvar SHIFT = 5; // Resulted in best performance after ______?\n\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1; // A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\n\nvar NOT_SET = {}; // Boolean references, Rough equivalent of `bool &`.\n\nfunction MakeRef() {\n  return {\n    value: false\n  };\n}\n\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n} // A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\n\n\nfunction OwnerID() {}\n\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n\n  return iter.size;\n}\n\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32âˆ’1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n\n    index = uint32Index;\n  }\n\n  return index < 0 ? ensureSize(iter) + index : index;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction wholeSlice(begin, end, size) {\n  return (begin === 0 && !isNeg(begin) || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n}\n\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\n\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\n\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined ? defaultIndex : isNeg(index) ? size === Infinity ? size : Math.max(0, size + index) | 0 : size === undefined || size === index ? index : Math.min(size, index) | 0;\n}\n\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || value === 0 && 1 / value === -Infinity;\n} // Note: value is unchanged to not break immutable-devtools.\n\n\nvar IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';\n\nfunction isCollection(maybeCollection) {\n  return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);\n}\n\nvar IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';\n\nfunction isKeyed(maybeKeyed) {\n  return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);\n}\n\nvar IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';\n\nfunction isIndexed(maybeIndexed) {\n  return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);\n}\n\nfunction isAssociative(maybeAssociative) {\n  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n}\n\nvar Collection = function Collection(value) {\n  return isCollection(value) ? value : Seq(value);\n};\n\nvar KeyedCollection = /*@__PURE__*/function (Collection) {\n  function KeyedCollection(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  if (Collection) KeyedCollection.__proto__ = Collection;\n  KeyedCollection.prototype = Object.create(Collection && Collection.prototype);\n  KeyedCollection.prototype.constructor = KeyedCollection;\n  return KeyedCollection;\n}(Collection);\n\nvar IndexedCollection = /*@__PURE__*/function (Collection) {\n  function IndexedCollection(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  if (Collection) IndexedCollection.__proto__ = Collection;\n  IndexedCollection.prototype = Object.create(Collection && Collection.prototype);\n  IndexedCollection.prototype.constructor = IndexedCollection;\n  return IndexedCollection;\n}(Collection);\n\nvar SetCollection = /*@__PURE__*/function (Collection) {\n  function SetCollection(value) {\n    return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  if (Collection) SetCollection.__proto__ = Collection;\n  SetCollection.prototype = Object.create(Collection && Collection.prototype);\n  SetCollection.prototype.constructor = SetCollection;\n  return SetCollection;\n}(Collection);\n\nCollection.Keyed = KeyedCollection;\nCollection.Indexed = IndexedCollection;\nCollection.Set = SetCollection;\nvar IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';\n\nfunction isSeq(maybeSeq) {\n  return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);\n}\n\nvar IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';\n\nfunction isRecord(maybeRecord) {\n  return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);\n}\n\nfunction isImmutable(maybeImmutable) {\n  return isCollection(maybeImmutable) || isRecord(maybeImmutable);\n}\n\nvar IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';\n\nfunction isOrdered(maybeOrdered) {\n  return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);\n}\n\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n\nIterator.prototype.toString = function toString() {\n  return '[Iterator]';\n};\n\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\n\nIterator.prototype.inspect = Iterator.prototype.toSource = function () {\n  return this.toString();\n};\n\nIterator.prototype[ITERATOR_SYMBOL] = function () {\n  return this;\n};\n\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult ? iteratorResult.value = value : iteratorResult = {\n    value: value,\n    done: false\n  };\n  return iteratorResult;\n}\n\nfunction iteratorDone() {\n  return {\n    value: undefined,\n    done: true\n  };\n}\n\nfunction hasIterator(maybeIterable) {\n  return !!getIteratorFn(maybeIterable);\n}\n\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\n\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\n\nfunction getIteratorFn(iterable) {\n  var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isArrayLike(value) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return true;\n  }\n\n  return value && typeof value === 'object' && Number.isInteger(value.length) && value.length >= 0 && (value.length === 0 ? // Only {length: 0} is considered Array-like.\n  Object.keys(value).length === 1 : // An object is only Array-like if it has a property where the last value\n  // in the array-like may be found (which could be undefined).\n  value.hasOwnProperty(value.length - 1));\n}\n\nvar Seq = /*@__PURE__*/function (Collection$$1) {\n  function Seq(value) {\n    return value === null || value === undefined ? emptySequence() : isImmutable(value) ? value.toSeq() : seqFromValue(value);\n  }\n\n  if (Collection$$1) Seq.__proto__ = Collection$$1;\n  Seq.prototype = Object.create(Collection$$1 && Collection$$1.prototype);\n  Seq.prototype.constructor = Seq;\n\n  Seq.prototype.toSeq = function toSeq() {\n    return this;\n  };\n\n  Seq.prototype.toString = function toString() {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function cacheResult() {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n\n    return this;\n  }; // abstract __iterateUncached(fn, reverse)\n\n\n  Seq.prototype.__iterate = function __iterate(fn, reverse) {\n    var cache = this._cache;\n\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n\n      while (i !== size) {\n        var entry = cache[reverse ? size - ++i : i++];\n\n        if (fn(entry[1], entry[0], this) === false) {\n          break;\n        }\n      }\n\n      return i;\n    }\n\n    return this.__iterateUncached(fn, reverse);\n  }; // abstract __iteratorUncached(type, reverse)\n\n\n  Seq.prototype.__iterator = function __iterator(type, reverse) {\n    var cache = this._cache;\n\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      return new Iterator(function () {\n        if (i === size) {\n          return iteratorDone();\n        }\n\n        var entry = cache[reverse ? size - ++i : i++];\n        return iteratorValue(type, entry[0], entry[1]);\n      });\n    }\n\n    return this.__iteratorUncached(type, reverse);\n  };\n\n  return Seq;\n}(Collection);\n\nvar KeyedSeq = /*@__PURE__*/function (Seq) {\n  function KeyedSeq(value) {\n    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isCollection(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : isRecord(value) ? value.toSeq() : keyedSeqFromValue(value);\n  }\n\n  if (Seq) KeyedSeq.__proto__ = Seq;\n  KeyedSeq.prototype = Object.create(Seq && Seq.prototype);\n  KeyedSeq.prototype.constructor = KeyedSeq;\n\n  KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq() {\n    return this;\n  };\n\n  return KeyedSeq;\n}(Seq);\n\nvar IndexedSeq = /*@__PURE__*/function (Seq) {\n  function IndexedSeq(value) {\n    return value === null || value === undefined ? emptySequence() : isCollection(value) ? isKeyed(value) ? value.entrySeq() : value.toIndexedSeq() : isRecord(value) ? value.toSeq().entrySeq() : indexedSeqFromValue(value);\n  }\n\n  if (Seq) IndexedSeq.__proto__ = Seq;\n  IndexedSeq.prototype = Object.create(Seq && Seq.prototype);\n  IndexedSeq.prototype.constructor = IndexedSeq;\n\n  IndexedSeq.of = function of()\n  /*...values*/\n  {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq() {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function toString() {\n    return this.__toString('Seq [', ']');\n  };\n\n  return IndexedSeq;\n}(Seq);\n\nvar SetSeq = /*@__PURE__*/function (Seq) {\n  function SetSeq(value) {\n    return (isCollection(value) && !isAssociative(value) ? value : IndexedSeq(value)).toSetSeq();\n  }\n\n  if (Seq) SetSeq.__proto__ = Seq;\n  SetSeq.prototype = Object.create(Seq && Seq.prototype);\n  SetSeq.prototype.constructor = SetSeq;\n\n  SetSeq.of = function of()\n  /*...values*/\n  {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function toSetSeq() {\n    return this;\n  };\n\n  return SetSeq;\n}(Seq);\n\nSeq.isSeq = isSeq;\nSeq.Keyed = KeyedSeq;\nSeq.Set = SetSeq;\nSeq.Indexed = IndexedSeq;\nSeq.prototype[IS_SEQ_SYMBOL] = true; // #pragma Root Sequences\n\nvar ArraySeq = /*@__PURE__*/function (IndexedSeq) {\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  if (IndexedSeq) ArraySeq.__proto__ = IndexedSeq;\n  ArraySeq.prototype = Object.create(IndexedSeq && IndexedSeq.prototype);\n  ArraySeq.prototype.constructor = ArraySeq;\n\n  ArraySeq.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function __iterate(fn, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n\n    while (i !== size) {\n      var ii = reverse ? size - ++i : i++;\n\n      if (fn(array[ii], ii, this) === false) {\n        break;\n      }\n    }\n\n    return i;\n  };\n\n  ArraySeq.prototype.__iterator = function __iterator(type, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n\n      var ii = reverse ? size - ++i : i++;\n      return iteratorValue(type, ii, array[ii]);\n    });\n  };\n\n  return ArraySeq;\n}(IndexedSeq);\n\nvar ObjectSeq = /*@__PURE__*/function (KeyedSeq) {\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  if (KeyedSeq) ObjectSeq.__proto__ = KeyedSeq;\n  ObjectSeq.prototype = Object.create(KeyedSeq && KeyedSeq.prototype);\n  ObjectSeq.prototype.constructor = ObjectSeq;\n\n  ObjectSeq.prototype.get = function get(key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function has(key) {\n    return hasOwnProperty.call(this._object, key);\n  };\n\n  ObjectSeq.prototype.__iterate = function __iterate(fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n\n    while (i !== size) {\n      var key = keys[reverse ? size - ++i : i++];\n\n      if (fn(object[key], key, this) === false) {\n        break;\n      }\n    }\n\n    return i;\n  };\n\n  ObjectSeq.prototype.__iterator = function __iterator(type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n\n      var key = keys[reverse ? size - ++i : i++];\n      return iteratorValue(type, key, object[key]);\n    });\n  };\n\n  return ObjectSeq;\n}(KeyedSeq);\n\nObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar CollectionSeq = /*@__PURE__*/function (IndexedSeq) {\n  function CollectionSeq(collection) {\n    this._collection = collection;\n    this.size = collection.length || collection.size;\n  }\n\n  if (IndexedSeq) CollectionSeq.__proto__ = IndexedSeq;\n  CollectionSeq.prototype = Object.create(IndexedSeq && IndexedSeq.prototype);\n  CollectionSeq.prototype.constructor = CollectionSeq;\n\n  CollectionSeq.prototype.__iterateUncached = function __iterateUncached(fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    var iterations = 0;\n\n    if (isIterator(iterator)) {\n      var step;\n\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n\n    return iterations;\n  };\n\n  CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  return CollectionSeq;\n}(IndexedSeq); // # pragma Helper functions\n\n\nvar EMPTY_SEQ;\n\nfunction emptySequence() {\n  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n}\n\nfunction keyedSeqFromValue(value) {\n  var seq = Array.isArray(value) ? new ArraySeq(value) : hasIterator(value) ? new CollectionSeq(value) : undefined;\n\n  if (seq) {\n    return seq.fromEntrySeq();\n  }\n\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n\n  throw new TypeError('Expected Array or collection object of [k, v] entries, or keyed object: ' + value);\n}\n\nfunction indexedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n\n  if (seq) {\n    return seq;\n  }\n\n  throw new TypeError('Expected Array or collection object of values: ' + value);\n}\n\nfunction seqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n\n  if (seq) {\n    return seq;\n  }\n\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n\n  throw new TypeError('Expected Array or collection object of values, or keyed object: ' + value);\n}\n\nfunction maybeIndexedSeqFromValue(value) {\n  return isArrayLike(value) ? new ArraySeq(value) : hasIterator(value) ? new CollectionSeq(value) : undefined;\n}\n\nvar IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';\n\nfunction isMap(maybeMap) {\n  return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);\n}\n\nfunction isOrderedMap(maybeOrderedMap) {\n  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n}\n\nfunction isValueObject(maybeValue) {\n  return Boolean(maybeValue && typeof maybeValue.equals === 'function' && typeof maybeValue.hashCode === 'function');\n}\n/**\n * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n *\n * NaN is considered the same as NaN, however -0 and 0 are considered the same\n * value, which is different from the algorithm described by\n * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n *\n * This is extended further to allow Objects to describe the values they\n * represent, by way of `valueOf` or `equals` (and `hashCode`).\n *\n * Note: because of this extension, the key equality of Immutable.Map and the\n * value equality of Immutable.Set will differ from ES6 Map and Set.\n *\n * ### Defining custom values\n *\n * The easiest way to describe the value an object represents is by implementing\n * `valueOf`. For example, `Date` represents a value by returning a unix\n * timestamp for `valueOf`:\n *\n *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n *     var date2 = new Date(1234567890000);\n *     date1.valueOf(); // 1234567890000\n *     assert( date1 !== date2 );\n *     assert( Immutable.is( date1, date2 ) );\n *\n * Note: overriding `valueOf` may have other implications if you use this object\n * where JavaScript expects a primitive, such as implicit string coercion.\n *\n * For more complex types, especially collections, implementing `valueOf` may\n * not be performant. An alternative is to implement `equals` and `hashCode`.\n *\n * `equals` takes another object, presumably of similar type, and returns true\n * if it is equal. Equality is symmetrical, so the same result should be\n * returned if this and the argument are flipped.\n *\n *     assert( a.equals(b) === b.equals(a) );\n *\n * `hashCode` returns a 32bit integer number representing the object which will\n * be used to determine how to store the value object in a Map or Set. You must\n * provide both or neither methods, one must not exist without the other.\n *\n * Also, an important relationship between these methods must be upheld: if two\n * values are equal, they *must* return the same hashCode. If the values are not\n * equal, they might have the same hashCode; this is called a hash collision,\n * and while undesirable for performance reasons, it is acceptable.\n *\n *     if (a.equals(b)) {\n *       assert( a.hashCode() === b.hashCode() );\n *     }\n *\n * All Immutable collections are Value Objects: they implement `equals()`\n * and `hashCode()`.\n */\n\n\nfunction is(valueA, valueB) {\n  if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n    return true;\n  }\n\n  if (!valueA || !valueB) {\n    return false;\n  }\n\n  if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {\n    valueA = valueA.valueOf();\n    valueB = valueB.valueOf();\n\n    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n      return true;\n    }\n\n    if (!valueA || !valueB) {\n      return false;\n    }\n  }\n\n  return !!(isValueObject(valueA) && isValueObject(valueB) && valueA.equals(valueB));\n}\n\nvar imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n  a |= 0; // int\n\n  b |= 0; // int\n\n  var c = a & 0xffff;\n  var d = b & 0xffff; // Shift by 0 fixes the sign on the high part.\n\n  return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n}; // v8 has an optimization for storing 31-bit signed numbers.\n// Values which have either 00 or 11 as the high order bits qualify.\n// This function drops the highest order bit in a signed number, maintaining\n// the sign bit.\n\nfunction smi(i32) {\n  return i32 >>> 1 & 0x40000000 | i32 & 0xbfffffff;\n}\n\nvar defaultValueOf = Object.prototype.valueOf;\n\nfunction hash(o) {\n  switch (typeof o) {\n    case 'boolean':\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return o ? 0x42108421 : 0x42108420;\n\n    case 'number':\n      return hashNumber(o);\n\n    case 'string':\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n\n    case 'object':\n    case 'function':\n      if (o === null) {\n        return 0x42108422;\n      }\n\n      if (typeof o.hashCode === 'function') {\n        // Drop any high bits from accidentally long hash codes.\n        return smi(o.hashCode(o));\n      }\n\n      if (o.valueOf !== defaultValueOf && typeof o.valueOf === 'function') {\n        o = o.valueOf(o);\n      }\n\n      return hashJSObj(o);\n\n    case 'undefined':\n      return 0x42108423;\n\n    default:\n      if (typeof o.toString === 'function') {\n        return hashString(o.toString());\n      }\n\n      throw new Error('Value type ' + typeof o + ' cannot be hashed.');\n  }\n} // Compress arbitrarily large numbers into smi hashes.\n\n\nfunction hashNumber(n) {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n\n  var hash = n | 0;\n\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n\n  while (n > 0xffffffff) {\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n\n  return smi(hash);\n}\n\nfunction cachedHashString(string) {\n  var hashed = stringHashCache[string];\n\n  if (hashed === undefined) {\n    hashed = hashString(string);\n\n    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n      STRING_HASH_CACHE_SIZE = 0;\n      stringHashCache = {};\n    }\n\n    STRING_HASH_CACHE_SIZE++;\n    stringHashCache[string] = hashed;\n  }\n\n  return hashed;\n} // http://jsperf.com/hashing-strings\n\n\nfunction hashString(string) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  var hashed = 0;\n\n  for (var ii = 0; ii < string.length; ii++) {\n    hashed = 31 * hashed + string.charCodeAt(ii) | 0;\n  }\n\n  return smi(hashed);\n}\n\nfunction hashJSObj(obj) {\n  var hashed;\n\n  if (usingWeakMap) {\n    hashed = weakMap.get(obj);\n\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = obj[UID_HASH_KEY];\n\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  if (!canDefineProperty) {\n    hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n\n    if (hashed !== undefined) {\n      return hashed;\n    }\n\n    hashed = getIENodeHash(obj);\n\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = ++objHashUID;\n\n  if (objHashUID & 0x40000000) {\n    objHashUID = 0;\n  }\n\n  if (usingWeakMap) {\n    weakMap.set(obj, hashed);\n  } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n    throw new Error('Non-extensible objects are not allowed as keys.');\n  } else if (canDefineProperty) {\n    Object.defineProperty(obj, UID_HASH_KEY, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: hashed\n    });\n  } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n    // Since we can't define a non-enumerable property on the object\n    // we'll hijack one of the less-used non-enumerable properties to\n    // save our hash on it. Since this is a function it will not show up in\n    // `JSON.stringify` which is what we want.\n    obj.propertyIsEnumerable = function () {\n      return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n    };\n\n    obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;\n  } else if (obj.nodeType !== undefined) {\n    // At this point we couldn't get the IE `uniqueID` to use as a hash\n    // and we couldn't use a non-enumerable property to exploit the\n    // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n    // itself.\n    obj[UID_HASH_KEY] = hashed;\n  } else {\n    throw new Error('Unable to set a non-enumerable property on object.');\n  }\n\n  return hashed;\n} // Get references to ES5 object methods.\n\n\nvar isExtensible = Object.isExtensible; // True if Object.defineProperty works as expected. IE8 fails this test.\n\nvar canDefineProperty = function () {\n  try {\n    Object.defineProperty({}, '@', {});\n    return true;\n  } catch (e) {\n    return false;\n  }\n}(); // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n// and avoid memory leaks from the IE cloneNode bug.\n\n\nfunction getIENodeHash(node) {\n  if (node && node.nodeType > 0) {\n    switch (node.nodeType) {\n      case 1:\n        // Element\n        return node.uniqueID;\n\n      case 9:\n        // Document\n        return node.documentElement && node.documentElement.uniqueID;\n    }\n  }\n} // If possible, use a WeakMap.\n\n\nvar usingWeakMap = typeof WeakMap === 'function';\nvar weakMap;\n\nif (usingWeakMap) {\n  weakMap = new WeakMap();\n}\n\nvar objHashUID = 0;\nvar UID_HASH_KEY = '__immutablehash__';\n\nif (typeof Symbol === 'function') {\n  UID_HASH_KEY = Symbol(UID_HASH_KEY);\n}\n\nvar STRING_HASH_CACHE_MIN_STRLEN = 16;\nvar STRING_HASH_CACHE_MAX_SIZE = 255;\nvar STRING_HASH_CACHE_SIZE = 0;\nvar stringHashCache = {};\n\nvar ToKeyedSequence = /*@__PURE__*/function (KeyedSeq$$1) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  if (KeyedSeq$$1) ToKeyedSequence.__proto__ = KeyedSeq$$1;\n  ToKeyedSequence.prototype = Object.create(KeyedSeq$$1 && KeyedSeq$$1.prototype);\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n\n  ToKeyedSequence.prototype.get = function get(key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function has(key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function valueSeq() {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function reverse() {\n    var this$1 = this;\n    var reversedSequence = reverseFactory(this, true);\n\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$1._iter.toSeq().reverse();\n      };\n    }\n\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function map(mapper, context) {\n    var this$1 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$1._iter.toSeq().map(mapper, context);\n      };\n    }\n\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._iter.__iterate(function (v, k) {\n      return fn(v, k, this$1);\n    }, reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function __iterator(type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n\n  return ToKeyedSequence;\n}(KeyedSeq);\n\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar ToIndexedSequence = /*@__PURE__*/function (IndexedSeq$$1) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if (IndexedSeq$$1) ToIndexedSequence.__proto__ = IndexedSeq$$1;\n  ToIndexedSequence.prototype = Object.create(IndexedSeq$$1 && IndexedSeq$$1.prototype);\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n\n  ToIndexedSequence.prototype.includes = function includes(value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(function (v) {\n      return fn(v, reverse ? this$1.size - ++i : i++, this$1);\n    }, reverse);\n  };\n\n  ToIndexedSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var this$1 = this;\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? this$1.size - ++i : i++, step.value, step);\n    });\n  };\n\n  return ToIndexedSequence;\n}(IndexedSeq);\n\nvar ToSetSequence = /*@__PURE__*/function (SetSeq$$1) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if (SetSeq$$1) ToSetSequence.__proto__ = SetSeq$$1;\n  ToSetSequence.prototype = Object.create(SetSeq$$1 && SetSeq$$1.prototype);\n  ToSetSequence.prototype.constructor = ToSetSequence;\n\n  ToSetSequence.prototype.has = function has(key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$1);\n    }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  return ToSetSequence;\n}(SetSeq);\n\nvar FromEntriesSequence = /*@__PURE__*/function (KeyedSeq$$1) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  if (KeyedSeq$$1) FromEntriesSequence.__proto__ = KeyedSeq$$1;\n  FromEntriesSequence.prototype = Object.create(KeyedSeq$$1 && KeyedSeq$$1.prototype);\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n\n  FromEntriesSequence.prototype.entrySeq = function entrySeq() {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(indexedCollection ? entry.get(1) : entry[1], indexedCollection ? entry.get(0) : entry[0], this$1);\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value; // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(type, indexedCollection ? entry.get(0) : entry[0], indexedCollection ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n\n  return FromEntriesSequence;\n}(KeyedSeq);\n\nToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n\n  flipSequence.flip = function () {\n    return collection;\n  };\n\n  flipSequence.reverse = function () {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n\n    reversedSequence.flip = function () {\n      return collection.reverse();\n    };\n\n    return reversedSequence;\n  };\n\n  flipSequence.has = function (key) {\n    return collection.includes(key);\n  };\n\n  flipSequence.includes = function (key) {\n    return collection.has(key);\n  };\n\n  flipSequence.cacheResult = cacheResultThrough;\n\n  flipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    return collection.__iterate(function (v, k) {\n      return fn(k, v, this$1) !== false;\n    }, reverse);\n  };\n\n  flipSequence.__iteratorUncached = function (type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n\n      return new Iterator(function () {\n        var step = iterator.next();\n\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n\n        return step;\n      });\n    }\n\n    return collection.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n  };\n\n  return flipSequence;\n}\n\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n\n  mappedSequence.has = function (key) {\n    return collection.has(key);\n  };\n\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET ? notSetValue : mapper.call(context, v, key, collection);\n  };\n\n  mappedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    return collection.__iterate(function (v, k, c) {\n      return fn(mapper.call(context, v, k, c), k, this$1) !== false;\n    }, reverse);\n  };\n\n  mappedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n\n      if (step.done) {\n        return step;\n      }\n\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(type, key, mapper.call(context, entry[1], key, collection), step);\n    });\n  };\n\n  return mappedSequence;\n}\n\nfunction reverseFactory(collection, useKeys) {\n  var this$1 = this;\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n\n  reversedSequence.reverse = function () {\n    return collection;\n  };\n\n  if (collection.flip) {\n    reversedSequence.flip = function () {\n      var flipSequence = flipFactory(collection);\n\n      flipSequence.reverse = function () {\n        return collection.flip();\n      };\n\n      return flipSequence;\n    };\n  }\n\n  reversedSequence.get = function (key, notSetValue) {\n    return collection.get(useKeys ? key : -1 - key, notSetValue);\n  };\n\n  reversedSequence.has = function (key) {\n    return collection.has(useKeys ? key : -1 - key);\n  };\n\n  reversedSequence.includes = function (value) {\n    return collection.includes(value);\n  };\n\n  reversedSequence.cacheResult = cacheResultThrough;\n\n  reversedSequence.__iterate = function (fn, reverse) {\n    var this$1 = this;\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(function (v, k) {\n      return fn(v, useKeys ? k : reverse ? this$1.size - ++i : i++, this$1);\n    }, !reverse);\n  };\n\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n\n      if (step.done) {\n        return step;\n      }\n\n      var entry = step.value;\n      return iteratorValue(type, useKeys ? entry[0] : reverse ? this$1.size - ++i : i++, entry[1], step);\n    });\n  };\n\n  return reversedSequence;\n}\n\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection) ? v : notSetValue;\n    };\n  }\n\n  filterSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    var iterations = 0;\n\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    }, reverse);\n\n    return iterations;\n  };\n\n  filterSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n\n  return filterSequence;\n}\n\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) {\n      return a + 1;\n    });\n  });\n\n  return groups.asImmutable();\n}\n\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), function (a) {\n      return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n    });\n  });\n\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) {\n    return reify(collection, coerce(arr));\n  }).asImmutable();\n}\n\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize); // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  } // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n\n\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n\n  var sliceSeq = makeSequence(collection); // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n\n  sliceSeq.size = sliceSize === 0 ? sliceSize : collection.size && sliceSize || undefined;\n\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function (index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize ? collection.get(index + resolvedBegin, notSetValue) : notSetValue;\n    };\n  }\n\n  sliceSeq.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n\n    if (sliceSize === 0) {\n      return 0;\n    }\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1) !== false && iterations !== sliceSize;\n      }\n    });\n\n    return iterations;\n  };\n\n  sliceSeq.__iteratorUncached = function (type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    } // Don't bother instantiating parent iterator if taking 0.\n\n\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n\n    var iterator = collection.__iterator(type, reverse);\n\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n\n      var step = iterator.next();\n\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n\n  return sliceSeq;\n}\n\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n\n  takeSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterations = 0;\n\n    collection.__iterate(function (v, k, c) {\n      return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1);\n    });\n\n    return iterations;\n  };\n\n  takeSequence.__iteratorUncached = function (type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n\n      var step = iterator.next();\n\n      if (step.done) {\n        return step;\n      }\n\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n\n      if (!predicate.call(context, v, k, this$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n\n  return takeSequence;\n}\n\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n\n  skipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var isSkipping = true;\n    var iterations = 0;\n\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    });\n\n    return iterations;\n  };\n\n  skipSequence.__iteratorUncached = function (type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n\n      do {\n        step = iterator.next();\n\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1));\n      } while (skipping);\n\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n\n  return skipSequence;\n}\n\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection].concat(values).map(function (v) {\n    if (!isCollection(v)) {\n      v = isKeyedCollection ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n    } else if (isKeyedCollection) {\n      v = KeyedCollection(v);\n    }\n\n    return v;\n  }).filter(function (v) {\n    return v.size !== 0;\n  });\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (iters.length === 1) {\n    var singleton = iters[0];\n\n    if (singleton === collection || isKeyedCollection && isKeyed(singleton) || isIndexed(collection) && isIndexed(singleton)) {\n      return singleton;\n    }\n  }\n\n  var concatSeq = new ArraySeq(iters);\n\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\n\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n\n  flatSequence.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterations = 0;\n    var stopped = false;\n\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n\n        return !stopped;\n      }, reverse);\n    }\n\n    flatDeep(collection, 0);\n    return iterations;\n  };\n\n  flatSequence.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = collection.__iterator(type, reverse);\n\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n\n        var v = step.value;\n\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n\n      return iteratorDone();\n    });\n  };\n\n  return flatSequence;\n}\n\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection.toSeq().map(function (v, k) {\n    return coerce(mapper.call(context, v, k, collection));\n  }).flatten(true);\n}\n\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n\n  interposedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    var iterations = 0;\n\n    collection.__iterate(function (v) {\n      return (!iterations || fn(separator, iterations++, this$1) !== false) && fn(v, iterations++, this$1) !== false;\n    }, reverse);\n\n    return iterations;\n  };\n\n  interposedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n      }\n\n      return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n\n  return interposedSequence;\n}\n\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection.toSeq().map(function (v, k) {\n    return [k, v, index++, mapper ? mapper(v, k, collection) : v];\n  }).valueSeq().toArray();\n  entries.sort(function (a, b) {\n    return comparator(a[3], b[3]) || a[2] - b[2];\n  }).forEach(isKeyedCollection ? function (v, i) {\n    entries[i].length = 2;\n  } : function (v, i) {\n    entries[i] = v[1];\n  });\n  return isKeyedCollection ? KeyedSeq(entries) : isIndexed(collection) ? IndexedSeq(entries) : SetSeq(entries);\n}\n\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n\n  if (mapper) {\n    var entry = collection.toSeq().map(function (v, k) {\n      return [v, mapper(v, k, collection)];\n    }).reduce(function (a, b) {\n      return maxCompare(comparator, a[1], b[1]) ? b : a;\n    });\n    return entry && entry[0];\n  }\n\n  return collection.reduce(function (a, b) {\n    return maxCompare(comparator, a, b) ? b : a;\n  });\n}\n\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a); // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n\n  return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n}\n\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) {\n    return i.size;\n  });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min(); // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n\n  zipSequence.__iterate = function (fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n\n    var step;\n    var iterations = 0;\n\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n\n    return iterations;\n  };\n\n  zipSequence.__iteratorUncached = function (type, reverse) {\n    var iterators = iters.map(function (i) {\n      return i = Collection(i), getIterator(reverse ? i.reverse() : i);\n    });\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n\n      if (!isDone) {\n        steps = iterators.map(function (i) {\n          return i.next();\n        });\n        isDone = zipAll ? steps.every(function (s) {\n          return s.done;\n        }) : steps.some(function (s) {\n          return s.done;\n        });\n      }\n\n      if (isDone) {\n        return iteratorDone();\n      }\n\n      return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n        return s.value;\n      })));\n    });\n  };\n\n  return zipSequence;\n} // #pragma Helper Functions\n\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\n\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\n\nfunction collectionClass(collection) {\n  return isKeyed(collection) ? KeyedCollection : isIndexed(collection) ? IndexedCollection : SetCollection;\n}\n\nfunction makeSequence(collection) {\n  return Object.create((isKeyed(collection) ? KeyedSeq : isIndexed(collection) ? IndexedSeq : SetSeq).prototype);\n}\n\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n\n    this.size = this._iter.size;\n    return this;\n  }\n\n  return Seq.prototype.cacheResult.call(this);\n}\n\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n\n  if (a === undefined) {\n    return 1;\n  }\n\n  if (b === undefined) {\n    return -1;\n  }\n\n  return a > b ? 1 : a < b ? -1 : 0;\n} // http://jsperf.com/copy-array-inline\n\n\nfunction arrCopy(arr, offset) {\n  offset = offset || 0;\n  var len = Math.max(0, arr.length - offset);\n  var newArr = new Array(len);\n\n  for (var ii = 0; ii < len; ii++) {\n    newArr[ii] = arr[ii + offset];\n  }\n\n  return newArr;\n}\n\nfunction invariant(condition, error) {\n  if (!condition) {\n    throw new Error(error);\n  }\n}\n\nfunction assertNotInfinite(size) {\n  invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n}\n\nfunction coerceKeyPath(keyPath) {\n  if (isArrayLike(keyPath) && typeof keyPath !== 'string') {\n    return keyPath;\n  }\n\n  if (isOrdered(keyPath)) {\n    return keyPath.toArray();\n  }\n\n  throw new TypeError('Invalid keyPath: expected Ordered Collection or Array: ' + keyPath);\n}\n\nfunction isPlainObj(value) {\n  return value && (typeof value.constructor !== 'function' || value.constructor.name === 'Object');\n}\n/**\n * Returns true if the value is a potentially-persistent data structure, either\n * provided by Immutable.js or a plain Array or Object.\n */\n\n\nfunction isDataStructure(value) {\n  return typeof value === 'object' && (isImmutable(value) || Array.isArray(value) || isPlainObj(value));\n}\n/**\n * Converts a value to a string, adding quotes if a string was provided.\n */\n\n\nfunction quoteString(value) {\n  try {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  } catch (_ignoreError) {\n    return JSON.stringify(value);\n  }\n}\n\nfunction has(collection, key) {\n  return isImmutable(collection) ? collection.has(key) : isDataStructure(collection) && hasOwnProperty.call(collection, key);\n}\n\nfunction get(collection, key, notSetValue) {\n  return isImmutable(collection) ? collection.get(key, notSetValue) : !has(collection, key) ? notSetValue : typeof collection.get === 'function' ? collection.get(key) : collection[key];\n}\n\nfunction shallowCopy(from) {\n  if (Array.isArray(from)) {\n    return arrCopy(from);\n  }\n\n  var to = {};\n\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      to[key] = from[key];\n    }\n  }\n\n  return to;\n}\n\nfunction remove(collection, key) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError('Cannot update non-data-structure value: ' + collection);\n  }\n\n  if (isImmutable(collection)) {\n    if (!collection.remove) {\n      throw new TypeError('Cannot update immutable value without .remove() method: ' + collection);\n    }\n\n    return collection.remove(key);\n  }\n\n  if (!hasOwnProperty.call(collection, key)) {\n    return collection;\n  }\n\n  var collectionCopy = shallowCopy(collection);\n\n  if (Array.isArray(collectionCopy)) {\n    collectionCopy.splice(key, 1);\n  } else {\n    delete collectionCopy[key];\n  }\n\n  return collectionCopy;\n}\n\nfunction set(collection, key, value) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError('Cannot update non-data-structure value: ' + collection);\n  }\n\n  if (isImmutable(collection)) {\n    if (!collection.set) {\n      throw new TypeError('Cannot update immutable value without .set() method: ' + collection);\n    }\n\n    return collection.set(key, value);\n  }\n\n  if (hasOwnProperty.call(collection, key) && value === collection[key]) {\n    return collection;\n  }\n\n  var collectionCopy = shallowCopy(collection);\n  collectionCopy[key] = value;\n  return collectionCopy;\n}\n\nfunction updateIn(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n\n  var updatedValue = updateInDeeply(isImmutable(collection), collection, coerceKeyPath(keyPath), 0, notSetValue, updater);\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\n\nfunction updateInDeeply(inImmutable, existing, keyPath, i, notSetValue, updater) {\n  var wasNotSet = existing === NOT_SET;\n\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError('Cannot update within non-data-structure value in path [' + keyPath.slice(0, i).map(quoteString) + ']: ' + existing);\n  }\n\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting), nextExisting, keyPath, i + 1, notSetValue, updater);\n  return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? remove(existing, key) : set(wasNotSet ? inImmutable ? emptyMap() : {} : existing, key, nextUpdated);\n}\n\nfunction setIn(collection, keyPath, value) {\n  return updateIn(collection, keyPath, NOT_SET, function () {\n    return value;\n  });\n}\n\nfunction setIn$1(keyPath, v) {\n  return setIn(this, keyPath, v);\n}\n\nfunction removeIn(collection, keyPath) {\n  return updateIn(collection, keyPath, function () {\n    return NOT_SET;\n  });\n}\n\nfunction deleteIn(keyPath) {\n  return removeIn(this, keyPath);\n}\n\nfunction update(collection, key, notSetValue, updater) {\n  return updateIn(collection, [key], notSetValue, updater);\n}\n\nfunction update$1(key, notSetValue, updater) {\n  return arguments.length === 1 ? key(this) : update(this, key, notSetValue, updater);\n}\n\nfunction updateIn$1(keyPath, notSetValue, updater) {\n  return updateIn(this, keyPath, notSetValue, updater);\n}\n\nfunction merge() {\n  var iters = [],\n      len = arguments.length;\n\n  while (len--) iters[len] = arguments[len];\n\n  return mergeIntoKeyedWith(this, iters);\n}\n\nfunction mergeWith(merger) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) iters[len] = arguments[len + 1];\n\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n\n  return mergeIntoKeyedWith(this, iters, merger);\n}\n\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (collection.toSeq().size === 0 && !collection.__ownerID && iters.length === 1) {\n    return collection.constructor(iters[0]);\n  }\n\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger ? function (value, key) {\n      update(collection, key, NOT_SET, function (oldVal) {\n        return oldVal === NOT_SET ? value : merger(oldVal, value, key);\n      });\n    } : function (value, key) {\n      collection.set(key, value);\n    };\n\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\n\nfunction merge$1(collection) {\n  var sources = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) sources[len] = arguments[len + 1];\n\n  return mergeWithSources(collection, sources);\n}\n\nfunction mergeWith$1(merger, collection) {\n  var sources = [],\n      len = arguments.length - 2;\n\n  while (len-- > 0) sources[len] = arguments[len + 2];\n\n  return mergeWithSources(collection, sources, merger);\n}\n\nfunction mergeDeep(collection) {\n  var sources = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) sources[len] = arguments[len + 1];\n\n  return mergeDeepWithSources(collection, sources);\n}\n\nfunction mergeDeepWith(merger, collection) {\n  var sources = [],\n      len = arguments.length - 2;\n\n  while (len-- > 0) sources[len] = arguments[len + 2];\n\n  return mergeDeepWithSources(collection, sources, merger);\n}\n\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\n\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError('Cannot merge into non-data-structure value: ' + collection);\n  }\n\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith ? collection.mergeWith.apply(collection, [merger].concat(sources)) : collection.merge ? collection.merge.apply(collection, sources) : collection.concat.apply(collection, sources);\n  }\n\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection$$1 = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray ? function (value) {\n    // Copy on write\n    if (merged === collection) {\n      merged = shallowCopy(merged);\n    }\n\n    merged.push(value);\n  } : function (value, key) {\n    var hasVal = hasOwnProperty.call(merged, key);\n    var nextVal = hasVal && merger ? merger(merged[key], value, key) : value;\n\n    if (!hasVal || nextVal !== merged[key]) {\n      // Copy on write\n      if (merged === collection) {\n        merged = shallowCopy(merged);\n      }\n\n      merged[key] = nextVal;\n    }\n  };\n\n  for (var i = 0; i < sources.length; i++) {\n    Collection$$1(sources[i]).forEach(mergeItem);\n  }\n\n  return merged;\n}\n\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) && isDataStructure(newValue) ? mergeWithSources(oldValue, [newValue], deepMerger) : merger ? merger(oldValue, newValue, key) : newValue;\n  }\n\n  return deepMerger;\n}\n\nfunction mergeDeep$1() {\n  var iters = [],\n      len = arguments.length;\n\n  while (len--) iters[len] = arguments[len];\n\n  return mergeDeepWithSources(this, iters);\n}\n\nfunction mergeDeepWith$1(merger) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) iters[len] = arguments[len + 1];\n\n  return mergeDeepWithSources(this, iters, merger);\n}\n\nfunction mergeIn(keyPath) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) iters[len] = arguments[len + 1];\n\n  return updateIn(this, keyPath, emptyMap(), function (m) {\n    return mergeWithSources(m, iters);\n  });\n}\n\nfunction mergeDeepIn(keyPath) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) iters[len] = arguments[len + 1];\n\n  return updateIn(this, keyPath, emptyMap(), function (m) {\n    return mergeDeepWithSources(m, iters);\n  });\n}\n\nfunction withMutations(fn) {\n  var mutable = this.asMutable();\n  fn(mutable);\n  return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n}\n\nfunction asMutable() {\n  return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n}\n\nfunction asImmutable() {\n  return this.__ensureOwner();\n}\n\nfunction wasAltered() {\n  return this.__altered;\n}\n\nvar Map = /*@__PURE__*/function (KeyedCollection$$1) {\n  function Map(value) {\n    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {\n      var iter = KeyedCollection$$1(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  if (KeyedCollection$$1) Map.__proto__ = KeyedCollection$$1;\n  Map.prototype = Object.create(KeyedCollection$$1 && KeyedCollection$$1.prototype);\n  Map.prototype.constructor = Map;\n\n  Map.of = function of() {\n    var keyValues = [],\n        len = arguments.length;\n\n    while (len--) keyValues[len] = arguments[len];\n\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function toString() {\n    return this.__toString('Map {', '}');\n  }; // @pragma Access\n\n\n  Map.prototype.get = function get(k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  }; // @pragma Modification\n\n\n  Map.prototype.set = function set(k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.remove = function remove(k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteAll = function deleteAll(keys) {\n    var collection = Collection(keys);\n\n    if (collection.size === 0) {\n      return this;\n    }\n\n    return this.withMutations(function (map) {\n      collection.forEach(function (key) {\n        return map.remove(key);\n      });\n    });\n  };\n\n  Map.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyMap();\n  }; // @pragma Composition\n\n\n  Map.prototype.sort = function sort(comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function sortBy(mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  Map.prototype.map = function map(mapper, context) {\n    return this.withMutations(function (map) {\n      map.forEach(function (value, key) {\n        map.set(key, mapper.call(context, value, key, map));\n      });\n    });\n  }; // @pragma Mutability\n\n\n  Map.prototype.__iterator = function __iterator(type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    var iterations = 0;\n    this._root && this._root.iterate(function (entry) {\n      iterations++;\n      return fn(entry[1], entry[0], this$1);\n    }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyMap();\n      }\n\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  return Map;\n}(KeyedCollection);\n\nMap.isMap = isMap;\nvar MapPrototype = Map.prototype;\nMapPrototype[IS_MAP_SYMBOL] = true;\nMapPrototype[DELETE] = MapPrototype.remove;\nMapPrototype.removeAll = MapPrototype.deleteAll;\nMapPrototype.setIn = setIn$1;\nMapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;\nMapPrototype.update = update$1;\nMapPrototype.updateIn = updateIn$1;\nMapPrototype.merge = MapPrototype.concat = merge;\nMapPrototype.mergeWith = mergeWith;\nMapPrototype.mergeDeep = mergeDeep$1;\nMapPrototype.mergeDeepWith = mergeDeepWith$1;\nMapPrototype.mergeIn = mergeIn;\nMapPrototype.mergeDeepIn = mergeDeepIn;\nMapPrototype.withMutations = withMutations;\nMapPrototype.wasAltered = wasAltered;\nMapPrototype.asImmutable = asImmutable;\nMapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;\n\nMapPrototype['@@transducer/step'] = function (result, arr) {\n  return result.set(arr[0], arr[1]);\n};\n\nMapPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n}; // #pragma Trie Nodes\n\n\nvar ArrayMapNode = function ArrayMapNode(ownerID, entries) {\n  this.ownerID = ownerID;\n  this.entries = entries;\n};\n\nArrayMapNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n\n  return notSetValue;\n};\n\nArrayMapNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && entries.length === 1) {\n    return; // undefined\n  }\n\n  if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n    return createNodes(ownerID, entries, key, value);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new ArrayMapNode(ownerID, newEntries);\n};\n\nvar BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {\n  this.ownerID = ownerID;\n  this.bitmap = bitmap;\n  this.nodes = nodes;\n};\n\nBitmapIndexedNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n  var bitmap = this.bitmap;\n  return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n};\n\nBitmapIndexedNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var bit = 1 << keyHashFrag;\n  var bitmap = this.bitmap;\n  var exists = (bitmap & bit) !== 0;\n\n  if (!exists && value === NOT_SET) {\n    return this;\n  }\n\n  var idx = popCount(bitmap & bit - 1);\n  var nodes = this.nodes;\n  var node = exists ? nodes[idx] : undefined;\n  var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n  if (newNode === node) {\n    return this;\n  }\n\n  if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n    return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n  }\n\n  if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n    return nodes[idx ^ 1];\n  }\n\n  if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n    return newNode;\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n  var newNodes = exists ? newNode ? setAt(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.bitmap = newBitmap;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n};\n\nvar HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {\n  this.ownerID = ownerID;\n  this.count = count;\n  this.nodes = nodes;\n};\n\nHashArrayMapNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var node = this.nodes[idx];\n  return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n};\n\nHashArrayMapNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var removed = value === NOT_SET;\n  var nodes = this.nodes;\n  var node = nodes[idx];\n\n  if (removed && !node) {\n    return this;\n  }\n\n  var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n  if (newNode === node) {\n    return this;\n  }\n\n  var newCount = this.count;\n\n  if (!node) {\n    newCount++;\n  } else if (!newNode) {\n    newCount--;\n\n    if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n      return packNodes(ownerID, nodes, newCount, idx);\n    }\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newNodes = setAt(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.count = newCount;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new HashArrayMapNode(ownerID, newCount, newNodes);\n};\n\nvar HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entries = entries;\n};\n\nHashCollisionNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n\n  return notSetValue;\n};\n\nHashCollisionNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var removed = value === NOT_SET;\n\n  if (keyHash !== this.keyHash) {\n    if (removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n  }\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && len === 2) {\n    return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n};\n\nvar ValueNode = function ValueNode(ownerID, keyHash, entry) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entry = entry;\n};\n\nValueNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n};\n\nValueNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var keyMatch = is(key, this.entry[0]);\n\n  if (keyMatch ? value === this.entry[1] : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n\n  if (removed) {\n    SetRef(didChangeSize);\n    return; // undefined\n  }\n\n  if (keyMatch) {\n    if (ownerID && ownerID === this.ownerID) {\n      this.entry[1] = value;\n      return this;\n    }\n\n    return new ValueNode(ownerID, this.keyHash, [key, value]);\n  }\n\n  SetRef(didChangeSize);\n  return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n}; // #pragma Iterators\n\n\nArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {\n  var entries = this.entries;\n\n  for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n    if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n      return false;\n    }\n  }\n};\n\nBitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n  var nodes = this.nodes;\n\n  for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n    var node = nodes[reverse ? maxIndex - ii : ii];\n\n    if (node && node.iterate(fn, reverse) === false) {\n      return false;\n    }\n  }\n}; // eslint-disable-next-line no-unused-vars\n\n\nValueNode.prototype.iterate = function (fn, reverse) {\n  return fn(this.entry);\n};\n\nvar MapIterator = /*@__PURE__*/function (Iterator$$1) {\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  if (Iterator$$1) MapIterator.__proto__ = Iterator$$1;\n  MapIterator.prototype = Object.create(Iterator$$1 && Iterator$$1.prototype);\n  MapIterator.prototype.constructor = MapIterator;\n\n  MapIterator.prototype.next = function next() {\n    var type = this._type;\n    var stack = this._stack;\n\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex = void 0;\n\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n\n          continue;\n        }\n      }\n\n      stack = this._stack = this._stack.__prev;\n    }\n\n    return iteratorDone();\n  };\n\n  return MapIterator;\n}(Iterator);\n\nfunction mapIteratorValue(type, entry) {\n  return iteratorValue(type, entry[0], entry[1]);\n}\n\nfunction mapIteratorFrame(node, prev) {\n  return {\n    node: node,\n    index: 0,\n    __prev: prev\n  };\n}\n\nfunction makeMap(size, root, ownerID, hash$$1) {\n  var map = Object.create(MapPrototype);\n  map.size = size;\n  map._root = root;\n  map.__ownerID = ownerID;\n  map.__hash = hash$$1;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_MAP;\n\nfunction emptyMap() {\n  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n}\n\nfunction updateMap(map, k, v) {\n  var newRoot;\n  var newSize;\n\n  if (!map._root) {\n    if (v === NOT_SET) {\n      return map;\n    }\n\n    newSize = 1;\n    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n  } else {\n    var didChangeSize = MakeRef();\n    var didAlter = MakeRef();\n    newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n\n    if (!didAlter.value) {\n      return map;\n    }\n\n    newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n  }\n\n  if (map.__ownerID) {\n    map.size = newSize;\n    map._root = newRoot;\n    map.__hash = undefined;\n    map.__altered = true;\n    return map;\n  }\n\n  return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n}\n\nfunction updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (!node) {\n    if (value === NOT_SET) {\n      return node;\n    }\n\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return new ValueNode(ownerID, keyHash, [key, value]);\n  }\n\n  return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n}\n\nfunction isLeafNode(node) {\n  return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n}\n\nfunction mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n  if (node.keyHash === keyHash) {\n    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n  }\n\n  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var newNode;\n  var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n  return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n}\n\nfunction createNodes(ownerID, entries, key, value) {\n  if (!ownerID) {\n    ownerID = new OwnerID();\n  }\n\n  var node = new ValueNode(ownerID, hash(key), [key, value]);\n\n  for (var ii = 0; ii < entries.length; ii++) {\n    var entry = entries[ii];\n    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n  }\n\n  return node;\n}\n\nfunction packNodes(ownerID, nodes, count, excluding) {\n  var bitmap = 0;\n  var packedII = 0;\n  var packedNodes = new Array(count);\n\n  for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n    var node = nodes[ii];\n\n    if (node !== undefined && ii !== excluding) {\n      bitmap |= bit;\n      packedNodes[packedII++] = node;\n    }\n  }\n\n  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n}\n\nfunction expandNodes(ownerID, nodes, bitmap, including, node) {\n  var count = 0;\n  var expandedNodes = new Array(SIZE);\n\n  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n  }\n\n  expandedNodes[including] = node;\n  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n}\n\nfunction popCount(x) {\n  x -= x >> 1 & 0x55555555;\n  x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n  x = x + (x >> 4) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n\nfunction setAt(array, idx, val, canEdit) {\n  var newArray = canEdit ? array : arrCopy(array);\n  newArray[idx] = val;\n  return newArray;\n}\n\nfunction spliceIn(array, idx, val, canEdit) {\n  var newLen = array.length + 1;\n\n  if (canEdit && idx + 1 === newLen) {\n    array[idx] = val;\n    return array;\n  }\n\n  var newArray = new Array(newLen);\n  var after = 0;\n\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      newArray[ii] = val;\n      after = -1;\n    } else {\n      newArray[ii] = array[ii + after];\n    }\n  }\n\n  return newArray;\n}\n\nfunction spliceOut(array, idx, canEdit) {\n  var newLen = array.length - 1;\n\n  if (canEdit && idx === newLen) {\n    array.pop();\n    return array;\n  }\n\n  var newArray = new Array(newLen);\n  var after = 0;\n\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      after = 1;\n    }\n\n    newArray[ii] = array[ii + after];\n  }\n\n  return newArray;\n}\n\nvar MAX_ARRAY_MAP_SIZE = SIZE / 4;\nvar MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\nvar MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\nvar IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';\n\nfunction isList(maybeList) {\n  return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);\n}\n\nvar List = /*@__PURE__*/function (IndexedCollection$$1) {\n  function List(value) {\n    var empty = emptyList();\n\n    if (value === null || value === undefined) {\n      return empty;\n    }\n\n    if (isList(value)) {\n      return value;\n    }\n\n    var iter = IndexedCollection$$1(value);\n    var size = iter.size;\n\n    if (size === 0) {\n      return empty;\n    }\n\n    assertNotInfinite(size);\n\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) {\n        return list.set(i, v);\n      });\n    });\n  }\n\n  if (IndexedCollection$$1) List.__proto__ = IndexedCollection$$1;\n  List.prototype = Object.create(IndexedCollection$$1 && IndexedCollection$$1.prototype);\n  List.prototype.constructor = List;\n\n  List.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function toString() {\n    return this.__toString('List [', ']');\n  }; // @pragma Access\n\n\n  List.prototype.get = function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n\n    return notSetValue;\n  }; // @pragma Modification\n\n\n  List.prototype.set = function set(index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function remove(index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function insert(index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyList();\n  };\n\n  List.prototype.push = function push()\n  /*...values*/\n  {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function pop() {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function unshift()\n  /*...values*/\n  {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function shift() {\n    return setListBounds(this, 1);\n  }; // @pragma Composition\n\n\n  List.prototype.concat = function concat()\n  /*...collections*/\n  {\n    var arguments$1 = arguments;\n    var seqs = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var argument = arguments$1[i];\n      var seq = IndexedCollection$$1(typeof argument !== 'string' && hasIterator(argument) ? argument : [argument]);\n\n      if (seq.size !== 0) {\n        seqs.push(seq);\n      }\n    }\n\n    if (seqs.length === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && !this.__ownerID && seqs.length === 1) {\n      return this.constructor(seqs[0]);\n    }\n\n    return this.withMutations(function (list) {\n      seqs.forEach(function (seq) {\n        return seq.forEach(function (value) {\n          return list.push(value);\n        });\n      });\n    });\n  };\n\n  List.prototype.setSize = function setSize(size) {\n    return setListBounds(this, 0, size);\n  };\n\n  List.prototype.map = function map(mapper, context) {\n    var this$1 = this;\n    return this.withMutations(function (list) {\n      for (var i = 0; i < this$1.size; i++) {\n        list.set(i, mapper.call(context, list.get(i), i, list));\n      }\n    });\n  }; // @pragma Iteration\n\n\n  List.prototype.slice = function slice(begin, end) {\n    var size = this.size;\n\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  };\n\n  List.prototype.__iterator = function __iterator(type, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE ? iteratorDone() : iteratorValue(type, reverse ? --index : index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function __iterate(fn, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    var value;\n\n    while ((value = values()) !== DONE) {\n      if (fn(value, reverse ? --index : index++, this) === false) {\n        break;\n      }\n    }\n\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyList();\n      }\n\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  };\n\n  return List;\n}(IndexedCollection);\n\nList.isList = isList;\nvar ListPrototype = List.prototype;\nListPrototype[IS_LIST_SYMBOL] = true;\nListPrototype[DELETE] = ListPrototype.remove;\nListPrototype.merge = ListPrototype.concat;\nListPrototype.setIn = setIn$1;\nListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;\nListPrototype.update = update$1;\nListPrototype.updateIn = updateIn$1;\nListPrototype.mergeIn = mergeIn;\nListPrototype.mergeDeepIn = mergeDeepIn;\nListPrototype.withMutations = withMutations;\nListPrototype.wasAltered = wasAltered;\nListPrototype.asImmutable = asImmutable;\nListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;\n\nListPrototype['@@transducer/step'] = function (result, arr) {\n  return result.push(arr);\n};\n\nListPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nvar VNode = function VNode(array, ownerID) {\n  this.array = array;\n  this.ownerID = ownerID;\n}; // TODO: seems like these methods are very similar\n\n\nVNode.prototype.removeBefore = function removeBefore(ownerID, level, index) {\n  if (index === level ? 1 << level : this.array.length === 0) {\n    return this;\n  }\n\n  var originIndex = index >>> level & MASK;\n\n  if (originIndex >= this.array.length) {\n    return new VNode([], ownerID);\n  }\n\n  var removingFirst = originIndex === 0;\n  var newChild;\n\n  if (level > 0) {\n    var oldChild = this.array[originIndex];\n    newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n\n    if (newChild === oldChild && removingFirst) {\n      return this;\n    }\n  }\n\n  if (removingFirst && !newChild) {\n    return this;\n  }\n\n  var editable = editableVNode(this, ownerID);\n\n  if (!removingFirst) {\n    for (var ii = 0; ii < originIndex; ii++) {\n      editable.array[ii] = undefined;\n    }\n  }\n\n  if (newChild) {\n    editable.array[originIndex] = newChild;\n  }\n\n  return editable;\n};\n\nVNode.prototype.removeAfter = function removeAfter(ownerID, level, index) {\n  if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n    return this;\n  }\n\n  var sizeIndex = index - 1 >>> level & MASK;\n\n  if (sizeIndex >= this.array.length) {\n    return this;\n  }\n\n  var newChild;\n\n  if (level > 0) {\n    var oldChild = this.array[sizeIndex];\n    newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n\n    if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n      return this;\n    }\n  }\n\n  var editable = editableVNode(this, ownerID);\n  editable.array.splice(sizeIndex + 1);\n\n  if (newChild) {\n    editable.array[sizeIndex] = newChild;\n  }\n\n  return editable;\n};\n\nvar DONE = {};\n\nfunction iterateList(list, reverse) {\n  var left = list._origin;\n  var right = list._capacity;\n  var tailPos = getTailOffset(right);\n  var tail = list._tail;\n  return iterateNodeOrLeaf(list._root, list._level, 0);\n\n  function iterateNodeOrLeaf(node, level, offset) {\n    return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n  }\n\n  function iterateLeaf(node, offset) {\n    var array = offset === tailPos ? tail && tail.array : node && node.array;\n    var from = offset > left ? 0 : left - offset;\n    var to = right - offset;\n\n    if (to > SIZE) {\n      to = SIZE;\n    }\n\n    return function () {\n      if (from === to) {\n        return DONE;\n      }\n\n      var idx = reverse ? --to : from++;\n      return array && array[idx];\n    };\n  }\n\n  function iterateNode(node, level, offset) {\n    var values;\n    var array = node && node.array;\n    var from = offset > left ? 0 : left - offset >> level;\n    var to = (right - offset >> level) + 1;\n\n    if (to > SIZE) {\n      to = SIZE;\n    }\n\n    return function () {\n      while (true) {\n        if (values) {\n          var value = values();\n\n          if (value !== DONE) {\n            return value;\n          }\n\n          values = null;\n        }\n\n        if (from === to) {\n          return DONE;\n        }\n\n        var idx = reverse ? --to : from++;\n        values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n      }\n    };\n  }\n}\n\nfunction makeList(origin, capacity, level, root, tail, ownerID, hash) {\n  var list = Object.create(ListPrototype);\n  list.size = capacity - origin;\n  list._origin = origin;\n  list._capacity = capacity;\n  list._level = level;\n  list._root = root;\n  list._tail = tail;\n  list.__ownerID = ownerID;\n  list.__hash = hash;\n  list.__altered = false;\n  return list;\n}\n\nvar EMPTY_LIST;\n\nfunction emptyList() {\n  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n}\n\nfunction updateList(list, index, value) {\n  index = wrapIndex(list, index);\n\n  if (index !== index) {\n    return list;\n  }\n\n  if (index >= list.size || index < 0) {\n    return list.withMutations(function (list) {\n      index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n    });\n  }\n\n  index += list._origin;\n  var newTail = list._tail;\n  var newRoot = list._root;\n  var didAlter = MakeRef();\n\n  if (index >= getTailOffset(list._capacity)) {\n    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n  } else {\n    newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n  }\n\n  if (!didAlter.value) {\n    return list;\n  }\n\n  if (list.__ownerID) {\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n\n  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n}\n\nfunction updateVNode(node, ownerID, level, index, value, didAlter) {\n  var idx = index >>> level & MASK;\n  var nodeHas = node && idx < node.array.length;\n\n  if (!nodeHas && value === undefined) {\n    return node;\n  }\n\n  var newNode;\n\n  if (level > 0) {\n    var lowerNode = node && node.array[idx];\n    var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n\n    if (newLowerNode === lowerNode) {\n      return node;\n    }\n\n    newNode = editableVNode(node, ownerID);\n    newNode.array[idx] = newLowerNode;\n    return newNode;\n  }\n\n  if (nodeHas && node.array[idx] === value) {\n    return node;\n  }\n\n  if (didAlter) {\n    SetRef(didAlter);\n  }\n\n  newNode = editableVNode(node, ownerID);\n\n  if (value === undefined && idx === newNode.array.length - 1) {\n    newNode.array.pop();\n  } else {\n    newNode.array[idx] = value;\n  }\n\n  return newNode;\n}\n\nfunction editableVNode(node, ownerID) {\n  if (ownerID && node && ownerID === node.ownerID) {\n    return node;\n  }\n\n  return new VNode(node ? node.array.slice() : [], ownerID);\n}\n\nfunction listNodeFor(list, rawIndex) {\n  if (rawIndex >= getTailOffset(list._capacity)) {\n    return list._tail;\n  }\n\n  if (rawIndex < 1 << list._level + SHIFT) {\n    var node = list._root;\n    var level = list._level;\n\n    while (node && level > 0) {\n      node = node.array[rawIndex >>> level & MASK];\n      level -= SHIFT;\n    }\n\n    return node;\n  }\n}\n\nfunction setListBounds(list, begin, end) {\n  // Sanitize begin & end using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  if (begin !== undefined) {\n    begin |= 0;\n  }\n\n  if (end !== undefined) {\n    end |= 0;\n  }\n\n  var owner = list.__ownerID || new OwnerID();\n  var oldOrigin = list._origin;\n  var oldCapacity = list._capacity;\n  var newOrigin = oldOrigin + begin;\n  var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n\n  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n    return list;\n  } // If it's going to end after it starts, it's empty.\n\n\n  if (newOrigin >= newCapacity) {\n    return list.clear();\n  }\n\n  var newLevel = list._level;\n  var newRoot = list._root; // New origin might need creating a higher root.\n\n  var offsetShift = 0;\n\n  while (newOrigin + offsetShift < 0) {\n    newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n    newLevel += SHIFT;\n    offsetShift += 1 << newLevel;\n  }\n\n  if (offsetShift) {\n    newOrigin += offsetShift;\n    oldOrigin += offsetShift;\n    newCapacity += offsetShift;\n    oldCapacity += offsetShift;\n  }\n\n  var oldTailOffset = getTailOffset(oldCapacity);\n  var newTailOffset = getTailOffset(newCapacity); // New size might need creating a higher root.\n\n  while (newTailOffset >= 1 << newLevel + SHIFT) {\n    newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n    newLevel += SHIFT;\n  } // Locate or create the new tail.\n\n\n  var oldTail = list._tail;\n  var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail; // Merge Tail into tree.\n\n  if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n    newRoot = editableVNode(newRoot, owner);\n    var node = newRoot;\n\n    for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n      var idx = oldTailOffset >>> level & MASK;\n      node = node.array[idx] = editableVNode(node.array[idx], owner);\n    }\n\n    node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n  } // If the size has been reduced, there's a chance the tail needs to be trimmed.\n\n\n  if (newCapacity < oldCapacity) {\n    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n  } // If the new origin is within the tail, then we do not need a root.\n\n\n  if (newOrigin >= newTailOffset) {\n    newOrigin -= newTailOffset;\n    newCapacity -= newTailOffset;\n    newLevel = SHIFT;\n    newRoot = null;\n    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin); // Otherwise, if the root has been trimmed, garbage collect.\n  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n    offsetShift = 0; // Identify the new top root node of the subtree of the old root.\n\n    while (newRoot) {\n      var beginIndex = newOrigin >>> newLevel & MASK;\n\n      if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n        break;\n      }\n\n      if (beginIndex) {\n        offsetShift += (1 << newLevel) * beginIndex;\n      }\n\n      newLevel -= SHIFT;\n      newRoot = newRoot.array[beginIndex];\n    } // Trim the new sides of the new root.\n\n\n    if (newRoot && newOrigin > oldOrigin) {\n      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n    }\n\n    if (newRoot && newTailOffset < oldTailOffset) {\n      newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n    }\n\n    if (offsetShift) {\n      newOrigin -= offsetShift;\n      newCapacity -= offsetShift;\n    }\n  }\n\n  if (list.__ownerID) {\n    list.size = newCapacity - newOrigin;\n    list._origin = newOrigin;\n    list._capacity = newCapacity;\n    list._level = newLevel;\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n\n  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n}\n\nfunction getTailOffset(size) {\n  return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n}\n\nvar OrderedMap = /*@__PURE__*/function (Map$$1) {\n  function OrderedMap(value) {\n    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {\n      var iter = KeyedCollection(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  if (Map$$1) OrderedMap.__proto__ = Map$$1;\n  OrderedMap.prototype = Object.create(Map$$1 && Map$$1.prototype);\n  OrderedMap.prototype.constructor = OrderedMap;\n\n  OrderedMap.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function toString() {\n    return this.__toString('OrderedMap {', '}');\n  }; // @pragma Access\n\n\n  OrderedMap.prototype.get = function get(k, notSetValue) {\n    var index = this._map.get(k);\n\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  }; // @pragma Modification\n\n\n  OrderedMap.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n\n      this._map.clear();\n\n      this._list.clear();\n\n      return this;\n    }\n\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function set(k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function remove(k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function wasAltered() {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._list.__iterate(function (entry) {\n      return entry && fn(entry[1], entry[0], this$1);\n    }, reverse);\n  };\n\n  OrderedMap.prototype.__iterator = function __iterator(type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    var newList = this._list.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyOrderedMap();\n      }\n\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  return OrderedMap;\n}(Map);\n\nOrderedMap.isOrderedMap = isOrderedMap;\nOrderedMap.prototype[IS_ORDERED_SYMBOL] = true;\nOrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\nfunction makeOrderedMap(map, list, ownerID, hash) {\n  var omap = Object.create(OrderedMap.prototype);\n  omap.size = map ? map.size : 0;\n  omap._map = map;\n  omap._list = list;\n  omap.__ownerID = ownerID;\n  omap.__hash = hash;\n  return omap;\n}\n\nvar EMPTY_ORDERED_MAP;\n\nfunction emptyOrderedMap() {\n  return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n}\n\nfunction updateOrderedMap(omap, k, v) {\n  var map = omap._map;\n  var list = omap._list;\n  var i = map.get(k);\n  var has = i !== undefined;\n  var newMap;\n  var newList;\n\n  if (v === NOT_SET) {\n    // removed\n    if (!has) {\n      return omap;\n    }\n\n    if (list.size >= SIZE && list.size >= map.size * 2) {\n      newList = list.filter(function (entry, idx) {\n        return entry !== undefined && i !== idx;\n      });\n      newMap = newList.toKeyedSeq().map(function (entry) {\n        return entry[0];\n      }).flip().toMap();\n\n      if (omap.__ownerID) {\n        newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n      }\n    } else {\n      newMap = map.remove(k);\n      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n    }\n  } else if (has) {\n    if (v === list.get(i)[1]) {\n      return omap;\n    }\n\n    newMap = map;\n    newList = list.set(i, [k, v]);\n  } else {\n    newMap = map.set(k, list.size);\n    newList = list.set(list.size, [k, v]);\n  }\n\n  if (omap.__ownerID) {\n    omap.size = newMap.size;\n    omap._map = newMap;\n    omap._list = newList;\n    omap.__hash = undefined;\n    return omap;\n  }\n\n  return makeOrderedMap(newMap, newList);\n}\n\nvar IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';\n\nfunction isStack(maybeStack) {\n  return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);\n}\n\nvar Stack = /*@__PURE__*/function (IndexedCollection$$1) {\n  function Stack(value) {\n    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().pushAll(value);\n  }\n\n  if (IndexedCollection$$1) Stack.__proto__ = IndexedCollection$$1;\n  Stack.prototype = Object.create(IndexedCollection$$1 && IndexedCollection$$1.prototype);\n  Stack.prototype.constructor = Stack;\n\n  Stack.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function toString() {\n    return this.__toString('Stack [', ']');\n  }; // @pragma Access\n\n\n  Stack.prototype.get = function get(index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n\n    while (head && index--) {\n      head = head.next;\n    }\n\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function peek() {\n    return this._head && this._head.value;\n  }; // @pragma Modification\n\n\n  Stack.prototype.push = function push()\n  /*...values*/\n  {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head\n      };\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function pushAll(iter) {\n    iter = IndexedCollection$$1(iter);\n\n    if (iter.size === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    },\n    /* reverse */\n    true);\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function pop() {\n    return this.slice(1);\n  };\n\n  Stack.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function slice(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection$$1.prototype.slice.call(this, begin, end);\n    }\n\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  }; // @pragma Mutability\n\n\n  Stack.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  }; // @pragma Iteration\n\n\n  Stack.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(function (v, k) {\n        return fn(v, k, this$1);\n      }, reverse);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n\n      node = node.next;\n    }\n\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function __iterator(type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n\n      return iteratorDone();\n    });\n  };\n\n  return Stack;\n}(IndexedCollection);\n\nStack.isStack = isStack;\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\n\nStackPrototype['@@transducer/step'] = function (result, arr) {\n  return result.unshift(arr);\n};\n\nStackPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_STACK;\n\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\n\nvar IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';\n\nfunction isSet(maybeSet) {\n  return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);\n}\n\nfunction isOrderedSet(maybeOrderedSet) {\n  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n}\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!isCollection(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n    return false;\n  }\n\n  if (a.size === 0 && b.size === 0) {\n    return true;\n  }\n\n  var notAssociative = !isAssociative(a);\n\n  if (isOrdered(a)) {\n    var entries = a.entries();\n    return b.every(function (v, k) {\n      var entry = entries.next().value;\n      return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n    }) && entries.next().done;\n  }\n\n  var flipped = false;\n\n  if (a.size === undefined) {\n    if (b.size === undefined) {\n      if (typeof a.cacheResult === 'function') {\n        a.cacheResult();\n      }\n    } else {\n      flipped = true;\n      var _ = a;\n      a = b;\n      b = _;\n    }\n  }\n\n  var allEqual = true;\n\n  var bSize = b.__iterate(function (v, k) {\n    if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n      allEqual = false;\n      return false;\n    }\n  });\n\n  return allEqual && a.size === bSize;\n}\n/**\n * Contributes additional methods to a constructor\n */\n\n\nfunction mixin(ctor, methods) {\n  var keyCopier = function (key) {\n    ctor.prototype[key] = methods[key];\n  };\n\n  Object.keys(methods).forEach(keyCopier);\n  Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n  return ctor;\n}\n\nfunction toJS(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  if (!isCollection(value)) {\n    if (!isDataStructure(value)) {\n      return value;\n    }\n\n    value = Seq(value);\n  }\n\n  if (isKeyed(value)) {\n    var result$1 = {};\n\n    value.__iterate(function (v, k) {\n      result$1[k] = toJS(v);\n    });\n\n    return result$1;\n  }\n\n  var result = [];\n\n  value.__iterate(function (v) {\n    result.push(toJS(v));\n  });\n\n  return result;\n}\n\nvar Set = /*@__PURE__*/function (SetCollection$$1) {\n  function Set(value) {\n    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {\n      var iter = SetCollection$$1(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  if (SetCollection$$1) Set.__proto__ = SetCollection$$1;\n  Set.prototype = Object.create(SetCollection$$1 && SetCollection$$1.prototype);\n  Set.prototype.constructor = Set;\n\n  Set.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function fromKeys(value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  Set.intersect = function intersect(sets) {\n    sets = Collection(sets).toArray();\n    return sets.length ? SetPrototype.intersect.apply(Set(sets.pop()), sets) : emptySet();\n  };\n\n  Set.union = function union(sets) {\n    sets = Collection(sets).toArray();\n    return sets.length ? SetPrototype.union.apply(Set(sets.pop()), sets) : emptySet();\n  };\n\n  Set.prototype.toString = function toString() {\n    return this.__toString('Set {', '}');\n  }; // @pragma Access\n\n\n  Set.prototype.has = function has(value) {\n    return this._map.has(value);\n  }; // @pragma Modification\n\n\n  Set.prototype.add = function add(value) {\n    return updateSet(this, this._map.set(value, value));\n  };\n\n  Set.prototype.remove = function remove(value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function clear() {\n    return updateSet(this, this._map.clear());\n  }; // @pragma Composition\n\n\n  Set.prototype.map = function map(mapper, context) {\n    var this$1 = this;\n    var removes = [];\n    var adds = [];\n    this.forEach(function (value) {\n      var mapped = mapper.call(context, value, value, this$1);\n\n      if (mapped !== value) {\n        removes.push(value);\n        adds.push(mapped);\n      }\n    });\n    return this.withMutations(function (set) {\n      removes.forEach(function (value) {\n        return set.remove(value);\n      });\n      adds.forEach(function (value) {\n        return set.add(value);\n      });\n    });\n  };\n\n  Set.prototype.union = function union() {\n    var iters = [],\n        len = arguments.length;\n\n    while (len--) iters[len] = arguments[len];\n\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetCollection$$1(iters[ii]).forEach(function (value) {\n          return set.add(value);\n        });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function intersect() {\n    var iters = [],\n        len = arguments.length;\n\n    while (len--) iters[len] = arguments[len];\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetCollection$$1(iter);\n    });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (!iters.every(function (iter) {\n        return iter.includes(value);\n      })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.subtract = function subtract() {\n    var iters = [],\n        len = arguments.length;\n\n    while (len--) iters[len] = arguments[len];\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetCollection$$1(iter);\n    });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (iters.some(function (iter) {\n        return iter.includes(value);\n      })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.sort = function sort(comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function sortBy(mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function wasAltered() {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._map.__iterate(function (k) {\n      return fn(k, k, this$1);\n    }, reverse);\n  };\n\n  Set.prototype.__iterator = function __iterator(type, reverse) {\n    return this._map.__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return this.__empty();\n      }\n\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n\n    return this.__make(newMap, ownerID);\n  };\n\n  return Set;\n}(SetCollection);\n\nSet.isSet = isSet;\nvar SetPrototype = Set.prototype;\nSetPrototype[IS_SET_SYMBOL] = true;\nSetPrototype[DELETE] = SetPrototype.remove;\nSetPrototype.merge = SetPrototype.concat = SetPrototype.union;\nSetPrototype.withMutations = withMutations;\nSetPrototype.asImmutable = asImmutable;\nSetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;\n\nSetPrototype['@@transducer/step'] = function (result, arr) {\n  return result.add(arr);\n};\n\nSetPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nSetPrototype.__empty = emptySet;\nSetPrototype.__make = makeSet;\n\nfunction updateSet(set, newMap) {\n  if (set.__ownerID) {\n    set.size = newMap.size;\n    set._map = newMap;\n    return set;\n  }\n\n  return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n}\n\nfunction makeSet(map, ownerID) {\n  var set = Object.create(SetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_SET;\n\nfunction emptySet() {\n  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n}\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\n\n\nvar Range = /*@__PURE__*/function (IndexedSeq$$1) {\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n\n    if (end === undefined) {\n      end = Infinity;\n    }\n\n    step = step === undefined ? 1 : Math.abs(step);\n\n    if (end < start) {\n      step = -step;\n    }\n\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n\n      EMPTY_RANGE = this;\n    }\n  }\n\n  if (IndexedSeq$$1) Range.__proto__ = IndexedSeq$$1;\n  Range.prototype = Object.create(IndexedSeq$$1 && IndexedSeq$$1.prototype);\n  Range.prototype.constructor = Range;\n\n  Range.prototype.toString = function toString() {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n\n    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';\n  };\n\n  Range.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n\n  Range.prototype.includes = function includes(searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n\n  Range.prototype.slice = function slice(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n\n  Range.prototype.indexOf = function indexOf(searchValue) {\n    var offsetValue = searchValue - this._start;\n\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function lastIndexOf(searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function __iterate(fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n\n      value += reverse ? -step : step;\n    }\n\n    return i;\n  };\n\n  Range.prototype.__iterator = function __iterator(type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n\n  Range.prototype.equals = function equals(other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n\n  return Range;\n}(IndexedSeq);\n\nvar EMPTY_RANGE;\n\nfunction getIn(collection, searchKeyPath, notSetValue) {\n  var keyPath = coerceKeyPath(searchKeyPath);\n  var i = 0;\n\n  while (i !== keyPath.length) {\n    collection = get(collection, keyPath[i++], NOT_SET);\n\n    if (collection === NOT_SET) {\n      return notSetValue;\n    }\n  }\n\n  return collection;\n}\n\nfunction getIn$1(searchKeyPath, notSetValue) {\n  return getIn(this, searchKeyPath, notSetValue);\n}\n\nfunction hasIn(collection, keyPath) {\n  return getIn(collection, keyPath, NOT_SET) !== NOT_SET;\n}\n\nfunction hasIn$1(searchKeyPath) {\n  return hasIn(this, searchKeyPath);\n}\n\nfunction toObject() {\n  assertNotInfinite(this.size);\n  var object = {};\n\n  this.__iterate(function (v, k) {\n    object[k] = v;\n  });\n\n  return object;\n} // Note: all of these methods are deprecated.\n\n\nCollection.isIterable = isCollection;\nCollection.isKeyed = isKeyed;\nCollection.isIndexed = isIndexed;\nCollection.isAssociative = isAssociative;\nCollection.isOrdered = isOrdered;\nCollection.Iterator = Iterator;\nmixin(Collection, {\n  // ### Conversion to other types\n  toArray: function toArray() {\n    assertNotInfinite(this.size);\n    var array = new Array(this.size || 0);\n    var useTuples = isKeyed(this);\n    var i = 0;\n\n    this.__iterate(function (v, k) {\n      // Keyed collections produce an array of tuples.\n      array[i++] = useTuples ? [k, v] : v;\n    });\n\n    return array;\n  },\n  toIndexedSeq: function toIndexedSeq() {\n    return new ToIndexedSequence(this);\n  },\n  toJS: function toJS$1() {\n    return toJS(this);\n  },\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, true);\n  },\n  toMap: function toMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return Map(this.toKeyedSeq());\n  },\n  toObject: toObject,\n  toOrderedMap: function toOrderedMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedMap(this.toKeyedSeq());\n  },\n  toOrderedSet: function toOrderedSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toSet: function toSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return Set(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toSetSeq: function toSetSeq() {\n    return new ToSetSequence(this);\n  },\n  toSeq: function toSeq() {\n    return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n  },\n  toStack: function toStack() {\n    // Use Late Binding here to solve the circular dependency.\n    return Stack(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toList: function toList() {\n    // Use Late Binding here to solve the circular dependency.\n    return List(isKeyed(this) ? this.valueSeq() : this);\n  },\n  // ### Common JavaScript methods and properties\n  toString: function toString() {\n    return '[Collection]';\n  },\n  __toString: function __toString(head, tail) {\n    if (this.size === 0) {\n      return head + tail;\n    }\n\n    return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n  },\n  // ### ES6 Collection methods (ES6 Array and Map)\n  concat: function concat() {\n    var values = [],\n        len = arguments.length;\n\n    while (len--) values[len] = arguments[len];\n\n    return reify(this, concatFactory(this, values));\n  },\n  includes: function includes(searchValue) {\n    return this.some(function (value) {\n      return is(value, searchValue);\n    });\n  },\n  entries: function entries() {\n    return this.__iterator(ITERATE_ENTRIES);\n  },\n  every: function every(predicate, context) {\n    assertNotInfinite(this.size);\n    var returnValue = true;\n\n    this.__iterate(function (v, k, c) {\n      if (!predicate.call(context, v, k, c)) {\n        returnValue = false;\n        return false;\n      }\n    });\n\n    return returnValue;\n  },\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, true));\n  },\n  find: function find(predicate, context, notSetValue) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[1] : notSetValue;\n  },\n  forEach: function forEach(sideEffect, context) {\n    assertNotInfinite(this.size);\n    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n  },\n  join: function join(separator) {\n    assertNotInfinite(this.size);\n    separator = separator !== undefined ? '' + separator : ',';\n    var joined = '';\n    var isFirst = true;\n\n    this.__iterate(function (v) {\n      isFirst ? isFirst = false : joined += separator;\n      joined += v !== null && v !== undefined ? v.toString() : '';\n    });\n\n    return joined;\n  },\n  keys: function keys() {\n    return this.__iterator(ITERATE_KEYS);\n  },\n  map: function map(mapper, context) {\n    return reify(this, mapFactory(this, mapper, context));\n  },\n  reduce: function reduce$1(reducer, initialReduction, context) {\n    return reduce(this, reducer, initialReduction, context, arguments.length < 2, false);\n  },\n  reduceRight: function reduceRight(reducer, initialReduction, context) {\n    return reduce(this, reducer, initialReduction, context, arguments.length < 2, true);\n  },\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, true));\n  },\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, true));\n  },\n  some: function some(predicate, context) {\n    return !this.every(not(predicate), context);\n  },\n  sort: function sort(comparator) {\n    return reify(this, sortFactory(this, comparator));\n  },\n  values: function values() {\n    return this.__iterator(ITERATE_VALUES);\n  },\n  // ### More sequential methods\n  butLast: function butLast() {\n    return this.slice(0, -1);\n  },\n  isEmpty: function isEmpty() {\n    return this.size !== undefined ? this.size === 0 : !this.some(function () {\n      return true;\n    });\n  },\n  count: function count(predicate, context) {\n    return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n  },\n  countBy: function countBy(grouper, context) {\n    return countByFactory(this, grouper, context);\n  },\n  equals: function equals(other) {\n    return deepEqual(this, other);\n  },\n  entrySeq: function entrySeq() {\n    var collection = this;\n\n    if (collection._cache) {\n      // We cache as an entries array, so we can just return the cache!\n      return new ArraySeq(collection._cache);\n    }\n\n    var entriesSequence = collection.toSeq().map(entryMapper).toIndexedSeq();\n\n    entriesSequence.fromEntrySeq = function () {\n      return collection.toSeq();\n    };\n\n    return entriesSequence;\n  },\n  filterNot: function filterNot(predicate, context) {\n    return this.filter(not(predicate), context);\n  },\n  findEntry: function findEntry(predicate, context, notSetValue) {\n    var found = notSetValue;\n\n    this.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        found = [k, v];\n        return false;\n      }\n    });\n\n    return found;\n  },\n  findKey: function findKey(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry && entry[0];\n  },\n  findLast: function findLast(predicate, context, notSetValue) {\n    return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n  },\n  findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n    return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n  },\n  findLastKey: function findLastKey(predicate, context) {\n    return this.toKeyedSeq().reverse().findKey(predicate, context);\n  },\n  first: function first(notSetValue) {\n    return this.find(returnTrue, null, notSetValue);\n  },\n  flatMap: function flatMap(mapper, context) {\n    return reify(this, flatMapFactory(this, mapper, context));\n  },\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, true));\n  },\n  fromEntrySeq: function fromEntrySeq() {\n    return new FromEntriesSequence(this);\n  },\n  get: function get(searchKey, notSetValue) {\n    return this.find(function (_, key) {\n      return is(key, searchKey);\n    }, undefined, notSetValue);\n  },\n  getIn: getIn$1,\n  groupBy: function groupBy(grouper, context) {\n    return groupByFactory(this, grouper, context);\n  },\n  has: function has(searchKey) {\n    return this.get(searchKey, NOT_SET) !== NOT_SET;\n  },\n  hasIn: hasIn$1,\n  isSubset: function isSubset(iter) {\n    iter = typeof iter.includes === 'function' ? iter : Collection(iter);\n    return this.every(function (value) {\n      return iter.includes(value);\n    });\n  },\n  isSuperset: function isSuperset(iter) {\n    iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);\n    return iter.isSubset(this);\n  },\n  keyOf: function keyOf(searchValue) {\n    return this.findKey(function (value) {\n      return is(value, searchValue);\n    });\n  },\n  keySeq: function keySeq() {\n    return this.toSeq().map(keyMapper).toIndexedSeq();\n  },\n  last: function last(notSetValue) {\n    return this.toSeq().reverse().first(notSetValue);\n  },\n  lastKeyOf: function lastKeyOf(searchValue) {\n    return this.toKeyedSeq().reverse().keyOf(searchValue);\n  },\n  max: function max(comparator) {\n    return maxFactory(this, comparator);\n  },\n  maxBy: function maxBy(mapper, comparator) {\n    return maxFactory(this, comparator, mapper);\n  },\n  min: function min(comparator) {\n    return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n  },\n  minBy: function minBy(mapper, comparator) {\n    return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n  },\n  rest: function rest() {\n    return this.slice(1);\n  },\n  skip: function skip(amount) {\n    return amount === 0 ? this : this.slice(Math.max(0, amount));\n  },\n  skipLast: function skipLast(amount) {\n    return amount === 0 ? this : this.slice(0, -Math.max(0, amount));\n  },\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, true));\n  },\n  skipUntil: function skipUntil(predicate, context) {\n    return this.skipWhile(not(predicate), context);\n  },\n  sortBy: function sortBy(mapper, comparator) {\n    return reify(this, sortFactory(this, comparator, mapper));\n  },\n  take: function take(amount) {\n    return this.slice(0, Math.max(0, amount));\n  },\n  takeLast: function takeLast(amount) {\n    return this.slice(-Math.max(0, amount));\n  },\n  takeWhile: function takeWhile(predicate, context) {\n    return reify(this, takeWhileFactory(this, predicate, context));\n  },\n  takeUntil: function takeUntil(predicate, context) {\n    return this.takeWhile(not(predicate), context);\n  },\n  update: function update(fn) {\n    return fn(this);\n  },\n  valueSeq: function valueSeq() {\n    return this.toIndexedSeq();\n  },\n  // ### Hashable Object\n  hashCode: function hashCode() {\n    return this.__hash || (this.__hash = hashCollection(this));\n  } // ### Internal\n  // abstract __iterate(fn, reverse)\n  // abstract __iterator(type, reverse)\n\n});\nvar CollectionPrototype = Collection.prototype;\nCollectionPrototype[IS_COLLECTION_SYMBOL] = true;\nCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;\nCollectionPrototype.toJSON = CollectionPrototype.toArray;\nCollectionPrototype.__toStringMapper = quoteString;\n\nCollectionPrototype.inspect = CollectionPrototype.toSource = function () {\n  return this.toString();\n};\n\nCollectionPrototype.chain = CollectionPrototype.flatMap;\nCollectionPrototype.contains = CollectionPrototype.includes;\nmixin(KeyedCollection, {\n  // ### More sequential methods\n  flip: function flip() {\n    return reify(this, flipFactory(this));\n  },\n  mapEntries: function mapEntries(mapper, context) {\n    var this$1 = this;\n    var iterations = 0;\n    return reify(this, this.toSeq().map(function (v, k) {\n      return mapper.call(context, [k, v], iterations++, this$1);\n    }).fromEntrySeq());\n  },\n  mapKeys: function mapKeys(mapper, context) {\n    var this$1 = this;\n    return reify(this, this.toSeq().flip().map(function (k, v) {\n      return mapper.call(context, k, v, this$1);\n    }).flip());\n  }\n});\nvar KeyedCollectionPrototype = KeyedCollection.prototype;\nKeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;\nKeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;\nKeyedCollectionPrototype.toJSON = toObject;\n\nKeyedCollectionPrototype.__toStringMapper = function (v, k) {\n  return quoteString(k) + ': ' + quoteString(v);\n};\n\nmixin(IndexedCollection, {\n  // ### Conversion to other types\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, false);\n  },\n  // ### ES6 Collection methods (ES6 Array and Map)\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, false));\n  },\n  findIndex: function findIndex(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n  indexOf: function indexOf(searchValue) {\n    var key = this.keyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n  lastIndexOf: function lastIndexOf(searchValue) {\n    var key = this.lastKeyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, false));\n  },\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, false));\n  },\n  splice: function splice(index, removeNum\n  /*, ...values*/\n  ) {\n    var numArgs = arguments.length;\n    removeNum = Math.max(removeNum || 0, 0);\n\n    if (numArgs === 0 || numArgs === 2 && !removeNum) {\n      return this;\n    } // If index is negative, it should resolve relative to the size of the\n    // collection. However size may be expensive to compute if not cached, so\n    // only call count() if the number is in fact negative.\n\n\n    index = resolveBegin(index, index < 0 ? this.count() : this.size);\n    var spliced = this.slice(0, index);\n    return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n  },\n  // ### More collection methods\n  findLastIndex: function findLastIndex(predicate, context) {\n    var entry = this.findLastEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n  first: function first(notSetValue) {\n    return this.get(0, notSetValue);\n  },\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, false));\n  },\n  get: function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n    return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {\n      return key === index;\n    }, undefined, notSetValue);\n  },\n  has: function has(index) {\n    index = wrapIndex(this, index);\n    return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n  },\n  interpose: function interpose(separator) {\n    return reify(this, interposeFactory(this, separator));\n  },\n  interleave: function interleave()\n  /*...collections*/\n  {\n    var collections = [this].concat(arrCopy(arguments));\n    var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);\n    var interleaved = zipped.flatten(true);\n\n    if (zipped.size) {\n      interleaved.size = zipped.size * collections.length;\n    }\n\n    return reify(this, interleaved);\n  },\n  keySeq: function keySeq() {\n    return Range(0, this.size);\n  },\n  last: function last(notSetValue) {\n    return this.get(-1, notSetValue);\n  },\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, false));\n  },\n  zip: function zip()\n  /*, ...collections */\n  {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections));\n  },\n  zipAll: function zipAll()\n  /*, ...collections */\n  {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections, true));\n  },\n  zipWith: function zipWith(zipper\n  /*, ...collections */\n  ) {\n    var collections = arrCopy(arguments);\n    collections[0] = this;\n    return reify(this, zipWithFactory(this, zipper, collections));\n  }\n});\nvar IndexedCollectionPrototype = IndexedCollection.prototype;\nIndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;\nIndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;\nmixin(SetCollection, {\n  // ### ES6 Collection methods (ES6 Array and Map)\n  get: function get(value, notSetValue) {\n    return this.has(value) ? value : notSetValue;\n  },\n  includes: function includes(value) {\n    return this.has(value);\n  },\n  // ### More sequential methods\n  keySeq: function keySeq() {\n    return this.valueSeq();\n  }\n});\nSetCollection.prototype.has = CollectionPrototype.includes;\nSetCollection.prototype.contains = SetCollection.prototype.includes; // Mixin subclasses\n\nmixin(KeyedSeq, KeyedCollection.prototype);\nmixin(IndexedSeq, IndexedCollection.prototype);\nmixin(SetSeq, SetCollection.prototype); // #pragma Helper functions\n\nfunction reduce(collection, reducer, reduction, context, useFirst, reverse) {\n  assertNotInfinite(collection.size);\n\n  collection.__iterate(function (v, k, c) {\n    if (useFirst) {\n      useFirst = false;\n      reduction = v;\n    } else {\n      reduction = reducer.call(context, reduction, v, k, c);\n    }\n  }, reverse);\n\n  return reduction;\n}\n\nfunction keyMapper(v, k) {\n  return k;\n}\n\nfunction entryMapper(v, k) {\n  return [k, v];\n}\n\nfunction not(predicate) {\n  return function () {\n    return !predicate.apply(this, arguments);\n  };\n}\n\nfunction neg(predicate) {\n  return function () {\n    return -predicate.apply(this, arguments);\n  };\n}\n\nfunction defaultZipper() {\n  return arrCopy(arguments);\n}\n\nfunction defaultNegComparator(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\nfunction hashCollection(collection) {\n  if (collection.size === Infinity) {\n    return 0;\n  }\n\n  var ordered = isOrdered(collection);\n  var keyed = isKeyed(collection);\n  var h = ordered ? 1 : 0;\n\n  var size = collection.__iterate(keyed ? ordered ? function (v, k) {\n    h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n  } : function (v, k) {\n    h = h + hashMerge(hash(v), hash(k)) | 0;\n  } : ordered ? function (v) {\n    h = 31 * h + hash(v) | 0;\n  } : function (v) {\n    h = h + hash(v) | 0;\n  });\n\n  return murmurHashOfSize(size, h);\n}\n\nfunction murmurHashOfSize(size, h) {\n  h = imul(h, 0xcc9e2d51);\n  h = imul(h << 15 | h >>> -15, 0x1b873593);\n  h = imul(h << 13 | h >>> -13, 5);\n  h = (h + 0xe6546b64 | 0) ^ size;\n  h = imul(h ^ h >>> 16, 0x85ebca6b);\n  h = imul(h ^ h >>> 13, 0xc2b2ae35);\n  h = smi(h ^ h >>> 16);\n  return h;\n}\n\nfunction hashMerge(a, b) {\n  return a ^ b + 0x9e3779b9 + (a << 6) + (a >> 2) | 0; // int\n}\n\nvar OrderedSet = /*@__PURE__*/function (Set$$1) {\n  function OrderedSet(value) {\n    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {\n      var iter = SetCollection(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  if (Set$$1) OrderedSet.__proto__ = Set$$1;\n  OrderedSet.prototype = Object.create(Set$$1 && Set$$1.prototype);\n  OrderedSet.prototype.constructor = OrderedSet;\n\n  OrderedSet.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function fromKeys(value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function toString() {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  return OrderedSet;\n}(Set);\n\nOrderedSet.isOrderedSet = isOrderedSet;\nvar OrderedSetPrototype = OrderedSet.prototype;\nOrderedSetPrototype[IS_ORDERED_SYMBOL] = true;\nOrderedSetPrototype.zip = IndexedCollectionPrototype.zip;\nOrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;\nOrderedSetPrototype.__empty = emptyOrderedSet;\nOrderedSetPrototype.__make = makeOrderedSet;\n\nfunction makeOrderedSet(map, ownerID) {\n  var set = Object.create(OrderedSetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_ORDERED_SET;\n\nfunction emptyOrderedSet() {\n  return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n}\n\nvar Record = function Record(defaultValues, name) {\n  var hasInitialized;\n\n  var RecordType = function Record(values) {\n    var this$1 = this;\n\n    if (values instanceof RecordType) {\n      return values;\n    }\n\n    if (!(this instanceof RecordType)) {\n      return new RecordType(values);\n    }\n\n    if (!hasInitialized) {\n      hasInitialized = true;\n      var keys = Object.keys(defaultValues);\n      var indices = RecordTypePrototype._indices = {}; // Deprecated: left to attempt not to break any external code which\n      // relies on a ._name property existing on record instances.\n      // Use Record.getDescriptiveName() instead\n\n      RecordTypePrototype._name = name;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype._defaultValues = defaultValues;\n\n      for (var i = 0; i < keys.length; i++) {\n        var propName = keys[i];\n        indices[propName] = i;\n\n        if (RecordTypePrototype[propName]) {\n          /* eslint-disable no-console */\n          typeof console === 'object' && console.warn && console.warn('Cannot define ' + recordName(this) + ' with property \"' + propName + '\" since that property name is part of the Record API.');\n          /* eslint-enable no-console */\n        } else {\n          setProp(RecordTypePrototype, propName);\n        }\n      }\n    }\n\n    this.__ownerID = undefined;\n    this._values = List().withMutations(function (l) {\n      l.setSize(this$1._keys.length);\n      KeyedCollection(values).forEach(function (v, k) {\n        l.set(this$1._indices[k], v === this$1._defaultValues[k] ? undefined : v);\n      });\n    });\n  };\n\n  var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n  RecordTypePrototype.constructor = RecordType;\n\n  if (name) {\n    RecordType.displayName = name;\n  }\n\n  return RecordType;\n};\n\nRecord.prototype.toString = function toString() {\n  var str = recordName(this) + ' { ';\n  var keys = this._keys;\n  var k;\n\n  for (var i = 0, l = keys.length; i !== l; i++) {\n    k = keys[i];\n    str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));\n  }\n\n  return str + ' }';\n};\n\nRecord.prototype.equals = function equals(other) {\n  return this === other || other && this._keys === other._keys && recordSeq(this).equals(recordSeq(other));\n};\n\nRecord.prototype.hashCode = function hashCode() {\n  return recordSeq(this).hashCode();\n}; // @pragma Access\n\n\nRecord.prototype.has = function has(k) {\n  return this._indices.hasOwnProperty(k);\n};\n\nRecord.prototype.get = function get(k, notSetValue) {\n  if (!this.has(k)) {\n    return notSetValue;\n  }\n\n  var index = this._indices[k];\n\n  var value = this._values.get(index);\n\n  return value === undefined ? this._defaultValues[k] : value;\n}; // @pragma Modification\n\n\nRecord.prototype.set = function set(k, v) {\n  if (this.has(k)) {\n    var newValues = this._values.set(this._indices[k], v === this._defaultValues[k] ? undefined : v);\n\n    if (newValues !== this._values && !this.__ownerID) {\n      return makeRecord(this, newValues);\n    }\n  }\n\n  return this;\n};\n\nRecord.prototype.remove = function remove(k) {\n  return this.set(k);\n};\n\nRecord.prototype.clear = function clear() {\n  var newValues = this._values.clear().setSize(this._keys.length);\n\n  return this.__ownerID ? this : makeRecord(this, newValues);\n};\n\nRecord.prototype.wasAltered = function wasAltered() {\n  return this._values.wasAltered();\n};\n\nRecord.prototype.toSeq = function toSeq() {\n  return recordSeq(this);\n};\n\nRecord.prototype.toJS = function toJS$1() {\n  return toJS(this);\n};\n\nRecord.prototype.entries = function entries() {\n  return this.__iterator(ITERATE_ENTRIES);\n};\n\nRecord.prototype.__iterator = function __iterator(type, reverse) {\n  return recordSeq(this).__iterator(type, reverse);\n};\n\nRecord.prototype.__iterate = function __iterate(fn, reverse) {\n  return recordSeq(this).__iterate(fn, reverse);\n};\n\nRecord.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n  if (ownerID === this.__ownerID) {\n    return this;\n  }\n\n  var newValues = this._values.__ensureOwner(ownerID);\n\n  if (!ownerID) {\n    this.__ownerID = ownerID;\n    this._values = newValues;\n    return this;\n  }\n\n  return makeRecord(this, newValues, ownerID);\n};\n\nRecord.isRecord = isRecord;\nRecord.getDescriptiveName = recordName;\nvar RecordPrototype = Record.prototype;\nRecordPrototype[IS_RECORD_SYMBOL] = true;\nRecordPrototype[DELETE] = RecordPrototype.remove;\nRecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;\nRecordPrototype.getIn = getIn$1;\nRecordPrototype.hasIn = CollectionPrototype.hasIn;\nRecordPrototype.merge = merge;\nRecordPrototype.mergeWith = mergeWith;\nRecordPrototype.mergeIn = mergeIn;\nRecordPrototype.mergeDeep = mergeDeep$1;\nRecordPrototype.mergeDeepWith = mergeDeepWith$1;\nRecordPrototype.mergeDeepIn = mergeDeepIn;\nRecordPrototype.setIn = setIn$1;\nRecordPrototype.update = update$1;\nRecordPrototype.updateIn = updateIn$1;\nRecordPrototype.withMutations = withMutations;\nRecordPrototype.asMutable = asMutable;\nRecordPrototype.asImmutable = asImmutable;\nRecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;\nRecordPrototype.toJSON = RecordPrototype.toObject = CollectionPrototype.toObject;\n\nRecordPrototype.inspect = RecordPrototype.toSource = function () {\n  return this.toString();\n};\n\nfunction makeRecord(likeRecord, values, ownerID) {\n  var record = Object.create(Object.getPrototypeOf(likeRecord));\n  record._values = values;\n  record.__ownerID = ownerID;\n  return record;\n}\n\nfunction recordName(record) {\n  return record.constructor.displayName || record.constructor.name || 'Record';\n}\n\nfunction recordSeq(record) {\n  return keyedSeqFromValue(record._keys.map(function (k) {\n    return [k, record.get(k)];\n  }));\n}\n\nfunction setProp(prototype, name) {\n  try {\n    Object.defineProperty(prototype, name, {\n      get: function () {\n        return this.get(name);\n      },\n      set: function (value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  } catch (error) {// Object.defineProperty failed. Probably IE8.\n  }\n}\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\n\n\nvar Repeat = /*@__PURE__*/function (IndexedSeq$$1) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  if (IndexedSeq$$1) Repeat.__proto__ = IndexedSeq$$1;\n  Repeat.prototype = Object.create(IndexedSeq$$1 && IndexedSeq$$1.prototype);\n  Repeat.prototype.constructor = Repeat;\n\n  Repeat.prototype.toString = function toString() {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function includes(searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function slice(begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n\n  Repeat.prototype.reverse = function reverse() {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function indexOf(searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function lastIndexOf(searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function __iterate(fn, reverse) {\n    var size = this.size;\n    var i = 0;\n\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n\n    return i;\n  };\n\n  Repeat.prototype.__iterator = function __iterator(type, reverse) {\n    var this$1 = this;\n    var size = this.size;\n    var i = 0;\n    return new Iterator(function () {\n      return i === size ? iteratorDone() : iteratorValue(type, reverse ? size - ++i : i++, this$1._value);\n    });\n  };\n\n  Repeat.prototype.equals = function equals(other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n\n  return Repeat;\n}(IndexedSeq);\n\nvar EMPTY_REPEAT;\n\nfunction fromJS(value, converter) {\n  return fromJSWith([], converter || defaultConverter, value, '', converter && converter.length > 2 ? [] : undefined, {\n    '': value\n  });\n}\n\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  var toSeq = Array.isArray(value) ? IndexedSeq : isPlainObj(value) ? KeyedSeq : null;\n\n  if (toSeq) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(parentValue, key, toSeq(value).map(function (v, k) {\n      return fromJSWith(stack, converter, v, k, keyPath, value);\n    }), keyPath && keyPath.slice());\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n\n  return value;\n}\n\nfunction defaultConverter(k, v) {\n  return isKeyed(v) ? v.toMap() : v.toList();\n}\n\nvar version = \"4.0.0-rc.11\";\nvar Immutable = {\n  version: version,\n  Collection: Collection,\n  // Note: Iterable is deprecated\n  Iterable: Collection,\n  Seq: Seq,\n  Map: Map,\n  OrderedMap: OrderedMap,\n  List: List,\n  Stack: Stack,\n  Set: Set,\n  OrderedSet: OrderedSet,\n  Record: Record,\n  Range: Range,\n  Repeat: Repeat,\n  is: is,\n  fromJS: fromJS,\n  hash: hash,\n  isImmutable: isImmutable,\n  isCollection: isCollection,\n  isKeyed: isKeyed,\n  isIndexed: isIndexed,\n  isAssociative: isAssociative,\n  isOrdered: isOrdered,\n  isValueObject: isValueObject,\n  isSeq: isSeq,\n  isList: isList,\n  isMap: isMap,\n  isOrderedMap: isOrderedMap,\n  isStack: isStack,\n  isSet: isSet,\n  isOrderedSet: isOrderedSet,\n  isRecord: isRecord,\n  get: get,\n  getIn: getIn,\n  has: has,\n  hasIn: hasIn,\n  merge: merge$1,\n  mergeDeep: mergeDeep,\n  mergeWith: mergeWith$1,\n  mergeDeepWith: mergeDeepWith,\n  remove: remove,\n  removeIn: removeIn,\n  set: set,\n  setIn: setIn,\n  update: update,\n  updateIn: updateIn\n}; // Note: Iterable is deprecated\n\nvar Iterable = Collection;\nexport default Immutable;\nexport { version, Collection, Iterable, Seq, Map, OrderedMap, List, Stack, Set, OrderedSet, Record, Range, Repeat, is, fromJS, hash, isImmutable, isCollection, isKeyed, isIndexed, isAssociative, isOrdered, isValueObject, get, getIn, has, hasIn, merge$1 as merge, mergeDeep, mergeWith$1 as mergeWith, mergeDeepWith, remove, removeIn, set, setIn, update, updateIn };","map":{"version":3,"sources":["D:/IDEA workspace/ZUA/community-manage-react/node_modules/immutable/dist/immutable.es.js"],"names":["DELETE","SHIFT","SIZE","MASK","NOT_SET","MakeRef","value","SetRef","ref","OwnerID","ensureSize","iter","size","undefined","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","isNeg","resolveBegin","resolveIndex","resolveEnd","defaultIndex","Infinity","Math","max","min","IS_COLLECTION_SYMBOL","isCollection","maybeCollection","Boolean","IS_KEYED_SYMBOL","isKeyed","maybeKeyed","IS_INDEXED_SYMBOL","isIndexed","maybeIndexed","isAssociative","maybeAssociative","Collection","Seq","KeyedCollection","KeyedSeq","__proto__","prototype","Object","create","constructor","IndexedCollection","IndexedSeq","SetCollection","SetSeq","Keyed","Indexed","Set","IS_SEQ_SYMBOL","isSeq","maybeSeq","IS_RECORD_SYMBOL","isRecord","maybeRecord","isImmutable","maybeImmutable","IS_ORDERED_SYMBOL","isOrdered","maybeOrdered","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","toString","KEYS","VALUES","ENTRIES","inspect","toSource","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","maybeIterable","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","hasOwnProperty","isArrayLike","Array","isArray","Number","isInteger","length","keys","Collection$$1","emptySequence","toSeq","seqFromValue","__toString","cacheResult","_cache","__iterateUncached","entrySeq","toArray","fn","reverse","cache","i","entry","__iterator","__iteratorUncached","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","toIndexedSeq","indexedSeqFromValue","of","arguments","toSetSeq","ArraySeq","array","_array","get","notSetValue","has","ii","ObjectSeq","object","_object","_keys","key","CollectionSeq","collection","_collection","iterations","step","EMPTY_SEQ","seq","TypeError","maybeIndexedSeqFromValue","IS_MAP_SYMBOL","isMap","maybeMap","isOrderedMap","maybeOrderedMap","isValueObject","maybeValue","equals","hashCode","is","valueA","valueB","valueOf","imul","a","b","c","d","smi","i32","defaultValueOf","hash","o","hashNumber","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashJSObj","Error","n","string","hashed","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","defineProperty","enumerable","configurable","writable","apply","nodeType","e","node","uniqueID","documentElement","WeakMap","ToKeyedSequence","KeyedSeq$$1","indexed","useKeys","_iter","_useKeys","valueSeq","this$1","reversedSequence","reverseFactory","map","mapper","context","mappedSequence","mapFactory","ToIndexedSequence","IndexedSeq$$1","includes","ToSetSequence","SetSeq$$1","FromEntriesSequence","entries","validateEntry","indexedCollection","cacheResultThrough","flipFactory","flipSequence","makeSequence","flip","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","Map","asMutable","update","asImmutable","groupByFactory","isKeyedIter","OrderedMap","push","coerce","collectionClass","arr","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","resolvedSize","sliceSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","values","isKeyedCollection","iters","concat","filter","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","stack","pop","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","forEach","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipAll","zipSequence","sizes","iterators","isDone","steps","every","s","some","arrCopy","offset","len","newArr","invariant","condition","error","assertNotInfinite","coerceKeyPath","keyPath","isPlainObj","name","isDataStructure","quoteString","JSON","stringify","String","_ignoreError","shallowCopy","from","to","remove","collectionCopy","splice","updateIn","updater","updatedValue","updateInDeeply","inImmutable","existing","wasNotSet","existingValue","newValue","slice","nextExisting","nextUpdated","emptyMap","setIn","setIn$1","removeIn","deleteIn","update$1","updateIn$1","merge","mergeIntoKeyedWith","mergeWith","merger","collections","collection$1","__ownerID","withMutations","mergeIntoCollection","oldVal","merge$1","sources","mergeWithSources","mergeWith$1","mergeDeep","mergeDeepWithSources","mergeDeepWith","deepMergerWith","merged","mergeItem","hasVal","nextVal","deepMerger","oldValue","mergeDeep$1","mergeDeepWith$1","mergeIn","m","mergeDeepIn","mutable","wasAltered","__ensureOwner","__altered","KeyedCollection$$1","keyValues","_root","updateMap","deleteAll","clear","__hash","sortBy","MapIterator","iterate","ownerID","makeMap","MapPrototype","removeAll","result","ArrayMapNode","shift","keyHash","didChangeSize","didAlter","removed","idx","exists","MAX_ARRAY_MAP_SIZE","createNodes","isEditable","newEntries","BitmapIndexedNode","bitmap","nodes","bit","popCount","keyHashFrag","newNode","updateNode","MAX_BITMAP_INDEXED_SIZE","expandNodes","isLeafNode","newBitmap","newNodes","setAt","spliceOut","spliceIn","HashArrayMapNode","count","newCount","MIN_HASH_ARRAY_MAP_SIZE","packNodes","HashCollisionNode","mergeIntoNode","ValueNode","keyMatch","maxIndex","Iterator$$1","_type","_reverse","_stack","mapIteratorFrame","mapIteratorValue","subNode","__prev","prev","root","hash$$1","EMPTY_MAP","newRoot","newSize","idx1","idx2","excluding","packedII","packedNodes","including","expandedNodes","x","val","canEdit","newArray","newLen","after","IS_LIST_SYMBOL","isList","maybeList","List","IndexedCollection$$1","empty","emptyList","makeList","VNode","list","setSize","_origin","listNodeFor","updateList","insert","_capacity","_level","_tail","oldSize","setListBounds","unshift","arguments$1","seqs","argument","iterateList","DONE","ListPrototype","removeBefore","level","originIndex","removingFirst","newChild","oldChild","editable","editableVNode","removeAfter","sizeIndex","left","right","tailPos","getTailOffset","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","origin","capacity","EMPTY_LIST","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","Map$$1","emptyOrderedMap","_map","_list","updateOrderedMap","newMap","newList","makeOrderedMap","omap","EMPTY_ORDERED_MAP","toMap","IS_STACK_SYMBOL","isStack","maybeStack","Stack","emptyStack","pushAll","head","_head","peek","makeStack","StackPrototype","unshiftAll","EMPTY_STACK","IS_SET_SYMBOL","isSet","maybeSet","isOrderedSet","maybeOrderedSet","deepEqual","notAssociative","flipped","_","allEqual","bSize","mixin","ctor","methods","keyCopier","getOwnPropertySymbols","toJS","result$1","SetCollection$$1","emptySet","add","fromKeys","keySeq","intersect","sets","SetPrototype","union","updateSet","removes","adds","mapped","toRemove","subtract","OrderedSet","__empty","__make","makeSet","EMPTY_SET","Range","start","abs","_start","_end","_step","ceil","EMPTY_RANGE","searchValue","possibleIndex","floor","indexOf","offsetValue","lastIndexOf","other","getIn","searchKeyPath","getIn$1","hasIn","hasIn$1","toObject","isIterable","useTuples","toJS$1","toOrderedMap","toOrderedSet","toSet","toStack","toList","__toStringMapper","join","returnValue","find","findEntry","sideEffect","bind","joined","isFirst","reduce$1","reducer","initialReduction","reduceRight","not","butLast","isEmpty","countBy","entriesSequence","entryMapper","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","groupBy","isSubset","isSuperset","keyOf","keyMapper","last","lastKeyOf","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","hashCollection","CollectionPrototype","toJSON","chain","contains","mapEntries","mapKeys","KeyedCollectionPrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","defaultZipper","zipWith","IndexedCollectionPrototype","reduction","useFirst","ordered","keyed","h","hashMerge","murmurHashOfSize","Set$$1","emptyOrderedSet","OrderedSetPrototype","makeOrderedSet","EMPTY_ORDERED_SET","Record","defaultValues","hasInitialized","RecordType","indices","RecordTypePrototype","_indices","_name","_defaultValues","propName","console","warn","recordName","setProp","_values","l","RecordPrototype","displayName","str","recordSeq","newValues","makeRecord","getDescriptiveName","likeRecord","record","getPrototypeOf","Repeat","times","_value","EMPTY_REPEAT","fromJS","converter","fromJSWith","defaultConverter","parentValue","converted","version","Immutable","Iterable"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Used for setting prototype methods that IE8 chokes on.\nvar DELETE = 'delete';\n\n// Constants describing the size of trie nodes.\nvar SHIFT = 5; // Resulted in best performance after ______?\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1;\n\n// A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\nvar NOT_SET = {};\n\n// Boolean references, Rough equivalent of `bool &`.\nfunction MakeRef() {\n  return { value: false };\n}\n\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n}\n\n// A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\nfunction OwnerID() {}\n\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n  return iter.size;\n}\n\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32âˆ’1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n    index = uint32Index;\n  }\n  return index < 0 ? ensureSize(iter) + index : index;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction wholeSlice(begin, end, size) {\n  return (\n    ((begin === 0 && !isNeg(begin)) ||\n      (size !== undefined && begin <= -size)) &&\n    (end === undefined || (size !== undefined && end >= size))\n  );\n}\n\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\n\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\n\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined\n    ? defaultIndex\n    : isNeg(index)\n      ? size === Infinity\n        ? size\n        : Math.max(0, size + index) | 0\n      : size === undefined || size === index\n        ? index\n        : Math.min(size, index) | 0;\n}\n\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || (value === 0 && 1 / value === -Infinity);\n}\n\n// Note: value is unchanged to not break immutable-devtools.\nvar IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';\n\nfunction isCollection(maybeCollection) {\n  return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);\n}\n\nvar IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';\n\nfunction isKeyed(maybeKeyed) {\n  return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);\n}\n\nvar IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';\n\nfunction isIndexed(maybeIndexed) {\n  return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);\n}\n\nfunction isAssociative(maybeAssociative) {\n  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n}\n\nvar Collection = function Collection(value) {\n  return isCollection(value) ? value : Seq(value);\n};\n\nvar KeyedCollection = /*@__PURE__*/(function (Collection) {\n  function KeyedCollection(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  if ( Collection ) KeyedCollection.__proto__ = Collection;\n  KeyedCollection.prototype = Object.create( Collection && Collection.prototype );\n  KeyedCollection.prototype.constructor = KeyedCollection;\n\n  return KeyedCollection;\n}(Collection));\n\nvar IndexedCollection = /*@__PURE__*/(function (Collection) {\n  function IndexedCollection(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  if ( Collection ) IndexedCollection.__proto__ = Collection;\n  IndexedCollection.prototype = Object.create( Collection && Collection.prototype );\n  IndexedCollection.prototype.constructor = IndexedCollection;\n\n  return IndexedCollection;\n}(Collection));\n\nvar SetCollection = /*@__PURE__*/(function (Collection) {\n  function SetCollection(value) {\n    return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  if ( Collection ) SetCollection.__proto__ = Collection;\n  SetCollection.prototype = Object.create( Collection && Collection.prototype );\n  SetCollection.prototype.constructor = SetCollection;\n\n  return SetCollection;\n}(Collection));\n\nCollection.Keyed = KeyedCollection;\nCollection.Indexed = IndexedCollection;\nCollection.Set = SetCollection;\n\nvar IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';\n\nfunction isSeq(maybeSeq) {\n  return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);\n}\n\nvar IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';\n\nfunction isRecord(maybeRecord) {\n  return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);\n}\n\nfunction isImmutable(maybeImmutable) {\n  return isCollection(maybeImmutable) || isRecord(maybeImmutable);\n}\n\nvar IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';\n\nfunction isOrdered(maybeOrdered) {\n  return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);\n}\n\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\n\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n\nIterator.prototype.toString = function toString () {\n  return '[Iterator]';\n};\n\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\n\nIterator.prototype.inspect = Iterator.prototype.toSource = function() {\n  return this.toString();\n};\nIterator.prototype[ITERATOR_SYMBOL] = function() {\n  return this;\n};\n\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult\n    ? (iteratorResult.value = value)\n    : (iteratorResult = {\n        value: value,\n        done: false,\n      });\n  return iteratorResult;\n}\n\nfunction iteratorDone() {\n  return { value: undefined, done: true };\n}\n\nfunction hasIterator(maybeIterable) {\n  return !!getIteratorFn(maybeIterable);\n}\n\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\n\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\n\nfunction getIteratorFn(iterable) {\n  var iteratorFn =\n    iterable &&\n    ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isArrayLike(value) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return true;\n  }\n\n  return (\n    value &&\n    typeof value === 'object' &&\n    Number.isInteger(value.length) &&\n    value.length >= 0 &&\n    (value.length === 0\n      ? // Only {length: 0} is considered Array-like.\n        Object.keys(value).length === 1\n      : // An object is only Array-like if it has a property where the last value\n        // in the array-like may be found (which could be undefined).\n        value.hasOwnProperty(value.length - 1))\n  );\n}\n\nvar Seq = /*@__PURE__*/(function (Collection$$1) {\n  function Seq(value) {\n    return value === null || value === undefined\n      ? emptySequence()\n      : isImmutable(value)\n        ? value.toSeq()\n        : seqFromValue(value);\n  }\n\n  if ( Collection$$1 ) Seq.__proto__ = Collection$$1;\n  Seq.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  Seq.prototype.constructor = Seq;\n\n  Seq.prototype.toSeq = function toSeq () {\n    return this;\n  };\n\n  Seq.prototype.toString = function toString () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function cacheResult () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  };\n\n  // abstract __iterateUncached(fn, reverse)\n\n  Seq.prototype.__iterate = function __iterate (fn, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      while (i !== size) {\n        var entry = cache[reverse ? size - ++i : i++];\n        if (fn(entry[1], entry[0], this) === false) {\n          break;\n        }\n      }\n      return i;\n    }\n    return this.__iterateUncached(fn, reverse);\n  };\n\n  // abstract __iteratorUncached(type, reverse)\n\n  Seq.prototype.__iterator = function __iterator (type, reverse) {\n    var cache = this._cache;\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      return new Iterator(function () {\n        if (i === size) {\n          return iteratorDone();\n        }\n        var entry = cache[reverse ? size - ++i : i++];\n        return iteratorValue(type, entry[0], entry[1]);\n      });\n    }\n    return this.__iteratorUncached(type, reverse);\n  };\n\n  return Seq;\n}(Collection));\n\nvar KeyedSeq = /*@__PURE__*/(function (Seq) {\n  function KeyedSeq(value) {\n    return value === null || value === undefined\n      ? emptySequence().toKeyedSeq()\n      : isCollection(value)\n        ? isKeyed(value)\n          ? value.toSeq()\n          : value.fromEntrySeq()\n        : isRecord(value)\n          ? value.toSeq()\n          : keyedSeqFromValue(value);\n  }\n\n  if ( Seq ) KeyedSeq.__proto__ = Seq;\n  KeyedSeq.prototype = Object.create( Seq && Seq.prototype );\n  KeyedSeq.prototype.constructor = KeyedSeq;\n\n  KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq () {\n    return this;\n  };\n\n  return KeyedSeq;\n}(Seq));\n\nvar IndexedSeq = /*@__PURE__*/(function (Seq) {\n  function IndexedSeq(value) {\n    return value === null || value === undefined\n      ? emptySequence()\n      : isCollection(value)\n        ? isKeyed(value)\n          ? value.entrySeq()\n          : value.toIndexedSeq()\n        : isRecord(value)\n          ? value.toSeq().entrySeq()\n          : indexedSeqFromValue(value);\n  }\n\n  if ( Seq ) IndexedSeq.__proto__ = Seq;\n  IndexedSeq.prototype = Object.create( Seq && Seq.prototype );\n  IndexedSeq.prototype.constructor = IndexedSeq;\n\n  IndexedSeq.of = function of (/*...values*/) {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function toString () {\n    return this.__toString('Seq [', ']');\n  };\n\n  return IndexedSeq;\n}(Seq));\n\nvar SetSeq = /*@__PURE__*/(function (Seq) {\n  function SetSeq(value) {\n    return (isCollection(value) && !isAssociative(value)\n      ? value\n      : IndexedSeq(value)\n    ).toSetSeq();\n  }\n\n  if ( Seq ) SetSeq.__proto__ = Seq;\n  SetSeq.prototype = Object.create( Seq && Seq.prototype );\n  SetSeq.prototype.constructor = SetSeq;\n\n  SetSeq.of = function of (/*...values*/) {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function toSetSeq () {\n    return this;\n  };\n\n  return SetSeq;\n}(Seq));\n\nSeq.isSeq = isSeq;\nSeq.Keyed = KeyedSeq;\nSeq.Set = SetSeq;\nSeq.Indexed = IndexedSeq;\n\nSeq.prototype[IS_SEQ_SYMBOL] = true;\n\n// #pragma Root Sequences\n\nvar ArraySeq = /*@__PURE__*/(function (IndexedSeq) {\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  if ( IndexedSeq ) ArraySeq.__proto__ = IndexedSeq;\n  ArraySeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  ArraySeq.prototype.constructor = ArraySeq;\n\n  ArraySeq.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    while (i !== size) {\n      var ii = reverse ? size - ++i : i++;\n      if (fn(array[ii], ii, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ArraySeq.prototype.__iterator = function __iterator (type, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var ii = reverse ? size - ++i : i++;\n      return iteratorValue(type, ii, array[ii]);\n    });\n  };\n\n  return ArraySeq;\n}(IndexedSeq));\n\nvar ObjectSeq = /*@__PURE__*/(function (KeyedSeq) {\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  if ( KeyedSeq ) ObjectSeq.__proto__ = KeyedSeq;\n  ObjectSeq.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  ObjectSeq.prototype.constructor = ObjectSeq;\n\n  ObjectSeq.prototype.get = function get (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function has (key) {\n    return hasOwnProperty.call(this._object, key);\n  };\n\n  ObjectSeq.prototype.__iterate = function __iterate (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    while (i !== size) {\n      var key = keys[reverse ? size - ++i : i++];\n      if (fn(object[key], key, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  ObjectSeq.prototype.__iterator = function __iterator (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var key = keys[reverse ? size - ++i : i++];\n      return iteratorValue(type, key, object[key]);\n    });\n  };\n\n  return ObjectSeq;\n}(KeyedSeq));\nObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar CollectionSeq = /*@__PURE__*/(function (IndexedSeq) {\n  function CollectionSeq(collection) {\n    this._collection = collection;\n    this.size = collection.length || collection.size;\n  }\n\n  if ( IndexedSeq ) CollectionSeq.__proto__ = IndexedSeq;\n  CollectionSeq.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  CollectionSeq.prototype.constructor = CollectionSeq;\n\n  CollectionSeq.prototype.__iterateUncached = function __iterateUncached (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  };\n\n  CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  return CollectionSeq;\n}(IndexedSeq));\n\n// # pragma Helper functions\n\nvar EMPTY_SEQ;\n\nfunction emptySequence() {\n  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n}\n\nfunction keyedSeqFromValue(value) {\n  var seq = Array.isArray(value)\n    ? new ArraySeq(value)\n    : hasIterator(value)\n      ? new CollectionSeq(value)\n      : undefined;\n  if (seq) {\n    return seq.fromEntrySeq();\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of [k, v] entries, or keyed object: ' +\n      value\n  );\n}\n\nfunction indexedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq;\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values: ' + value\n  );\n}\n\nfunction seqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n  if (seq) {\n    return seq;\n  }\n  if (typeof value === 'object') {\n    return new ObjectSeq(value);\n  }\n  throw new TypeError(\n    'Expected Array or collection object of values, or keyed object: ' + value\n  );\n}\n\nfunction maybeIndexedSeqFromValue(value) {\n  return isArrayLike(value)\n    ? new ArraySeq(value)\n    : hasIterator(value)\n      ? new CollectionSeq(value)\n      : undefined;\n}\n\nvar IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';\n\nfunction isMap(maybeMap) {\n  return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);\n}\n\nfunction isOrderedMap(maybeOrderedMap) {\n  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n}\n\nfunction isValueObject(maybeValue) {\n  return Boolean(\n    maybeValue &&\n      typeof maybeValue.equals === 'function' &&\n      typeof maybeValue.hashCode === 'function'\n  );\n}\n\n/**\n * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n *\n * NaN is considered the same as NaN, however -0 and 0 are considered the same\n * value, which is different from the algorithm described by\n * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n *\n * This is extended further to allow Objects to describe the values they\n * represent, by way of `valueOf` or `equals` (and `hashCode`).\n *\n * Note: because of this extension, the key equality of Immutable.Map and the\n * value equality of Immutable.Set will differ from ES6 Map and Set.\n *\n * ### Defining custom values\n *\n * The easiest way to describe the value an object represents is by implementing\n * `valueOf`. For example, `Date` represents a value by returning a unix\n * timestamp for `valueOf`:\n *\n *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n *     var date2 = new Date(1234567890000);\n *     date1.valueOf(); // 1234567890000\n *     assert( date1 !== date2 );\n *     assert( Immutable.is( date1, date2 ) );\n *\n * Note: overriding `valueOf` may have other implications if you use this object\n * where JavaScript expects a primitive, such as implicit string coercion.\n *\n * For more complex types, especially collections, implementing `valueOf` may\n * not be performant. An alternative is to implement `equals` and `hashCode`.\n *\n * `equals` takes another object, presumably of similar type, and returns true\n * if it is equal. Equality is symmetrical, so the same result should be\n * returned if this and the argument are flipped.\n *\n *     assert( a.equals(b) === b.equals(a) );\n *\n * `hashCode` returns a 32bit integer number representing the object which will\n * be used to determine how to store the value object in a Map or Set. You must\n * provide both or neither methods, one must not exist without the other.\n *\n * Also, an important relationship between these methods must be upheld: if two\n * values are equal, they *must* return the same hashCode. If the values are not\n * equal, they might have the same hashCode; this is called a hash collision,\n * and while undesirable for performance reasons, it is acceptable.\n *\n *     if (a.equals(b)) {\n *       assert( a.hashCode() === b.hashCode() );\n *     }\n *\n * All Immutable collections are Value Objects: they implement `equals()`\n * and `hashCode()`.\n */\nfunction is(valueA, valueB) {\n  if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n    return true;\n  }\n  if (!valueA || !valueB) {\n    return false;\n  }\n  if (\n    typeof valueA.valueOf === 'function' &&\n    typeof valueB.valueOf === 'function'\n  ) {\n    valueA = valueA.valueOf();\n    valueB = valueB.valueOf();\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n  }\n  return !!(\n    isValueObject(valueA) &&\n    isValueObject(valueB) &&\n    valueA.equals(valueB)\n  );\n}\n\nvar imul =\n  typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2\n    ? Math.imul\n    : function imul(a, b) {\n        a |= 0; // int\n        b |= 0; // int\n        var c = a & 0xffff;\n        var d = b & 0xffff;\n        // Shift by 0 fixes the sign on the high part.\n        return (c * d + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0)) | 0; // int\n      };\n\n// v8 has an optimization for storing 31-bit signed numbers.\n// Values which have either 00 or 11 as the high order bits qualify.\n// This function drops the highest order bit in a signed number, maintaining\n// the sign bit.\nfunction smi(i32) {\n  return ((i32 >>> 1) & 0x40000000) | (i32 & 0xbfffffff);\n}\n\nvar defaultValueOf = Object.prototype.valueOf;\n\nfunction hash(o) {\n  switch (typeof o) {\n    case 'boolean':\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return o ? 0x42108421 : 0x42108420;\n    case 'number':\n      return hashNumber(o);\n    case 'string':\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN\n        ? cachedHashString(o)\n        : hashString(o);\n    case 'object':\n    case 'function':\n      if (o === null) {\n        return 0x42108422;\n      }\n      if (typeof o.hashCode === 'function') {\n        // Drop any high bits from accidentally long hash codes.\n        return smi(o.hashCode(o));\n      }\n      if (o.valueOf !== defaultValueOf && typeof o.valueOf === 'function') {\n        o = o.valueOf(o);\n      }\n      return hashJSObj(o);\n    case 'undefined':\n      return 0x42108423;\n    default:\n      if (typeof o.toString === 'function') {\n        return hashString(o.toString());\n      }\n      throw new Error('Value type ' + typeof o + ' cannot be hashed.');\n  }\n}\n\n// Compress arbitrarily large numbers into smi hashes.\nfunction hashNumber(n) {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n  var hash = n | 0;\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n  while (n > 0xffffffff) {\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n  return smi(hash);\n}\n\nfunction cachedHashString(string) {\n  var hashed = stringHashCache[string];\n  if (hashed === undefined) {\n    hashed = hashString(string);\n    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n      STRING_HASH_CACHE_SIZE = 0;\n      stringHashCache = {};\n    }\n    STRING_HASH_CACHE_SIZE++;\n    stringHashCache[string] = hashed;\n  }\n  return hashed;\n}\n\n// http://jsperf.com/hashing-strings\nfunction hashString(string) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  var hashed = 0;\n  for (var ii = 0; ii < string.length; ii++) {\n    hashed = (31 * hashed + string.charCodeAt(ii)) | 0;\n  }\n  return smi(hashed);\n}\n\nfunction hashJSObj(obj) {\n  var hashed;\n  if (usingWeakMap) {\n    hashed = weakMap.get(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = obj[UID_HASH_KEY];\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  if (!canDefineProperty) {\n    hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n    if (hashed !== undefined) {\n      return hashed;\n    }\n\n    hashed = getIENodeHash(obj);\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = ++objHashUID;\n  if (objHashUID & 0x40000000) {\n    objHashUID = 0;\n  }\n\n  if (usingWeakMap) {\n    weakMap.set(obj, hashed);\n  } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n    throw new Error('Non-extensible objects are not allowed as keys.');\n  } else if (canDefineProperty) {\n    Object.defineProperty(obj, UID_HASH_KEY, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: hashed,\n    });\n  } else if (\n    obj.propertyIsEnumerable !== undefined &&\n    obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable\n  ) {\n    // Since we can't define a non-enumerable property on the object\n    // we'll hijack one of the less-used non-enumerable properties to\n    // save our hash on it. Since this is a function it will not show up in\n    // `JSON.stringify` which is what we want.\n    obj.propertyIsEnumerable = function() {\n      return this.constructor.prototype.propertyIsEnumerable.apply(\n        this,\n        arguments\n      );\n    };\n    obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;\n  } else if (obj.nodeType !== undefined) {\n    // At this point we couldn't get the IE `uniqueID` to use as a hash\n    // and we couldn't use a non-enumerable property to exploit the\n    // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n    // itself.\n    obj[UID_HASH_KEY] = hashed;\n  } else {\n    throw new Error('Unable to set a non-enumerable property on object.');\n  }\n\n  return hashed;\n}\n\n// Get references to ES5 object methods.\nvar isExtensible = Object.isExtensible;\n\n// True if Object.defineProperty works as expected. IE8 fails this test.\nvar canDefineProperty = (function() {\n  try {\n    Object.defineProperty({}, '@', {});\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n// IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n// and avoid memory leaks from the IE cloneNode bug.\nfunction getIENodeHash(node) {\n  if (node && node.nodeType > 0) {\n    switch (node.nodeType) {\n      case 1: // Element\n        return node.uniqueID;\n      case 9: // Document\n        return node.documentElement && node.documentElement.uniqueID;\n    }\n  }\n}\n\n// If possible, use a WeakMap.\nvar usingWeakMap = typeof WeakMap === 'function';\nvar weakMap;\nif (usingWeakMap) {\n  weakMap = new WeakMap();\n}\n\nvar objHashUID = 0;\n\nvar UID_HASH_KEY = '__immutablehash__';\nif (typeof Symbol === 'function') {\n  UID_HASH_KEY = Symbol(UID_HASH_KEY);\n}\n\nvar STRING_HASH_CACHE_MIN_STRLEN = 16;\nvar STRING_HASH_CACHE_MAX_SIZE = 255;\nvar STRING_HASH_CACHE_SIZE = 0;\nvar stringHashCache = {};\n\nvar ToKeyedSequence = /*@__PURE__*/(function (KeyedSeq$$1) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  if ( KeyedSeq$$1 ) ToKeyedSequence.__proto__ = KeyedSeq$$1;\n  ToKeyedSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n\n  ToKeyedSequence.prototype.get = function get (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function has (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function valueSeq () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () { return this$1._iter.toSeq().reverse(); };\n    }\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function map (mapper, context) {\n    var this$1 = this;\n\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () { return this$1._iter.toSeq().map(mapper, context); };\n    }\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._iter.__iterate(function (v, k) { return fn(v, k, this$1); }, reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n\n  return ToKeyedSequence;\n}(KeyedSeq));\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar ToIndexedSequence = /*@__PURE__*/(function (IndexedSeq$$1) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( IndexedSeq$$1 ) ToIndexedSequence.__proto__ = IndexedSeq$$1;\n  ToIndexedSequence.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n\n  ToIndexedSequence.prototype.includes = function includes (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(\n      function (v) { return fn(v, reverse ? this$1.size - ++i : i++, this$1); },\n      reverse\n    );\n  };\n\n  ToIndexedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1 = this;\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(\n            type,\n            reverse ? this$1.size - ++i : i++,\n            step.value,\n            step\n          );\n    });\n  };\n\n  return ToIndexedSequence;\n}(IndexedSeq));\n\nvar ToSetSequence = /*@__PURE__*/(function (SetSeq$$1) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( SetSeq$$1 ) ToSetSequence.__proto__ = SetSeq$$1;\n  ToSetSequence.prototype = Object.create( SetSeq$$1 && SetSeq$$1.prototype );\n  ToSetSequence.prototype.constructor = ToSetSequence;\n\n  ToSetSequence.prototype.has = function has (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._iter.__iterate(function (v) { return fn(v, v, this$1); }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  return ToSetSequence;\n}(SetSeq));\n\nvar FromEntriesSequence = /*@__PURE__*/(function (KeyedSeq$$1) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  if ( KeyedSeq$$1 ) FromEntriesSequence.__proto__ = KeyedSeq$$1;\n  FromEntriesSequence.prototype = Object.create( KeyedSeq$$1 && KeyedSeq$$1.prototype );\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n\n  FromEntriesSequence.prototype.entrySeq = function entrySeq () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(\n          indexedCollection ? entry.get(1) : entry[1],\n          indexedCollection ? entry.get(0) : entry[0],\n          this$1\n        );\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(\n            type,\n            indexedCollection ? entry.get(0) : entry[0],\n            indexedCollection ? entry.get(1) : entry[1],\n            step\n          );\n        }\n      }\n    });\n  };\n\n  return FromEntriesSequence;\n}(KeyedSeq));\n\nToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n  flipSequence.flip = function () { return collection; };\n  flipSequence.reverse = function() {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n    reversedSequence.flip = function () { return collection.reverse(); };\n    return reversedSequence;\n  };\n  flipSequence.has = function (key) { return collection.includes(key); };\n  flipSequence.includes = function (key) { return collection.has(key); };\n  flipSequence.cacheResult = cacheResultThrough;\n  flipSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    return collection.__iterate(function (v, k) { return fn(k, v, this$1) !== false; }, reverse);\n  };\n  flipSequence.__iteratorUncached = function(type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n        return step;\n      });\n    }\n    return collection.__iterator(\n      type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n      reverse\n    );\n  };\n  return flipSequence;\n}\n\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n  mappedSequence.has = function (key) { return collection.has(key); };\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET\n      ? notSetValue\n      : mapper.call(context, v, key, collection);\n  };\n  mappedSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    return collection.__iterate(\n      function (v, k, c) { return fn(mapper.call(context, v, k, c), k, this$1) !== false; },\n      reverse\n    );\n  };\n  mappedSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(\n        type,\n        key,\n        mapper.call(context, entry[1], key, collection),\n        step\n      );\n    });\n  };\n  return mappedSequence;\n}\n\nfunction reverseFactory(collection, useKeys) {\n  var this$1 = this;\n\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n  reversedSequence.reverse = function () { return collection; };\n  if (collection.flip) {\n    reversedSequence.flip = function() {\n      var flipSequence = flipFactory(collection);\n      flipSequence.reverse = function () { return collection.flip(); };\n      return flipSequence;\n    };\n  }\n  reversedSequence.get = function (key, notSetValue) { return collection.get(useKeys ? key : -1 - key, notSetValue); };\n  reversedSequence.has = function (key) { return collection.has(useKeys ? key : -1 - key); };\n  reversedSequence.includes = function (value) { return collection.includes(value); };\n  reversedSequence.cacheResult = cacheResultThrough;\n  reversedSequence.__iterate = function(fn, reverse) {\n    var this$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(\n      function (v, k) { return fn(v, useKeys ? k : reverse ? this$1.size - ++i : i++, this$1); },\n      !reverse\n    );\n  };\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      return iteratorValue(\n        type,\n        useKeys ? entry[0] : reverse ? this$1.size - ++i : i++,\n        entry[1],\n        step\n      );\n    });\n  };\n  return reversedSequence;\n}\n\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection)\n        ? v\n        : notSetValue;\n    };\n  }\n  filterSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    }, reverse);\n    return iterations;\n  };\n  filterSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n  return filterSequence;\n}\n\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) { return a + 1; });\n  });\n  return groups.asImmutable();\n}\n\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(\n      grouper.call(context, v, k, collection),\n      function (a) { return ((a = a || []), a.push(isKeyedIter ? [k, v] : v), a); }\n    );\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) { return reify(collection, coerce(arr)); }).asImmutable();\n}\n\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize);\n\n  // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  }\n\n  // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n\n  var sliceSeq = makeSequence(collection);\n\n  // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n  sliceSeq.size =\n    sliceSize === 0 ? sliceSize : (collection.size && sliceSize) || undefined;\n\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize\n        ? collection.get(index + resolvedBegin, notSetValue)\n        : notSetValue;\n    };\n  }\n\n  sliceSeq.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    if (sliceSize === 0) {\n      return 0;\n    }\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return (\n          fn(v, useKeys ? k : iterations - 1, this$1) !== false &&\n          iterations !== sliceSize\n        );\n      }\n    });\n    return iterations;\n  };\n\n  sliceSeq.__iteratorUncached = function(type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    // Don't bother instantiating parent iterator if taking 0.\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n\n  return sliceSeq;\n}\n\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n  takeSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    collection.__iterate(\n      function (v, k, c) { return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1); }\n    );\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function(type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n      if (!predicate.call(context, v, k, this$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return takeSequence;\n}\n\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n  skipSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    });\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function(type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n      do {\n        step = iterator.next();\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1));\n      } while (skipping);\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return skipSequence;\n}\n\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection]\n    .concat(values)\n    .map(function (v) {\n      if (!isCollection(v)) {\n        v = isKeyedCollection\n          ? keyedSeqFromValue(v)\n          : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedCollection) {\n        v = KeyedCollection(v);\n      }\n      return v;\n    })\n    .filter(function (v) { return v.size !== 0; });\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (iters.length === 1) {\n    var singleton = iters[0];\n    if (\n      singleton === collection ||\n      (isKeyedCollection && isKeyed(singleton)) ||\n      (isIndexed(collection) && isIndexed(singleton))\n    ) {\n      return singleton;\n    }\n  }\n\n  var concatSeq = new ArraySeq(iters);\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\n\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n  flatSequence.__iterateUncached = function(fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    var stopped = false;\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n        return !stopped;\n      }, reverse);\n    }\n    flatDeep(collection, 0);\n    return iterations;\n  };\n  flatSequence.__iteratorUncached = function(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n        var v = step.value;\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n      return iteratorDone();\n    });\n  };\n  return flatSequence;\n}\n\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection\n    .toSeq()\n    .map(function (v, k) { return coerce(mapper.call(context, v, k, collection)); })\n    .flatten(true);\n}\n\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n  interposedSequence.__iterateUncached = function(fn, reverse) {\n    var this$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(\n      function (v) { return (!iterations || fn(separator, iterations++, this$1) !== false) &&\n        fn(v, iterations++, this$1) !== false; },\n      reverse\n    );\n    return iterations;\n  };\n  interposedSequence.__iteratorUncached = function(type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n      }\n      return iterations % 2\n        ? iteratorValue(type, iterations++, separator)\n        : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n  return interposedSequence;\n}\n\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection\n    .toSeq()\n    .map(function (v, k) { return [k, v, index++, mapper ? mapper(v, k, collection) : v]; })\n    .valueSeq()\n    .toArray();\n  entries.sort(function (a, b) { return comparator(a[3], b[3]) || a[2] - b[2]; }).forEach(\n    isKeyedCollection\n      ? function (v, i) {\n          entries[i].length = 2;\n        }\n      : function (v, i) {\n          entries[i] = v[1];\n        }\n  );\n  return isKeyedCollection\n    ? KeyedSeq(entries)\n    : isIndexed(collection)\n      ? IndexedSeq(entries)\n      : SetSeq(entries);\n}\n\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  if (mapper) {\n    var entry = collection\n      .toSeq()\n      .map(function (v, k) { return [v, mapper(v, k, collection)]; })\n      .reduce(function (a, b) { return (maxCompare(comparator, a[1], b[1]) ? b : a); });\n    return entry && entry[0];\n  }\n  return collection.reduce(function (a, b) { return (maxCompare(comparator, a, b) ? b : a); });\n}\n\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a);\n  // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n  return (\n    (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) ||\n    comp > 0\n  );\n}\n\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) { return i.size; });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min();\n  // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n  zipSequence.__iterate = function(fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n  zipSequence.__iteratorUncached = function(type, reverse) {\n    var iterators = iters.map(\n      function (i) { return ((i = Collection(i)), getIterator(reverse ? i.reverse() : i)); }\n    );\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n      if (!isDone) {\n        steps = iterators.map(function (i) { return i.next(); });\n        isDone = zipAll ? steps.every(function (s) { return s.done; }) : steps.some(function (s) { return s.done; });\n      }\n      if (isDone) {\n        return iteratorDone();\n      }\n      return iteratorValue(\n        type,\n        iterations++,\n        zipper.apply(null, steps.map(function (s) { return s.value; }))\n      );\n    });\n  };\n  return zipSequence;\n}\n\n// #pragma Helper Functions\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\n\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\n\nfunction collectionClass(collection) {\n  return isKeyed(collection)\n    ? KeyedCollection\n    : isIndexed(collection)\n      ? IndexedCollection\n      : SetCollection;\n}\n\nfunction makeSequence(collection) {\n  return Object.create(\n    (isKeyed(collection)\n      ? KeyedSeq\n      : isIndexed(collection)\n        ? IndexedSeq\n        : SetSeq\n    ).prototype\n  );\n}\n\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n    this.size = this._iter.size;\n    return this;\n  }\n  return Seq.prototype.cacheResult.call(this);\n}\n\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n\n  if (a === undefined) {\n    return 1;\n  }\n\n  if (b === undefined) {\n    return -1;\n  }\n\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n// http://jsperf.com/copy-array-inline\nfunction arrCopy(arr, offset) {\n  offset = offset || 0;\n  var len = Math.max(0, arr.length - offset);\n  var newArr = new Array(len);\n  for (var ii = 0; ii < len; ii++) {\n    newArr[ii] = arr[ii + offset];\n  }\n  return newArr;\n}\n\nfunction invariant(condition, error) {\n  if (!condition) { throw new Error(error); }\n}\n\nfunction assertNotInfinite(size) {\n  invariant(\n    size !== Infinity,\n    'Cannot perform this action with an infinite size.'\n  );\n}\n\nfunction coerceKeyPath(keyPath) {\n  if (isArrayLike(keyPath) && typeof keyPath !== 'string') {\n    return keyPath;\n  }\n  if (isOrdered(keyPath)) {\n    return keyPath.toArray();\n  }\n  throw new TypeError(\n    'Invalid keyPath: expected Ordered Collection or Array: ' + keyPath\n  );\n}\n\nfunction isPlainObj(value) {\n  return (\n    value &&\n    (typeof value.constructor !== 'function' ||\n      value.constructor.name === 'Object')\n  );\n}\n\n/**\n * Returns true if the value is a potentially-persistent data structure, either\n * provided by Immutable.js or a plain Array or Object.\n */\nfunction isDataStructure(value) {\n  return (\n    typeof value === 'object' &&\n    (isImmutable(value) || Array.isArray(value) || isPlainObj(value))\n  );\n}\n\n/**\n * Converts a value to a string, adding quotes if a string was provided.\n */\nfunction quoteString(value) {\n  try {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  } catch (_ignoreError) {\n    return JSON.stringify(value);\n  }\n}\n\nfunction has(collection, key) {\n  return isImmutable(collection)\n    ? collection.has(key)\n    : isDataStructure(collection) && hasOwnProperty.call(collection, key);\n}\n\nfunction get(collection, key, notSetValue) {\n  return isImmutable(collection)\n    ? collection.get(key, notSetValue)\n    : !has(collection, key)\n      ? notSetValue\n      : typeof collection.get === 'function'\n        ? collection.get(key)\n        : collection[key];\n}\n\nfunction shallowCopy(from) {\n  if (Array.isArray(from)) {\n    return arrCopy(from);\n  }\n  var to = {};\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      to[key] = from[key];\n    }\n  }\n  return to;\n}\n\nfunction remove(collection, key) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.remove) {\n      throw new TypeError(\n        'Cannot update immutable value without .remove() method: ' + collection\n      );\n    }\n    return collection.remove(key);\n  }\n  if (!hasOwnProperty.call(collection, key)) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  if (Array.isArray(collectionCopy)) {\n    collectionCopy.splice(key, 1);\n  } else {\n    delete collectionCopy[key];\n  }\n  return collectionCopy;\n}\n\nfunction set(collection, key, value) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot update non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    if (!collection.set) {\n      throw new TypeError(\n        'Cannot update immutable value without .set() method: ' + collection\n      );\n    }\n    return collection.set(key, value);\n  }\n  if (hasOwnProperty.call(collection, key) && value === collection[key]) {\n    return collection;\n  }\n  var collectionCopy = shallowCopy(collection);\n  collectionCopy[key] = value;\n  return collectionCopy;\n}\n\nfunction updateIn(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n  var updatedValue = updateInDeeply(\n    isImmutable(collection),\n    collection,\n    coerceKeyPath(keyPath),\n    0,\n    notSetValue,\n    updater\n  );\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\n\nfunction updateInDeeply(\n  inImmutable,\n  existing,\n  keyPath,\n  i,\n  notSetValue,\n  updater\n) {\n  var wasNotSet = existing === NOT_SET;\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError(\n      'Cannot update within non-data-structure value in path [' +\n        keyPath.slice(0, i).map(quoteString) +\n        ']: ' +\n        existing\n    );\n  }\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(\n    nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting),\n    nextExisting,\n    keyPath,\n    i + 1,\n    notSetValue,\n    updater\n  );\n  return nextUpdated === nextExisting\n    ? existing\n    : nextUpdated === NOT_SET\n      ? remove(existing, key)\n      : set(\n          wasNotSet ? (inImmutable ? emptyMap() : {}) : existing,\n          key,\n          nextUpdated\n        );\n}\n\nfunction setIn(collection, keyPath, value) {\n  return updateIn(collection, keyPath, NOT_SET, function () { return value; });\n}\n\nfunction setIn$1(keyPath, v) {\n  return setIn(this, keyPath, v);\n}\n\nfunction removeIn(collection, keyPath) {\n  return updateIn(collection, keyPath, function () { return NOT_SET; });\n}\n\nfunction deleteIn(keyPath) {\n  return removeIn(this, keyPath);\n}\n\nfunction update(collection, key, notSetValue, updater) {\n  return updateIn(collection, [key], notSetValue, updater);\n}\n\nfunction update$1(key, notSetValue, updater) {\n  return arguments.length === 1\n    ? key(this)\n    : update(this, key, notSetValue, updater);\n}\n\nfunction updateIn$1(keyPath, notSetValue, updater) {\n  return updateIn(this, keyPath, notSetValue, updater);\n}\n\nfunction merge() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeIntoKeyedWith(this, iters);\n}\n\nfunction mergeWith(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n  return mergeIntoKeyedWith(this, iters, merger);\n}\n\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n  if (iters.length === 0) {\n    return collection;\n  }\n  if (\n    collection.toSeq().size === 0 &&\n    !collection.__ownerID &&\n    iters.length === 1\n  ) {\n    return collection.constructor(iters[0]);\n  }\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger\n      ? function (value, key) {\n          update(\n            collection,\n            key,\n            NOT_SET,\n            function (oldVal) { return (oldVal === NOT_SET ? value : merger(oldVal, value, key)); }\n          );\n        }\n      : function (value, key) {\n          collection.set(key, value);\n        };\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\n\nfunction merge$1(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeWithSources(collection, sources);\n}\n\nfunction mergeWith$1(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeWithSources(collection, sources, merger);\n}\n\nfunction mergeDeep(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(collection, sources);\n}\n\nfunction mergeDeepWith(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeDeepWithSources(collection, sources, merger);\n}\n\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\n\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot merge into non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith\n      ? collection.mergeWith.apply(collection, [ merger ].concat( sources ))\n      : collection.merge\n        ? collection.merge.apply(collection, sources)\n        : collection.concat.apply(collection, sources);\n  }\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection$$1 = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray\n    ? function (value) {\n        // Copy on write\n        if (merged === collection) {\n          merged = shallowCopy(merged);\n        }\n        merged.push(value);\n      }\n    : function (value, key) {\n        var hasVal = hasOwnProperty.call(merged, key);\n        var nextVal =\n          hasVal && merger ? merger(merged[key], value, key) : value;\n        if (!hasVal || nextVal !== merged[key]) {\n          // Copy on write\n          if (merged === collection) {\n            merged = shallowCopy(merged);\n          }\n          merged[key] = nextVal;\n        }\n      };\n  for (var i = 0; i < sources.length; i++) {\n    Collection$$1(sources[i]).forEach(mergeItem);\n  }\n  return merged;\n}\n\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) && isDataStructure(newValue)\n      ? mergeWithSources(oldValue, [newValue], deepMerger)\n      : merger\n        ? merger(oldValue, newValue, key)\n        : newValue;\n  }\n  return deepMerger;\n}\n\nfunction mergeDeep$1() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeDeepWithSources(this, iters);\n}\n\nfunction mergeDeepWith$1(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(this, iters, merger);\n}\n\nfunction mergeIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn(this, keyPath, emptyMap(), function (m) { return mergeWithSources(m, iters); });\n}\n\nfunction mergeDeepIn(keyPath) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  return updateIn(this, keyPath, emptyMap(), function (m) { return mergeDeepWithSources(m, iters); }\n  );\n}\n\nfunction withMutations(fn) {\n  var mutable = this.asMutable();\n  fn(mutable);\n  return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n}\n\nfunction asMutable() {\n  return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n}\n\nfunction asImmutable() {\n  return this.__ensureOwner();\n}\n\nfunction wasAltered() {\n  return this.__altered;\n}\n\nvar Map = /*@__PURE__*/(function (KeyedCollection$$1) {\n  function Map(value) {\n    return value === null || value === undefined\n      ? emptyMap()\n      : isMap(value) && !isOrdered(value)\n        ? value\n        : emptyMap().withMutations(function (map) {\n            var iter = KeyedCollection$$1(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v, k) { return map.set(k, v); });\n          });\n  }\n\n  if ( KeyedCollection$$1 ) Map.__proto__ = KeyedCollection$$1;\n  Map.prototype = Object.create( KeyedCollection$$1 && KeyedCollection$$1.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.of = function of () {\n    var keyValues = [], len = arguments.length;\n    while ( len-- ) keyValues[ len ] = arguments[ len ];\n\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function toString () {\n    return this.__toString('Map {', '}');\n  };\n\n  // @pragma Access\n\n  Map.prototype.get = function get (k, notSetValue) {\n    return this._root\n      ? this._root.get(0, undefined, k, notSetValue)\n      : notSetValue;\n  };\n\n  // @pragma Modification\n\n  Map.prototype.set = function set (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.remove = function remove (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteAll = function deleteAll (keys) {\n    var collection = Collection(keys);\n\n    if (collection.size === 0) {\n      return this;\n    }\n\n    return this.withMutations(function (map) {\n      collection.forEach(function (key) { return map.remove(key); });\n    });\n  };\n\n  Map.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  };\n\n  // @pragma Composition\n\n  Map.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  Map.prototype.map = function map (mapper, context) {\n    return this.withMutations(function (map) {\n      map.forEach(function (value, key) {\n        map.set(key, mapper.call(context, value, key, map));\n      });\n    });\n  };\n\n  // @pragma Mutability\n\n  Map.prototype.__iterator = function __iterator (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    var iterations = 0;\n    this._root &&\n      this._root.iterate(function (entry) {\n        iterations++;\n        return fn(entry[1], entry[0], this$1);\n      }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyMap();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  return Map;\n}(KeyedCollection));\n\nMap.isMap = isMap;\n\nvar MapPrototype = Map.prototype;\nMapPrototype[IS_MAP_SYMBOL] = true;\nMapPrototype[DELETE] = MapPrototype.remove;\nMapPrototype.removeAll = MapPrototype.deleteAll;\nMapPrototype.setIn = setIn$1;\nMapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;\nMapPrototype.update = update$1;\nMapPrototype.updateIn = updateIn$1;\nMapPrototype.merge = MapPrototype.concat = merge;\nMapPrototype.mergeWith = mergeWith;\nMapPrototype.mergeDeep = mergeDeep$1;\nMapPrototype.mergeDeepWith = mergeDeepWith$1;\nMapPrototype.mergeIn = mergeIn;\nMapPrototype.mergeDeepIn = mergeDeepIn;\nMapPrototype.withMutations = withMutations;\nMapPrototype.wasAltered = wasAltered;\nMapPrototype.asImmutable = asImmutable;\nMapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;\nMapPrototype['@@transducer/step'] = function(result, arr) {\n  return result.set(arr[0], arr[1]);\n};\nMapPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\n// #pragma Trie Nodes\n\nvar ArrayMapNode = function ArrayMapNode(ownerID, entries) {\n  this.ownerID = ownerID;\n  this.entries = entries;\n};\n\nArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && entries.length === 1) {\n    return; // undefined\n  }\n\n  if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n    return createNodes(ownerID, entries, key, value);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new ArrayMapNode(ownerID, newEntries);\n};\n\nvar BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {\n  this.ownerID = ownerID;\n  this.bitmap = bitmap;\n  this.nodes = nodes;\n};\n\nBitmapIndexedNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n  var bitmap = this.bitmap;\n  return (bitmap & bit) === 0\n    ? notSetValue\n    : this.nodes[popCount(bitmap & (bit - 1))].get(\n        shift + SHIFT,\n        keyHash,\n        key,\n        notSetValue\n      );\n};\n\nBitmapIndexedNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var bit = 1 << keyHashFrag;\n  var bitmap = this.bitmap;\n  var exists = (bitmap & bit) !== 0;\n\n  if (!exists && value === NOT_SET) {\n    return this;\n  }\n\n  var idx = popCount(bitmap & (bit - 1));\n  var nodes = this.nodes;\n  var node = exists ? nodes[idx] : undefined;\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n\n  if (newNode === node) {\n    return this;\n  }\n\n  if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n    return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n  }\n\n  if (\n    exists &&\n    !newNode &&\n    nodes.length === 2 &&\n    isLeafNode(nodes[idx ^ 1])\n  ) {\n    return nodes[idx ^ 1];\n  }\n\n  if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n    return newNode;\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newBitmap = exists ? (newNode ? bitmap : bitmap ^ bit) : bitmap | bit;\n  var newNodes = exists\n    ? newNode\n      ? setAt(nodes, idx, newNode, isEditable)\n      : spliceOut(nodes, idx, isEditable)\n    : spliceIn(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.bitmap = newBitmap;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n};\n\nvar HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {\n  this.ownerID = ownerID;\n  this.count = count;\n  this.nodes = nodes;\n};\n\nHashArrayMapNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var node = this.nodes[idx];\n  return node\n    ? node.get(shift + SHIFT, keyHash, key, notSetValue)\n    : notSetValue;\n};\n\nHashArrayMapNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var removed = value === NOT_SET;\n  var nodes = this.nodes;\n  var node = nodes[idx];\n\n  if (removed && !node) {\n    return this;\n  }\n\n  var newNode = updateNode(\n    node,\n    ownerID,\n    shift + SHIFT,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n  if (newNode === node) {\n    return this;\n  }\n\n  var newCount = this.count;\n  if (!node) {\n    newCount++;\n  } else if (!newNode) {\n    newCount--;\n    if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n      return packNodes(ownerID, nodes, newCount, idx);\n    }\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newNodes = setAt(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.count = newCount;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new HashArrayMapNode(ownerID, newCount, newNodes);\n};\n\nvar HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entries = entries;\n};\n\nHashCollisionNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n  return notSetValue;\n};\n\nHashCollisionNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var removed = value === NOT_SET;\n\n  if (keyHash !== this.keyHash) {\n    if (removed) {\n      return this;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n  }\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && len === 2) {\n    return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1\n        ? newEntries.pop()\n        : (newEntries[idx] = newEntries.pop());\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n};\n\nvar ValueNode = function ValueNode(ownerID, keyHash, entry) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entry = entry;\n};\n\nValueNode.prototype.get = function get (shift, keyHash, key, notSetValue) {\n  return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n};\n\nValueNode.prototype.update = function update (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var keyMatch = is(key, this.entry[0]);\n  if (keyMatch ? value === this.entry[1] : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n\n  if (removed) {\n    SetRef(didChangeSize);\n    return; // undefined\n  }\n\n  if (keyMatch) {\n    if (ownerID && ownerID === this.ownerID) {\n      this.entry[1] = value;\n      return this;\n    }\n    return new ValueNode(ownerID, this.keyHash, [key, value]);\n  }\n\n  SetRef(didChangeSize);\n  return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n};\n\n// #pragma Iterators\n\nArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function(\n  fn,\n  reverse\n) {\n  var entries = this.entries;\n  for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n    if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n      return false;\n    }\n  }\n};\n\nBitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function(\n  fn,\n  reverse\n) {\n  var nodes = this.nodes;\n  for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n    var node = nodes[reverse ? maxIndex - ii : ii];\n    if (node && node.iterate(fn, reverse) === false) {\n      return false;\n    }\n  }\n};\n\n// eslint-disable-next-line no-unused-vars\nValueNode.prototype.iterate = function(fn, reverse) {\n  return fn(this.entry);\n};\n\nvar MapIterator = /*@__PURE__*/(function (Iterator$$1) {\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  if ( Iterator$$1 ) MapIterator.__proto__ = Iterator$$1;\n  MapIterator.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  MapIterator.prototype.constructor = MapIterator;\n\n  MapIterator.prototype.next = function next () {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex = (void 0);\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(\n            type,\n            node.entries[this._reverse ? maxIndex - index : index]\n          );\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  };\n\n  return MapIterator;\n}(Iterator));\n\nfunction mapIteratorValue(type, entry) {\n  return iteratorValue(type, entry[0], entry[1]);\n}\n\nfunction mapIteratorFrame(node, prev) {\n  return {\n    node: node,\n    index: 0,\n    __prev: prev,\n  };\n}\n\nfunction makeMap(size, root, ownerID, hash$$1) {\n  var map = Object.create(MapPrototype);\n  map.size = size;\n  map._root = root;\n  map.__ownerID = ownerID;\n  map.__hash = hash$$1;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_MAP;\nfunction emptyMap() {\n  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n}\n\nfunction updateMap(map, k, v) {\n  var newRoot;\n  var newSize;\n  if (!map._root) {\n    if (v === NOT_SET) {\n      return map;\n    }\n    newSize = 1;\n    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n  } else {\n    var didChangeSize = MakeRef();\n    var didAlter = MakeRef();\n    newRoot = updateNode(\n      map._root,\n      map.__ownerID,\n      0,\n      undefined,\n      k,\n      v,\n      didChangeSize,\n      didAlter\n    );\n    if (!didAlter.value) {\n      return map;\n    }\n    newSize = map.size + (didChangeSize.value ? (v === NOT_SET ? -1 : 1) : 0);\n  }\n  if (map.__ownerID) {\n    map.size = newSize;\n    map._root = newRoot;\n    map.__hash = undefined;\n    map.__altered = true;\n    return map;\n  }\n  return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n}\n\nfunction updateNode(\n  node,\n  ownerID,\n  shift,\n  keyHash,\n  key,\n  value,\n  didChangeSize,\n  didAlter\n) {\n  if (!node) {\n    if (value === NOT_SET) {\n      return node;\n    }\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return new ValueNode(ownerID, keyHash, [key, value]);\n  }\n  return node.update(\n    ownerID,\n    shift,\n    keyHash,\n    key,\n    value,\n    didChangeSize,\n    didAlter\n  );\n}\n\nfunction isLeafNode(node) {\n  return (\n    node.constructor === ValueNode || node.constructor === HashCollisionNode\n  );\n}\n\nfunction mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n  if (node.keyHash === keyHash) {\n    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n  }\n\n  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n  var newNode;\n  var nodes =\n    idx1 === idx2\n      ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)]\n      : ((newNode = new ValueNode(ownerID, keyHash, entry)),\n        idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n  return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n}\n\nfunction createNodes(ownerID, entries, key, value) {\n  if (!ownerID) {\n    ownerID = new OwnerID();\n  }\n  var node = new ValueNode(ownerID, hash(key), [key, value]);\n  for (var ii = 0; ii < entries.length; ii++) {\n    var entry = entries[ii];\n    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n  }\n  return node;\n}\n\nfunction packNodes(ownerID, nodes, count, excluding) {\n  var bitmap = 0;\n  var packedII = 0;\n  var packedNodes = new Array(count);\n  for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n    var node = nodes[ii];\n    if (node !== undefined && ii !== excluding) {\n      bitmap |= bit;\n      packedNodes[packedII++] = node;\n    }\n  }\n  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n}\n\nfunction expandNodes(ownerID, nodes, bitmap, including, node) {\n  var count = 0;\n  var expandedNodes = new Array(SIZE);\n  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n  }\n  expandedNodes[including] = node;\n  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n}\n\nfunction popCount(x) {\n  x -= (x >> 1) & 0x55555555;\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n  x = (x + (x >> 4)) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n\nfunction setAt(array, idx, val, canEdit) {\n  var newArray = canEdit ? array : arrCopy(array);\n  newArray[idx] = val;\n  return newArray;\n}\n\nfunction spliceIn(array, idx, val, canEdit) {\n  var newLen = array.length + 1;\n  if (canEdit && idx + 1 === newLen) {\n    array[idx] = val;\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      newArray[ii] = val;\n      after = -1;\n    } else {\n      newArray[ii] = array[ii + after];\n    }\n  }\n  return newArray;\n}\n\nfunction spliceOut(array, idx, canEdit) {\n  var newLen = array.length - 1;\n  if (canEdit && idx === newLen) {\n    array.pop();\n    return array;\n  }\n  var newArray = new Array(newLen);\n  var after = 0;\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      after = 1;\n    }\n    newArray[ii] = array[ii + after];\n  }\n  return newArray;\n}\n\nvar MAX_ARRAY_MAP_SIZE = SIZE / 4;\nvar MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\nvar MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\nvar IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';\n\nfunction isList(maybeList) {\n  return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);\n}\n\nvar List = /*@__PURE__*/(function (IndexedCollection$$1) {\n  function List(value) {\n    var empty = emptyList();\n    if (value === null || value === undefined) {\n      return empty;\n    }\n    if (isList(value)) {\n      return value;\n    }\n    var iter = IndexedCollection$$1(value);\n    var size = iter.size;\n    if (size === 0) {\n      return empty;\n    }\n    assertNotInfinite(size);\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) { return list.set(i, v); });\n    });\n  }\n\n  if ( IndexedCollection$$1 ) List.__proto__ = IndexedCollection$$1;\n  List.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function toString () {\n    return this.__toString('List [', ']');\n  };\n\n  // @pragma Access\n\n  List.prototype.get = function get (index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n    return notSetValue;\n  };\n\n  // @pragma Modification\n\n  List.prototype.set = function set (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function remove (index) {\n    return !this.has(index)\n      ? this\n      : index === 0\n        ? this.shift()\n        : index === this.size - 1\n          ? this.pop()\n          : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function insert (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  };\n\n  List.prototype.push = function push (/*...values*/) {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function pop () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function unshift (/*...values*/) {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function shift () {\n    return setListBounds(this, 1);\n  };\n\n  // @pragma Composition\n\n  List.prototype.concat = function concat (/*...collections*/) {\n    var arguments$1 = arguments;\n\n    var seqs = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var argument = arguments$1[i];\n      var seq = IndexedCollection$$1(\n        typeof argument !== 'string' && hasIterator(argument)\n          ? argument\n          : [argument]\n      );\n      if (seq.size !== 0) {\n        seqs.push(seq);\n      }\n    }\n    if (seqs.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && seqs.length === 1) {\n      return this.constructor(seqs[0]);\n    }\n    return this.withMutations(function (list) {\n      seqs.forEach(function (seq) { return seq.forEach(function (value) { return list.push(value); }); });\n    });\n  };\n\n  List.prototype.setSize = function setSize (size) {\n    return setListBounds(this, 0, size);\n  };\n\n  List.prototype.map = function map (mapper, context) {\n    var this$1 = this;\n\n    return this.withMutations(function (list) {\n      for (var i = 0; i < this$1.size; i++) {\n        list.set(i, mapper.call(context, list.get(i), i, list));\n      }\n    });\n  };\n\n  // @pragma Iteration\n\n  List.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(\n      this,\n      resolveBegin(begin, size),\n      resolveEnd(end, size)\n    );\n  };\n\n  List.prototype.__iterator = function __iterator (type, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE\n        ? iteratorDone()\n        : iteratorValue(type, reverse ? --index : index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function __iterate (fn, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    var value;\n    while ((value = values()) !== DONE) {\n      if (fn(value, reverse ? --index : index++, this) === false) {\n        break;\n      }\n    }\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyList();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeList(\n      this._origin,\n      this._capacity,\n      this._level,\n      this._root,\n      this._tail,\n      ownerID,\n      this.__hash\n    );\n  };\n\n  return List;\n}(IndexedCollection));\n\nList.isList = isList;\n\nvar ListPrototype = List.prototype;\nListPrototype[IS_LIST_SYMBOL] = true;\nListPrototype[DELETE] = ListPrototype.remove;\nListPrototype.merge = ListPrototype.concat;\nListPrototype.setIn = setIn$1;\nListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;\nListPrototype.update = update$1;\nListPrototype.updateIn = updateIn$1;\nListPrototype.mergeIn = mergeIn;\nListPrototype.mergeDeepIn = mergeDeepIn;\nListPrototype.withMutations = withMutations;\nListPrototype.wasAltered = wasAltered;\nListPrototype.asImmutable = asImmutable;\nListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;\nListPrototype['@@transducer/step'] = function(result, arr) {\n  return result.push(arr);\n};\nListPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\nvar VNode = function VNode(array, ownerID) {\n  this.array = array;\n  this.ownerID = ownerID;\n};\n\n// TODO: seems like these methods are very similar\n\nVNode.prototype.removeBefore = function removeBefore (ownerID, level, index) {\n  if (index === level ? 1 << level : this.array.length === 0) {\n    return this;\n  }\n  var originIndex = (index >>> level) & MASK;\n  if (originIndex >= this.array.length) {\n    return new VNode([], ownerID);\n  }\n  var removingFirst = originIndex === 0;\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[originIndex];\n    newChild =\n      oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && removingFirst) {\n      return this;\n    }\n  }\n  if (removingFirst && !newChild) {\n    return this;\n  }\n  var editable = editableVNode(this, ownerID);\n  if (!removingFirst) {\n    for (var ii = 0; ii < originIndex; ii++) {\n      editable.array[ii] = undefined;\n    }\n  }\n  if (newChild) {\n    editable.array[originIndex] = newChild;\n  }\n  return editable;\n};\n\nVNode.prototype.removeAfter = function removeAfter (ownerID, level, index) {\n  if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n    return this;\n  }\n  var sizeIndex = ((index - 1) >>> level) & MASK;\n  if (sizeIndex >= this.array.length) {\n    return this;\n  }\n\n  var newChild;\n  if (level > 0) {\n    var oldChild = this.array[sizeIndex];\n    newChild =\n      oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n    if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n      return this;\n    }\n  }\n\n  var editable = editableVNode(this, ownerID);\n  editable.array.splice(sizeIndex + 1);\n  if (newChild) {\n    editable.array[sizeIndex] = newChild;\n  }\n  return editable;\n};\n\nvar DONE = {};\n\nfunction iterateList(list, reverse) {\n  var left = list._origin;\n  var right = list._capacity;\n  var tailPos = getTailOffset(right);\n  var tail = list._tail;\n\n  return iterateNodeOrLeaf(list._root, list._level, 0);\n\n  function iterateNodeOrLeaf(node, level, offset) {\n    return level === 0\n      ? iterateLeaf(node, offset)\n      : iterateNode(node, level, offset);\n  }\n\n  function iterateLeaf(node, offset) {\n    var array = offset === tailPos ? tail && tail.array : node && node.array;\n    var from = offset > left ? 0 : left - offset;\n    var to = right - offset;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      if (from === to) {\n        return DONE;\n      }\n      var idx = reverse ? --to : from++;\n      return array && array[idx];\n    };\n  }\n\n  function iterateNode(node, level, offset) {\n    var values;\n    var array = node && node.array;\n    var from = offset > left ? 0 : (left - offset) >> level;\n    var to = ((right - offset) >> level) + 1;\n    if (to > SIZE) {\n      to = SIZE;\n    }\n    return function () {\n      while (true) {\n        if (values) {\n          var value = values();\n          if (value !== DONE) {\n            return value;\n          }\n          values = null;\n        }\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        values = iterateNodeOrLeaf(\n          array && array[idx],\n          level - SHIFT,\n          offset + (idx << level)\n        );\n      }\n    };\n  }\n}\n\nfunction makeList(origin, capacity, level, root, tail, ownerID, hash) {\n  var list = Object.create(ListPrototype);\n  list.size = capacity - origin;\n  list._origin = origin;\n  list._capacity = capacity;\n  list._level = level;\n  list._root = root;\n  list._tail = tail;\n  list.__ownerID = ownerID;\n  list.__hash = hash;\n  list.__altered = false;\n  return list;\n}\n\nvar EMPTY_LIST;\nfunction emptyList() {\n  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n}\n\nfunction updateList(list, index, value) {\n  index = wrapIndex(list, index);\n\n  if (index !== index) {\n    return list;\n  }\n\n  if (index >= list.size || index < 0) {\n    return list.withMutations(function (list) {\n      index < 0\n        ? setListBounds(list, index).set(0, value)\n        : setListBounds(list, 0, index + 1).set(index, value);\n    });\n  }\n\n  index += list._origin;\n\n  var newTail = list._tail;\n  var newRoot = list._root;\n  var didAlter = MakeRef();\n  if (index >= getTailOffset(list._capacity)) {\n    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n  } else {\n    newRoot = updateVNode(\n      newRoot,\n      list.__ownerID,\n      list._level,\n      index,\n      value,\n      didAlter\n    );\n  }\n\n  if (!didAlter.value) {\n    return list;\n  }\n\n  if (list.__ownerID) {\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n}\n\nfunction updateVNode(node, ownerID, level, index, value, didAlter) {\n  var idx = (index >>> level) & MASK;\n  var nodeHas = node && idx < node.array.length;\n  if (!nodeHas && value === undefined) {\n    return node;\n  }\n\n  var newNode;\n\n  if (level > 0) {\n    var lowerNode = node && node.array[idx];\n    var newLowerNode = updateVNode(\n      lowerNode,\n      ownerID,\n      level - SHIFT,\n      index,\n      value,\n      didAlter\n    );\n    if (newLowerNode === lowerNode) {\n      return node;\n    }\n    newNode = editableVNode(node, ownerID);\n    newNode.array[idx] = newLowerNode;\n    return newNode;\n  }\n\n  if (nodeHas && node.array[idx] === value) {\n    return node;\n  }\n\n  if (didAlter) {\n    SetRef(didAlter);\n  }\n\n  newNode = editableVNode(node, ownerID);\n  if (value === undefined && idx === newNode.array.length - 1) {\n    newNode.array.pop();\n  } else {\n    newNode.array[idx] = value;\n  }\n  return newNode;\n}\n\nfunction editableVNode(node, ownerID) {\n  if (ownerID && node && ownerID === node.ownerID) {\n    return node;\n  }\n  return new VNode(node ? node.array.slice() : [], ownerID);\n}\n\nfunction listNodeFor(list, rawIndex) {\n  if (rawIndex >= getTailOffset(list._capacity)) {\n    return list._tail;\n  }\n  if (rawIndex < 1 << (list._level + SHIFT)) {\n    var node = list._root;\n    var level = list._level;\n    while (node && level > 0) {\n      node = node.array[(rawIndex >>> level) & MASK];\n      level -= SHIFT;\n    }\n    return node;\n  }\n}\n\nfunction setListBounds(list, begin, end) {\n  // Sanitize begin & end using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  if (begin !== undefined) {\n    begin |= 0;\n  }\n  if (end !== undefined) {\n    end |= 0;\n  }\n  var owner = list.__ownerID || new OwnerID();\n  var oldOrigin = list._origin;\n  var oldCapacity = list._capacity;\n  var newOrigin = oldOrigin + begin;\n  var newCapacity =\n    end === undefined\n      ? oldCapacity\n      : end < 0\n        ? oldCapacity + end\n        : oldOrigin + end;\n  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n    return list;\n  }\n\n  // If it's going to end after it starts, it's empty.\n  if (newOrigin >= newCapacity) {\n    return list.clear();\n  }\n\n  var newLevel = list._level;\n  var newRoot = list._root;\n\n  // New origin might need creating a higher root.\n  var offsetShift = 0;\n  while (newOrigin + offsetShift < 0) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [undefined, newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n    offsetShift += 1 << newLevel;\n  }\n  if (offsetShift) {\n    newOrigin += offsetShift;\n    oldOrigin += offsetShift;\n    newCapacity += offsetShift;\n    oldCapacity += offsetShift;\n  }\n\n  var oldTailOffset = getTailOffset(oldCapacity);\n  var newTailOffset = getTailOffset(newCapacity);\n\n  // New size might need creating a higher root.\n  while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n    newRoot = new VNode(\n      newRoot && newRoot.array.length ? [newRoot] : [],\n      owner\n    );\n    newLevel += SHIFT;\n  }\n\n  // Locate or create the new tail.\n  var oldTail = list._tail;\n  var newTail =\n    newTailOffset < oldTailOffset\n      ? listNodeFor(list, newCapacity - 1)\n      : newTailOffset > oldTailOffset\n        ? new VNode([], owner)\n        : oldTail;\n\n  // Merge Tail into tree.\n  if (\n    oldTail &&\n    newTailOffset > oldTailOffset &&\n    newOrigin < oldCapacity &&\n    oldTail.array.length\n  ) {\n    newRoot = editableVNode(newRoot, owner);\n    var node = newRoot;\n    for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n      var idx = (oldTailOffset >>> level) & MASK;\n      node = node.array[idx] = editableVNode(node.array[idx], owner);\n    }\n    node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n  }\n\n  // If the size has been reduced, there's a chance the tail needs to be trimmed.\n  if (newCapacity < oldCapacity) {\n    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n  }\n\n  // If the new origin is within the tail, then we do not need a root.\n  if (newOrigin >= newTailOffset) {\n    newOrigin -= newTailOffset;\n    newCapacity -= newTailOffset;\n    newLevel = SHIFT;\n    newRoot = null;\n    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n    offsetShift = 0;\n\n    // Identify the new top root node of the subtree of the old root.\n    while (newRoot) {\n      var beginIndex = (newOrigin >>> newLevel) & MASK;\n      if ((beginIndex !== newTailOffset >>> newLevel) & MASK) {\n        break;\n      }\n      if (beginIndex) {\n        offsetShift += (1 << newLevel) * beginIndex;\n      }\n      newLevel -= SHIFT;\n      newRoot = newRoot.array[beginIndex];\n    }\n\n    // Trim the new sides of the new root.\n    if (newRoot && newOrigin > oldOrigin) {\n      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n    }\n    if (newRoot && newTailOffset < oldTailOffset) {\n      newRoot = newRoot.removeAfter(\n        owner,\n        newLevel,\n        newTailOffset - offsetShift\n      );\n    }\n    if (offsetShift) {\n      newOrigin -= offsetShift;\n      newCapacity -= offsetShift;\n    }\n  }\n\n  if (list.__ownerID) {\n    list.size = newCapacity - newOrigin;\n    list._origin = newOrigin;\n    list._capacity = newCapacity;\n    list._level = newLevel;\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n}\n\nfunction getTailOffset(size) {\n  return size < SIZE ? 0 : ((size - 1) >>> SHIFT) << SHIFT;\n}\n\nvar OrderedMap = /*@__PURE__*/(function (Map$$1) {\n  function OrderedMap(value) {\n    return value === null || value === undefined\n      ? emptyOrderedMap()\n      : isOrderedMap(value)\n        ? value\n        : emptyOrderedMap().withMutations(function (map) {\n            var iter = KeyedCollection(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v, k) { return map.set(k, v); });\n          });\n  }\n\n  if ( Map$$1 ) OrderedMap.__proto__ = Map$$1;\n  OrderedMap.prototype = Object.create( Map$$1 && Map$$1.prototype );\n  OrderedMap.prototype.constructor = OrderedMap;\n\n  OrderedMap.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function toString () {\n    return this.__toString('OrderedMap {', '}');\n  };\n\n  // @pragma Access\n\n  OrderedMap.prototype.get = function get (k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  };\n\n  // @pragma Modification\n\n  OrderedMap.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      return this;\n    }\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function set (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function remove (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function wasAltered () {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._list.__iterate(\n      function (entry) { return entry && fn(entry[1], entry[0], this$1); },\n      reverse\n    );\n  };\n\n  OrderedMap.prototype.__iterator = function __iterator (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyOrderedMap();\n      }\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  return OrderedMap;\n}(Map));\n\nOrderedMap.isOrderedMap = isOrderedMap;\n\nOrderedMap.prototype[IS_ORDERED_SYMBOL] = true;\nOrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\nfunction makeOrderedMap(map, list, ownerID, hash) {\n  var omap = Object.create(OrderedMap.prototype);\n  omap.size = map ? map.size : 0;\n  omap._map = map;\n  omap._list = list;\n  omap.__ownerID = ownerID;\n  omap.__hash = hash;\n  return omap;\n}\n\nvar EMPTY_ORDERED_MAP;\nfunction emptyOrderedMap() {\n  return (\n    EMPTY_ORDERED_MAP ||\n    (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()))\n  );\n}\n\nfunction updateOrderedMap(omap, k, v) {\n  var map = omap._map;\n  var list = omap._list;\n  var i = map.get(k);\n  var has = i !== undefined;\n  var newMap;\n  var newList;\n  if (v === NOT_SET) {\n    // removed\n    if (!has) {\n      return omap;\n    }\n    if (list.size >= SIZE && list.size >= map.size * 2) {\n      newList = list.filter(function (entry, idx) { return entry !== undefined && i !== idx; });\n      newMap = newList\n        .toKeyedSeq()\n        .map(function (entry) { return entry[0]; })\n        .flip()\n        .toMap();\n      if (omap.__ownerID) {\n        newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n      }\n    } else {\n      newMap = map.remove(k);\n      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n    }\n  } else if (has) {\n    if (v === list.get(i)[1]) {\n      return omap;\n    }\n    newMap = map;\n    newList = list.set(i, [k, v]);\n  } else {\n    newMap = map.set(k, list.size);\n    newList = list.set(list.size, [k, v]);\n  }\n  if (omap.__ownerID) {\n    omap.size = newMap.size;\n    omap._map = newMap;\n    omap._list = newList;\n    omap.__hash = undefined;\n    return omap;\n  }\n  return makeOrderedMap(newMap, newList);\n}\n\nvar IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';\n\nfunction isStack(maybeStack) {\n  return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);\n}\n\nvar Stack = /*@__PURE__*/(function (IndexedCollection$$1) {\n  function Stack(value) {\n    return value === null || value === undefined\n      ? emptyStack()\n      : isStack(value)\n        ? value\n        : emptyStack().pushAll(value);\n  }\n\n  if ( IndexedCollection$$1 ) Stack.__proto__ = IndexedCollection$$1;\n  Stack.prototype = Object.create( IndexedCollection$$1 && IndexedCollection$$1.prototype );\n  Stack.prototype.constructor = Stack;\n\n  Stack.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function toString () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function get (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function peek () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function push (/*...values*/) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head,\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function pushAll (iter) {\n    iter = IndexedCollection$$1(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head,\n      };\n    }, /* reverse */ true);\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function pop () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection$$1.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(\n        function (v, k) { return fn(v, k, this$1); },\n        reverse\n      );\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function __iterator (type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n\n  return Stack;\n}(IndexedCollection));\n\nStack.isStack = isStack;\n\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\nStackPrototype['@@transducer/step'] = function(result, arr) {\n  return result.unshift(arr);\n};\nStackPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_STACK;\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\n\nvar IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';\n\nfunction isSet(maybeSet) {\n  return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);\n}\n\nfunction isOrderedSet(maybeOrderedSet) {\n  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n}\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (\n    !isCollection(b) ||\n    (a.size !== undefined && b.size !== undefined && a.size !== b.size) ||\n    (a.__hash !== undefined &&\n      b.__hash !== undefined &&\n      a.__hash !== b.__hash) ||\n    isKeyed(a) !== isKeyed(b) ||\n    isIndexed(a) !== isIndexed(b) ||\n    isOrdered(a) !== isOrdered(b)\n  ) {\n    return false;\n  }\n\n  if (a.size === 0 && b.size === 0) {\n    return true;\n  }\n\n  var notAssociative = !isAssociative(a);\n\n  if (isOrdered(a)) {\n    var entries = a.entries();\n    return (\n      b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done\n    );\n  }\n\n  var flipped = false;\n\n  if (a.size === undefined) {\n    if (b.size === undefined) {\n      if (typeof a.cacheResult === 'function') {\n        a.cacheResult();\n      }\n    } else {\n      flipped = true;\n      var _ = a;\n      a = b;\n      b = _;\n    }\n  }\n\n  var allEqual = true;\n  var bSize = b.__iterate(function (v, k) {\n    if (\n      notAssociative\n        ? !a.has(v)\n        : flipped\n          ? !is(v, a.get(k, NOT_SET))\n          : !is(a.get(k, NOT_SET), v)\n    ) {\n      allEqual = false;\n      return false;\n    }\n  });\n\n  return allEqual && a.size === bSize;\n}\n\n/**\n * Contributes additional methods to a constructor\n */\nfunction mixin(ctor, methods) {\n  var keyCopier = function (key) {\n    ctor.prototype[key] = methods[key];\n  };\n  Object.keys(methods).forEach(keyCopier);\n  Object.getOwnPropertySymbols &&\n    Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n  return ctor;\n}\n\nfunction toJS(value) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n  if (!isCollection(value)) {\n    if (!isDataStructure(value)) {\n      return value;\n    }\n    value = Seq(value);\n  }\n  if (isKeyed(value)) {\n    var result$1 = {};\n    value.__iterate(function (v, k) {\n      result$1[k] = toJS(v);\n    });\n    return result$1;\n  }\n  var result = [];\n  value.__iterate(function (v) {\n    result.push(toJS(v));\n  });\n  return result;\n}\n\nvar Set = /*@__PURE__*/(function (SetCollection$$1) {\n  function Set(value) {\n    return value === null || value === undefined\n      ? emptySet()\n      : isSet(value) && !isOrdered(value)\n        ? value\n        : emptySet().withMutations(function (set) {\n            var iter = SetCollection$$1(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v) { return set.add(v); });\n          });\n  }\n\n  if ( SetCollection$$1 ) Set.__proto__ = SetCollection$$1;\n  Set.prototype = Object.create( SetCollection$$1 && SetCollection$$1.prototype );\n  Set.prototype.constructor = Set;\n\n  Set.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  Set.intersect = function intersect (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.intersect.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.union = function union (sets) {\n    sets = Collection(sets).toArray();\n    return sets.length\n      ? SetPrototype.union.apply(Set(sets.pop()), sets)\n      : emptySet();\n  };\n\n  Set.prototype.toString = function toString () {\n    return this.__toString('Set {', '}');\n  };\n\n  // @pragma Access\n\n  Set.prototype.has = function has (value) {\n    return this._map.has(value);\n  };\n\n  // @pragma Modification\n\n  Set.prototype.add = function add (value) {\n    return updateSet(this, this._map.set(value, value));\n  };\n\n  Set.prototype.remove = function remove (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function clear () {\n    return updateSet(this, this._map.clear());\n  };\n\n  // @pragma Composition\n\n  Set.prototype.map = function map (mapper, context) {\n    var this$1 = this;\n\n    var removes = [];\n    var adds = [];\n    this.forEach(function (value) {\n      var mapped = mapper.call(context, value, value, this$1);\n      if (mapped !== value) {\n        removes.push(value);\n        adds.push(mapped);\n      }\n    });\n    return this.withMutations(function (set) {\n      removes.forEach(function (value) { return set.remove(value); });\n      adds.forEach(function (value) { return set.add(value); });\n    });\n  };\n\n  Set.prototype.union = function union () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    iters = iters.filter(function (x) { return x.size !== 0; });\n    if (iters.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetCollection$$1(iters[ii]).forEach(function (value) { return set.add(value); });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function intersect () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection$$1(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (!iters.every(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.subtract = function subtract () {\n    var iters = [], len = arguments.length;\n    while ( len-- ) iters[ len ] = arguments[ len ];\n\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) { return SetCollection$$1(iter); });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (iters.some(function (iter) { return iter.includes(value); })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.sort = function sort (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function sortBy (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function wasAltered () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1 = this;\n\n    return this._map.__iterate(function (k) { return fn(k, k, this$1); }, reverse);\n  };\n\n  Set.prototype.__iterator = function __iterator (type, reverse) {\n    return this._map.__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      if (this.size === 0) {\n        return this.__empty();\n      }\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  };\n\n  return Set;\n}(SetCollection));\n\nSet.isSet = isSet;\n\nvar SetPrototype = Set.prototype;\nSetPrototype[IS_SET_SYMBOL] = true;\nSetPrototype[DELETE] = SetPrototype.remove;\nSetPrototype.merge = SetPrototype.concat = SetPrototype.union;\nSetPrototype.withMutations = withMutations;\nSetPrototype.asImmutable = asImmutable;\nSetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;\nSetPrototype['@@transducer/step'] = function(result, arr) {\n  return result.add(arr);\n};\nSetPrototype['@@transducer/result'] = function(obj) {\n  return obj.asImmutable();\n};\n\nSetPrototype.__empty = emptySet;\nSetPrototype.__make = makeSet;\n\nfunction updateSet(set, newMap) {\n  if (set.__ownerID) {\n    set.size = newMap.size;\n    set._map = newMap;\n    return set;\n  }\n  return newMap === set._map\n    ? set\n    : newMap.size === 0\n      ? set.__empty()\n      : set.__make(newMap);\n}\n\nfunction makeSet(map, ownerID) {\n  var set = Object.create(SetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_SET;\nfunction emptySet() {\n  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n}\n\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\nvar Range = /*@__PURE__*/(function (IndexedSeq$$1) {\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n    if (end === undefined) {\n      end = Infinity;\n    }\n    step = step === undefined ? 1 : Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n\n  if ( IndexedSeq$$1 ) Range.__proto__ = IndexedSeq$$1;\n  Range.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );\n  Range.prototype.constructor = Range;\n\n  Range.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return (\n      'Range [ ' +\n      this._start +\n      '...' +\n      this._end +\n      (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]'\n    );\n  };\n\n  Range.prototype.get = function get (index, notSetValue) {\n    return this.has(index)\n      ? this._start + wrapIndex(this, index) * this._step\n      : notSetValue;\n  };\n\n  Range.prototype.includes = function includes (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return (\n      possibleIndex >= 0 &&\n      possibleIndex < this.size &&\n      possibleIndex === Math.floor(possibleIndex)\n    );\n  };\n\n  Range.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(\n      this.get(begin, this._end),\n      this.get(end, this._end),\n      this._step\n    );\n  };\n\n  Range.prototype.indexOf = function indexOf (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n      value += reverse ? -step : step;\n    }\n    return i;\n  };\n\n  Range.prototype.__iterator = function __iterator (type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n\n  Range.prototype.equals = function equals (other) {\n    return other instanceof Range\n      ? this._start === other._start &&\n          this._end === other._end &&\n          this._step === other._step\n      : deepEqual(this, other);\n  };\n\n  return Range;\n}(IndexedSeq));\n\nvar EMPTY_RANGE;\n\nfunction getIn(collection, searchKeyPath, notSetValue) {\n  var keyPath = coerceKeyPath(searchKeyPath);\n  var i = 0;\n  while (i !== keyPath.length) {\n    collection = get(collection, keyPath[i++], NOT_SET);\n    if (collection === NOT_SET) {\n      return notSetValue;\n    }\n  }\n  return collection;\n}\n\nfunction getIn$1(searchKeyPath, notSetValue) {\n  return getIn(this, searchKeyPath, notSetValue);\n}\n\nfunction hasIn(collection, keyPath) {\n  return getIn(collection, keyPath, NOT_SET) !== NOT_SET;\n}\n\nfunction hasIn$1(searchKeyPath) {\n  return hasIn(this, searchKeyPath);\n}\n\nfunction toObject() {\n  assertNotInfinite(this.size);\n  var object = {};\n  this.__iterate(function (v, k) {\n    object[k] = v;\n  });\n  return object;\n}\n\n// Note: all of these methods are deprecated.\nCollection.isIterable = isCollection;\nCollection.isKeyed = isKeyed;\nCollection.isIndexed = isIndexed;\nCollection.isAssociative = isAssociative;\nCollection.isOrdered = isOrdered;\n\nCollection.Iterator = Iterator;\n\nmixin(Collection, {\n  // ### Conversion to other types\n\n  toArray: function toArray() {\n    assertNotInfinite(this.size);\n    var array = new Array(this.size || 0);\n    var useTuples = isKeyed(this);\n    var i = 0;\n    this.__iterate(function (v, k) {\n      // Keyed collections produce an array of tuples.\n      array[i++] = useTuples ? [k, v] : v;\n    });\n    return array;\n  },\n\n  toIndexedSeq: function toIndexedSeq() {\n    return new ToIndexedSequence(this);\n  },\n\n  toJS: function toJS$1() {\n    return toJS(this);\n  },\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, true);\n  },\n\n  toMap: function toMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return Map(this.toKeyedSeq());\n  },\n\n  toObject: toObject,\n\n  toOrderedMap: function toOrderedMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedMap(this.toKeyedSeq());\n  },\n\n  toOrderedSet: function toOrderedSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSet: function toSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return Set(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toSetSeq: function toSetSeq() {\n    return new ToSetSequence(this);\n  },\n\n  toSeq: function toSeq() {\n    return isIndexed(this)\n      ? this.toIndexedSeq()\n      : isKeyed(this)\n        ? this.toKeyedSeq()\n        : this.toSetSeq();\n  },\n\n  toStack: function toStack() {\n    // Use Late Binding here to solve the circular dependency.\n    return Stack(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  toList: function toList() {\n    // Use Late Binding here to solve the circular dependency.\n    return List(isKeyed(this) ? this.valueSeq() : this);\n  },\n\n  // ### Common JavaScript methods and properties\n\n  toString: function toString() {\n    return '[Collection]';\n  },\n\n  __toString: function __toString(head, tail) {\n    if (this.size === 0) {\n      return head + tail;\n    }\n    return (\n      head +\n      ' ' +\n      this.toSeq()\n        .map(this.__toStringMapper)\n        .join(', ') +\n      ' ' +\n      tail\n    );\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  concat: function concat() {\n    var values = [], len = arguments.length;\n    while ( len-- ) values[ len ] = arguments[ len ];\n\n    return reify(this, concatFactory(this, values));\n  },\n\n  includes: function includes(searchValue) {\n    return this.some(function (value) { return is(value, searchValue); });\n  },\n\n  entries: function entries() {\n    return this.__iterator(ITERATE_ENTRIES);\n  },\n\n  every: function every(predicate, context) {\n    assertNotInfinite(this.size);\n    var returnValue = true;\n    this.__iterate(function (v, k, c) {\n      if (!predicate.call(context, v, k, c)) {\n        returnValue = false;\n        return false;\n      }\n    });\n    return returnValue;\n  },\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, true));\n  },\n\n  find: function find(predicate, context, notSetValue) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[1] : notSetValue;\n  },\n\n  forEach: function forEach(sideEffect, context) {\n    assertNotInfinite(this.size);\n    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n  },\n\n  join: function join(separator) {\n    assertNotInfinite(this.size);\n    separator = separator !== undefined ? '' + separator : ',';\n    var joined = '';\n    var isFirst = true;\n    this.__iterate(function (v) {\n      isFirst ? (isFirst = false) : (joined += separator);\n      joined += v !== null && v !== undefined ? v.toString() : '';\n    });\n    return joined;\n  },\n\n  keys: function keys() {\n    return this.__iterator(ITERATE_KEYS);\n  },\n\n  map: function map(mapper, context) {\n    return reify(this, mapFactory(this, mapper, context));\n  },\n\n  reduce: function reduce$1(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      false\n    );\n  },\n\n  reduceRight: function reduceRight(reducer, initialReduction, context) {\n    return reduce(\n      this,\n      reducer,\n      initialReduction,\n      context,\n      arguments.length < 2,\n      true\n    );\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, true));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, true));\n  },\n\n  some: function some(predicate, context) {\n    return !this.every(not(predicate), context);\n  },\n\n  sort: function sort(comparator) {\n    return reify(this, sortFactory(this, comparator));\n  },\n\n  values: function values() {\n    return this.__iterator(ITERATE_VALUES);\n  },\n\n  // ### More sequential methods\n\n  butLast: function butLast() {\n    return this.slice(0, -1);\n  },\n\n  isEmpty: function isEmpty() {\n    return this.size !== undefined ? this.size === 0 : !this.some(function () { return true; });\n  },\n\n  count: function count(predicate, context) {\n    return ensureSize(\n      predicate ? this.toSeq().filter(predicate, context) : this\n    );\n  },\n\n  countBy: function countBy(grouper, context) {\n    return countByFactory(this, grouper, context);\n  },\n\n  equals: function equals(other) {\n    return deepEqual(this, other);\n  },\n\n  entrySeq: function entrySeq() {\n    var collection = this;\n    if (collection._cache) {\n      // We cache as an entries array, so we can just return the cache!\n      return new ArraySeq(collection._cache);\n    }\n    var entriesSequence = collection\n      .toSeq()\n      .map(entryMapper)\n      .toIndexedSeq();\n    entriesSequence.fromEntrySeq = function () { return collection.toSeq(); };\n    return entriesSequence;\n  },\n\n  filterNot: function filterNot(predicate, context) {\n    return this.filter(not(predicate), context);\n  },\n\n  findEntry: function findEntry(predicate, context, notSetValue) {\n    var found = notSetValue;\n    this.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        found = [k, v];\n        return false;\n      }\n    });\n    return found;\n  },\n\n  findKey: function findKey(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry && entry[0];\n  },\n\n  findLast: function findLast(predicate, context, notSetValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .find(predicate, context, notSetValue);\n  },\n\n  findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .findEntry(predicate, context, notSetValue);\n  },\n\n  findLastKey: function findLastKey(predicate, context) {\n    return this.toKeyedSeq()\n      .reverse()\n      .findKey(predicate, context);\n  },\n\n  first: function first(notSetValue) {\n    return this.find(returnTrue, null, notSetValue);\n  },\n\n  flatMap: function flatMap(mapper, context) {\n    return reify(this, flatMapFactory(this, mapper, context));\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, true));\n  },\n\n  fromEntrySeq: function fromEntrySeq() {\n    return new FromEntriesSequence(this);\n  },\n\n  get: function get(searchKey, notSetValue) {\n    return this.find(function (_, key) { return is(key, searchKey); }, undefined, notSetValue);\n  },\n\n  getIn: getIn$1,\n\n  groupBy: function groupBy(grouper, context) {\n    return groupByFactory(this, grouper, context);\n  },\n\n  has: function has(searchKey) {\n    return this.get(searchKey, NOT_SET) !== NOT_SET;\n  },\n\n  hasIn: hasIn$1,\n\n  isSubset: function isSubset(iter) {\n    iter = typeof iter.includes === 'function' ? iter : Collection(iter);\n    return this.every(function (value) { return iter.includes(value); });\n  },\n\n  isSuperset: function isSuperset(iter) {\n    iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);\n    return iter.isSubset(this);\n  },\n\n  keyOf: function keyOf(searchValue) {\n    return this.findKey(function (value) { return is(value, searchValue); });\n  },\n\n  keySeq: function keySeq() {\n    return this.toSeq()\n      .map(keyMapper)\n      .toIndexedSeq();\n  },\n\n  last: function last(notSetValue) {\n    return this.toSeq()\n      .reverse()\n      .first(notSetValue);\n  },\n\n  lastKeyOf: function lastKeyOf(searchValue) {\n    return this.toKeyedSeq()\n      .reverse()\n      .keyOf(searchValue);\n  },\n\n  max: function max(comparator) {\n    return maxFactory(this, comparator);\n  },\n\n  maxBy: function maxBy(mapper, comparator) {\n    return maxFactory(this, comparator, mapper);\n  },\n\n  min: function min(comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator\n    );\n  },\n\n  minBy: function minBy(mapper, comparator) {\n    return maxFactory(\n      this,\n      comparator ? neg(comparator) : defaultNegComparator,\n      mapper\n    );\n  },\n\n  rest: function rest() {\n    return this.slice(1);\n  },\n\n  skip: function skip(amount) {\n    return amount === 0 ? this : this.slice(Math.max(0, amount));\n  },\n\n  skipLast: function skipLast(amount) {\n    return amount === 0 ? this : this.slice(0, -Math.max(0, amount));\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, true));\n  },\n\n  skipUntil: function skipUntil(predicate, context) {\n    return this.skipWhile(not(predicate), context);\n  },\n\n  sortBy: function sortBy(mapper, comparator) {\n    return reify(this, sortFactory(this, comparator, mapper));\n  },\n\n  take: function take(amount) {\n    return this.slice(0, Math.max(0, amount));\n  },\n\n  takeLast: function takeLast(amount) {\n    return this.slice(-Math.max(0, amount));\n  },\n\n  takeWhile: function takeWhile(predicate, context) {\n    return reify(this, takeWhileFactory(this, predicate, context));\n  },\n\n  takeUntil: function takeUntil(predicate, context) {\n    return this.takeWhile(not(predicate), context);\n  },\n\n  update: function update(fn) {\n    return fn(this);\n  },\n\n  valueSeq: function valueSeq() {\n    return this.toIndexedSeq();\n  },\n\n  // ### Hashable Object\n\n  hashCode: function hashCode() {\n    return this.__hash || (this.__hash = hashCollection(this));\n  },\n\n  // ### Internal\n\n  // abstract __iterate(fn, reverse)\n\n  // abstract __iterator(type, reverse)\n});\n\nvar CollectionPrototype = Collection.prototype;\nCollectionPrototype[IS_COLLECTION_SYMBOL] = true;\nCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;\nCollectionPrototype.toJSON = CollectionPrototype.toArray;\nCollectionPrototype.__toStringMapper = quoteString;\nCollectionPrototype.inspect = CollectionPrototype.toSource = function() {\n  return this.toString();\n};\nCollectionPrototype.chain = CollectionPrototype.flatMap;\nCollectionPrototype.contains = CollectionPrototype.includes;\n\nmixin(KeyedCollection, {\n  // ### More sequential methods\n\n  flip: function flip() {\n    return reify(this, flipFactory(this));\n  },\n\n  mapEntries: function mapEntries(mapper, context) {\n    var this$1 = this;\n\n    var iterations = 0;\n    return reify(\n      this,\n      this.toSeq()\n        .map(function (v, k) { return mapper.call(context, [k, v], iterations++, this$1); })\n        .fromEntrySeq()\n    );\n  },\n\n  mapKeys: function mapKeys(mapper, context) {\n    var this$1 = this;\n\n    return reify(\n      this,\n      this.toSeq()\n        .flip()\n        .map(function (k, v) { return mapper.call(context, k, v, this$1); })\n        .flip()\n    );\n  },\n});\n\nvar KeyedCollectionPrototype = KeyedCollection.prototype;\nKeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;\nKeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;\nKeyedCollectionPrototype.toJSON = toObject;\nKeyedCollectionPrototype.__toStringMapper = function (v, k) { return quoteString(k) + ': ' + quoteString(v); };\n\nmixin(IndexedCollection, {\n  // ### Conversion to other types\n\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, false);\n  },\n\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, false));\n  },\n\n  findIndex: function findIndex(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  indexOf: function indexOf(searchValue) {\n    var key = this.keyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  lastIndexOf: function lastIndexOf(searchValue) {\n    var key = this.lastKeyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, false));\n  },\n\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, false));\n  },\n\n  splice: function splice(index, removeNum /*, ...values*/) {\n    var numArgs = arguments.length;\n    removeNum = Math.max(removeNum || 0, 0);\n    if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n      return this;\n    }\n    // If index is negative, it should resolve relative to the size of the\n    // collection. However size may be expensive to compute if not cached, so\n    // only call count() if the number is in fact negative.\n    index = resolveBegin(index, index < 0 ? this.count() : this.size);\n    var spliced = this.slice(0, index);\n    return reify(\n      this,\n      numArgs === 1\n        ? spliced\n        : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n    );\n  },\n\n  // ### More collection methods\n\n  findLastIndex: function findLastIndex(predicate, context) {\n    var entry = this.findLastEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n\n  first: function first(notSetValue) {\n    return this.get(0, notSetValue);\n  },\n\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, false));\n  },\n\n  get: function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n    return index < 0 ||\n      (this.size === Infinity || (this.size !== undefined && index > this.size))\n      ? notSetValue\n      : this.find(function (_, key) { return key === index; }, undefined, notSetValue);\n  },\n\n  has: function has(index) {\n    index = wrapIndex(this, index);\n    return (\n      index >= 0 &&\n      (this.size !== undefined\n        ? this.size === Infinity || index < this.size\n        : this.indexOf(index) !== -1)\n    );\n  },\n\n  interpose: function interpose(separator) {\n    return reify(this, interposeFactory(this, separator));\n  },\n\n  interleave: function interleave(/*...collections*/) {\n    var collections = [this].concat(arrCopy(arguments));\n    var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);\n    var interleaved = zipped.flatten(true);\n    if (zipped.size) {\n      interleaved.size = zipped.size * collections.length;\n    }\n    return reify(this, interleaved);\n  },\n\n  keySeq: function keySeq() {\n    return Range(0, this.size);\n  },\n\n  last: function last(notSetValue) {\n    return this.get(-1, notSetValue);\n  },\n\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, false));\n  },\n\n  zip: function zip(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections));\n  },\n\n  zipAll: function zipAll(/*, ...collections */) {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections, true));\n  },\n\n  zipWith: function zipWith(zipper /*, ...collections */) {\n    var collections = arrCopy(arguments);\n    collections[0] = this;\n    return reify(this, zipWithFactory(this, zipper, collections));\n  },\n});\n\nvar IndexedCollectionPrototype = IndexedCollection.prototype;\nIndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;\nIndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;\n\nmixin(SetCollection, {\n  // ### ES6 Collection methods (ES6 Array and Map)\n\n  get: function get(value, notSetValue) {\n    return this.has(value) ? value : notSetValue;\n  },\n\n  includes: function includes(value) {\n    return this.has(value);\n  },\n\n  // ### More sequential methods\n\n  keySeq: function keySeq() {\n    return this.valueSeq();\n  },\n});\n\nSetCollection.prototype.has = CollectionPrototype.includes;\nSetCollection.prototype.contains = SetCollection.prototype.includes;\n\n// Mixin subclasses\n\nmixin(KeyedSeq, KeyedCollection.prototype);\nmixin(IndexedSeq, IndexedCollection.prototype);\nmixin(SetSeq, SetCollection.prototype);\n\n// #pragma Helper functions\n\nfunction reduce(collection, reducer, reduction, context, useFirst, reverse) {\n  assertNotInfinite(collection.size);\n  collection.__iterate(function (v, k, c) {\n    if (useFirst) {\n      useFirst = false;\n      reduction = v;\n    } else {\n      reduction = reducer.call(context, reduction, v, k, c);\n    }\n  }, reverse);\n  return reduction;\n}\n\nfunction keyMapper(v, k) {\n  return k;\n}\n\nfunction entryMapper(v, k) {\n  return [k, v];\n}\n\nfunction not(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n\nfunction neg(predicate) {\n  return function() {\n    return -predicate.apply(this, arguments);\n  };\n}\n\nfunction defaultZipper() {\n  return arrCopy(arguments);\n}\n\nfunction defaultNegComparator(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\nfunction hashCollection(collection) {\n  if (collection.size === Infinity) {\n    return 0;\n  }\n  var ordered = isOrdered(collection);\n  var keyed = isKeyed(collection);\n  var h = ordered ? 1 : 0;\n  var size = collection.__iterate(\n    keyed\n      ? ordered\n        ? function (v, k) {\n            h = (31 * h + hashMerge(hash(v), hash(k))) | 0;\n          }\n        : function (v, k) {\n            h = (h + hashMerge(hash(v), hash(k))) | 0;\n          }\n      : ordered\n        ? function (v) {\n            h = (31 * h + hash(v)) | 0;\n          }\n        : function (v) {\n            h = (h + hash(v)) | 0;\n          }\n  );\n  return murmurHashOfSize(size, h);\n}\n\nfunction murmurHashOfSize(size, h) {\n  h = imul(h, 0xcc9e2d51);\n  h = imul((h << 15) | (h >>> -15), 0x1b873593);\n  h = imul((h << 13) | (h >>> -13), 5);\n  h = ((h + 0xe6546b64) | 0) ^ size;\n  h = imul(h ^ (h >>> 16), 0x85ebca6b);\n  h = imul(h ^ (h >>> 13), 0xc2b2ae35);\n  h = smi(h ^ (h >>> 16));\n  return h;\n}\n\nfunction hashMerge(a, b) {\n  return (a ^ (b + 0x9e3779b9 + (a << 6) + (a >> 2))) | 0; // int\n}\n\nvar OrderedSet = /*@__PURE__*/(function (Set$$1) {\n  function OrderedSet(value) {\n    return value === null || value === undefined\n      ? emptyOrderedSet()\n      : isOrderedSet(value)\n        ? value\n        : emptyOrderedSet().withMutations(function (set) {\n            var iter = SetCollection(value);\n            assertNotInfinite(iter.size);\n            iter.forEach(function (v) { return set.add(v); });\n          });\n  }\n\n  if ( Set$$1 ) OrderedSet.__proto__ = Set$$1;\n  OrderedSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  OrderedSet.prototype.constructor = OrderedSet;\n\n  OrderedSet.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function fromKeys (value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function toString () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  return OrderedSet;\n}(Set));\n\nOrderedSet.isOrderedSet = isOrderedSet;\n\nvar OrderedSetPrototype = OrderedSet.prototype;\nOrderedSetPrototype[IS_ORDERED_SYMBOL] = true;\nOrderedSetPrototype.zip = IndexedCollectionPrototype.zip;\nOrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;\n\nOrderedSetPrototype.__empty = emptyOrderedSet;\nOrderedSetPrototype.__make = makeOrderedSet;\n\nfunction makeOrderedSet(map, ownerID) {\n  var set = Object.create(OrderedSetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_ORDERED_SET;\nfunction emptyOrderedSet() {\n  return (\n    EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()))\n  );\n}\n\nvar Record = function Record(defaultValues, name) {\n  var hasInitialized;\n\n  var RecordType = function Record(values) {\n    var this$1 = this;\n\n    if (values instanceof RecordType) {\n      return values;\n    }\n    if (!(this instanceof RecordType)) {\n      return new RecordType(values);\n    }\n    if (!hasInitialized) {\n      hasInitialized = true;\n      var keys = Object.keys(defaultValues);\n      var indices = (RecordTypePrototype._indices = {});\n      // Deprecated: left to attempt not to break any external code which\n      // relies on a ._name property existing on record instances.\n      // Use Record.getDescriptiveName() instead\n      RecordTypePrototype._name = name;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype._defaultValues = defaultValues;\n      for (var i = 0; i < keys.length; i++) {\n        var propName = keys[i];\n        indices[propName] = i;\n        if (RecordTypePrototype[propName]) {\n          /* eslint-disable no-console */\n          typeof console === 'object' &&\n            console.warn &&\n            console.warn(\n              'Cannot define ' +\n                recordName(this) +\n                ' with property \"' +\n                propName +\n                '\" since that property name is part of the Record API.'\n            );\n          /* eslint-enable no-console */\n        } else {\n          setProp(RecordTypePrototype, propName);\n        }\n      }\n    }\n    this.__ownerID = undefined;\n    this._values = List().withMutations(function (l) {\n      l.setSize(this$1._keys.length);\n      KeyedCollection(values).forEach(function (v, k) {\n        l.set(this$1._indices[k], v === this$1._defaultValues[k] ? undefined : v);\n      });\n    });\n  };\n\n  var RecordTypePrototype = (RecordType.prototype = Object.create(\n    RecordPrototype\n  ));\n  RecordTypePrototype.constructor = RecordType;\n\n  if (name) {\n    RecordType.displayName = name;\n  }\n\n  return RecordType;\n};\n\nRecord.prototype.toString = function toString () {\n  var str = recordName(this) + ' { ';\n  var keys = this._keys;\n  var k;\n  for (var i = 0, l = keys.length; i !== l; i++) {\n    k = keys[i];\n    str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));\n  }\n  return str + ' }';\n};\n\nRecord.prototype.equals = function equals (other) {\n  return (\n    this === other ||\n    (other &&\n      this._keys === other._keys &&\n      recordSeq(this).equals(recordSeq(other)))\n  );\n};\n\nRecord.prototype.hashCode = function hashCode () {\n  return recordSeq(this).hashCode();\n};\n\n// @pragma Access\n\nRecord.prototype.has = function has (k) {\n  return this._indices.hasOwnProperty(k);\n};\n\nRecord.prototype.get = function get (k, notSetValue) {\n  if (!this.has(k)) {\n    return notSetValue;\n  }\n  var index = this._indices[k];\n  var value = this._values.get(index);\n  return value === undefined ? this._defaultValues[k] : value;\n};\n\n// @pragma Modification\n\nRecord.prototype.set = function set (k, v) {\n  if (this.has(k)) {\n    var newValues = this._values.set(\n      this._indices[k],\n      v === this._defaultValues[k] ? undefined : v\n    );\n    if (newValues !== this._values && !this.__ownerID) {\n      return makeRecord(this, newValues);\n    }\n  }\n  return this;\n};\n\nRecord.prototype.remove = function remove (k) {\n  return this.set(k);\n};\n\nRecord.prototype.clear = function clear () {\n  var newValues = this._values.clear().setSize(this._keys.length);\n  return this.__ownerID ? this : makeRecord(this, newValues);\n};\n\nRecord.prototype.wasAltered = function wasAltered () {\n  return this._values.wasAltered();\n};\n\nRecord.prototype.toSeq = function toSeq () {\n  return recordSeq(this);\n};\n\nRecord.prototype.toJS = function toJS$1 () {\n  return toJS(this);\n};\n\nRecord.prototype.entries = function entries () {\n  return this.__iterator(ITERATE_ENTRIES);\n};\n\nRecord.prototype.__iterator = function __iterator (type, reverse) {\n  return recordSeq(this).__iterator(type, reverse);\n};\n\nRecord.prototype.__iterate = function __iterate (fn, reverse) {\n  return recordSeq(this).__iterate(fn, reverse);\n};\n\nRecord.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n  if (ownerID === this.__ownerID) {\n    return this;\n  }\n  var newValues = this._values.__ensureOwner(ownerID);\n  if (!ownerID) {\n    this.__ownerID = ownerID;\n    this._values = newValues;\n    return this;\n  }\n  return makeRecord(this, newValues, ownerID);\n};\n\nRecord.isRecord = isRecord;\nRecord.getDescriptiveName = recordName;\nvar RecordPrototype = Record.prototype;\nRecordPrototype[IS_RECORD_SYMBOL] = true;\nRecordPrototype[DELETE] = RecordPrototype.remove;\nRecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;\nRecordPrototype.getIn = getIn$1;\nRecordPrototype.hasIn = CollectionPrototype.hasIn;\nRecordPrototype.merge = merge;\nRecordPrototype.mergeWith = mergeWith;\nRecordPrototype.mergeIn = mergeIn;\nRecordPrototype.mergeDeep = mergeDeep$1;\nRecordPrototype.mergeDeepWith = mergeDeepWith$1;\nRecordPrototype.mergeDeepIn = mergeDeepIn;\nRecordPrototype.setIn = setIn$1;\nRecordPrototype.update = update$1;\nRecordPrototype.updateIn = updateIn$1;\nRecordPrototype.withMutations = withMutations;\nRecordPrototype.asMutable = asMutable;\nRecordPrototype.asImmutable = asImmutable;\nRecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;\nRecordPrototype.toJSON = RecordPrototype.toObject =\n  CollectionPrototype.toObject;\nRecordPrototype.inspect = RecordPrototype.toSource = function() {\n  return this.toString();\n};\n\nfunction makeRecord(likeRecord, values, ownerID) {\n  var record = Object.create(Object.getPrototypeOf(likeRecord));\n  record._values = values;\n  record.__ownerID = ownerID;\n  return record;\n}\n\nfunction recordName(record) {\n  return record.constructor.displayName || record.constructor.name || 'Record';\n}\n\nfunction recordSeq(record) {\n  return keyedSeqFromValue(record._keys.map(function (k) { return [k, record.get(k)]; }));\n}\n\nfunction setProp(prototype, name) {\n  try {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      },\n    });\n  } catch (error) {\n    // Object.defineProperty failed. Probably IE8.\n  }\n}\n\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\nvar Repeat = /*@__PURE__*/(function (IndexedSeq$$1) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  if ( IndexedSeq$$1 ) Repeat.__proto__ = IndexedSeq$$1;\n  Repeat.prototype = Object.create( IndexedSeq$$1 && IndexedSeq$$1.prototype );\n  Repeat.prototype.constructor = Repeat;\n\n  Repeat.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function includes (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size)\n      ? this\n      : new Repeat(\n          this._value,\n          resolveEnd(end, size) - resolveBegin(begin, size)\n        );\n  };\n\n  Repeat.prototype.reverse = function reverse () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function indexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var i = 0;\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  Repeat.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1 = this;\n\n    var size = this.size;\n    var i = 0;\n    return new Iterator(\n      function () { return i === size\n          ? iteratorDone()\n          : iteratorValue(type, reverse ? size - ++i : i++, this$1._value); }\n    );\n  };\n\n  Repeat.prototype.equals = function equals (other) {\n    return other instanceof Repeat\n      ? is(this._value, other._value)\n      : deepEqual(other);\n  };\n\n  return Repeat;\n}(IndexedSeq));\n\nvar EMPTY_REPEAT;\n\nfunction fromJS(value, converter) {\n  return fromJSWith(\n    [],\n    converter || defaultConverter,\n    value,\n    '',\n    converter && converter.length > 2 ? [] : undefined,\n    { '': value }\n  );\n}\n\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  var toSeq = Array.isArray(value)\n    ? IndexedSeq\n    : isPlainObj(value)\n      ? KeyedSeq\n      : null;\n  if (toSeq) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(\n      parentValue,\n      key,\n      toSeq(value).map(function (v, k) { return fromJSWith(stack, converter, v, k, keyPath, value); }\n      ),\n      keyPath && keyPath.slice()\n    );\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n  return value;\n}\n\nfunction defaultConverter(k, v) {\n  return isKeyed(v) ? v.toMap() : v.toList();\n}\n\nvar version = \"4.0.0-rc.11\";\n\nvar Immutable = {\n  version: version,\n\n  Collection: Collection,\n  // Note: Iterable is deprecated\n  Iterable: Collection,\n\n  Seq: Seq,\n  Map: Map,\n  OrderedMap: OrderedMap,\n  List: List,\n  Stack: Stack,\n  Set: Set,\n  OrderedSet: OrderedSet,\n\n  Record: Record,\n  Range: Range,\n  Repeat: Repeat,\n\n  is: is,\n  fromJS: fromJS,\n  hash: hash,\n\n  isImmutable: isImmutable,\n  isCollection: isCollection,\n  isKeyed: isKeyed,\n  isIndexed: isIndexed,\n  isAssociative: isAssociative,\n  isOrdered: isOrdered,\n  isValueObject: isValueObject,\n  isSeq: isSeq,\n  isList: isList,\n  isMap: isMap,\n  isOrderedMap: isOrderedMap,\n  isStack: isStack,\n  isSet: isSet,\n  isOrderedSet: isOrderedSet,\n  isRecord: isRecord,\n\n  get: get,\n  getIn: getIn,\n  has: has,\n  hasIn: hasIn,\n  merge: merge$1,\n  mergeDeep: mergeDeep,\n  mergeWith: mergeWith$1,\n  mergeDeepWith: mergeDeepWith,\n  remove: remove,\n  removeIn: removeIn,\n  set: set,\n  setIn: setIn,\n  update: update,\n  updateIn: updateIn,\n};\n\n// Note: Iterable is deprecated\nvar Iterable = Collection;\n\nexport default Immutable;\nexport { version, Collection, Iterable, Seq, Map, OrderedMap, List, Stack, Set, OrderedSet, Record, Range, Repeat, is, fromJS, hash, isImmutable, isCollection, isKeyed, isIndexed, isAssociative, isOrdered, isValueObject, get, getIn, has, hasIn, merge$1 as merge, mergeDeep, mergeWith$1 as mergeWith, mergeDeepWith, remove, removeIn, set, setIn, update, updateIn };\n"]},"metadata":{},"sourceType":"module"}