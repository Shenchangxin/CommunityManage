[{"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\index.js":"1","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\App.js":"2","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\store\\index.js":"3","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\admin\\index.js":"4","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\store\\reducer.js":"5","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\common\\header\\store\\index.js":"6","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\common\\header\\index.js":"7","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\common\\footer\\index.js":"8","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\components\\NavLeft\\menuConfig.js":"9","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\utils\\utils.js":"10","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\axios\\index.js":"11","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\home\\index.js":"12","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\router.js":"13","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\index.js":"14","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\nomatch\\index.js":"15","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\actionCreators.js":"16","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\index.js":"17","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\constants.js":"18","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\reducer.js":"19","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\index.js":"20","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\index\\index.js":"21","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\index.js":"22","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\reducer.js":"23","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\actionCreators.js":"24","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\constants.js":"25","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\community\\index.js":"26","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\components\\NavLeft\\index.js":"27","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\utils\\AuthToken.js":"28","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\user\\index.js":"29","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\activity\\index.js":"30"},{"size":220,"mtime":1620807986000,"results":"31","hashOfConfig":"32"},{"size":629,"mtime":1622288016000,"results":"33","hashOfConfig":"32"},{"size":323,"mtime":1620283562000,"results":"34","hashOfConfig":"32"},{"size":853,"mtime":1625535308000,"results":"35","hashOfConfig":"32"},{"size":313,"mtime":1625013824000,"results":"36","hashOfConfig":"32"},{"size":0,"mtime":1620285813884,"results":"37","hashOfConfig":"38"},{"size":2304,"mtime":1625013782000,"results":"39","hashOfConfig":"32"},{"size":213,"mtime":1620737656000,"results":"40","hashOfConfig":"32"},{"size":1280,"mtime":1620810995524,"results":"41","hashOfConfig":"42"},{"size":258,"mtime":1620732998000,"results":"43","hashOfConfig":"32"},{"size":469,"mtime":1622104994000,"results":"44","hashOfConfig":"32"},{"size":281,"mtime":1620738167845,"results":"45","hashOfConfig":"42"},{"size":1637,"mtime":1625536512000,"results":"46","hashOfConfig":"32"},{"size":3162,"mtime":1622289662000,"results":"47","hashOfConfig":"32"},{"size":255,"mtime":1620806842487,"results":"48","hashOfConfig":"42"},{"size":1080,"mtime":1622290970000,"results":"49","hashOfConfig":"32"},{"size":175,"mtime":1621069106000,"results":"50","hashOfConfig":"32"},{"size":158,"mtime":1621070378000,"results":"51","hashOfConfig":"32"},{"size":896,"mtime":1622291024000,"results":"52","hashOfConfig":"32"},{"size":6544,"mtime":1622287612000,"results":"53","hashOfConfig":"32"},{"size":1332,"mtime":1625531382000,"results":"54","hashOfConfig":"32"},{"size":175,"mtime":1621318924000,"results":"55","hashOfConfig":"32"},{"size":769,"mtime":1622287612000,"results":"56","hashOfConfig":"32"},{"size":659,"mtime":1622211412000,"results":"57","hashOfConfig":"32"},{"size":183,"mtime":1621475746000,"results":"58","hashOfConfig":"32"},{"size":11687,"mtime":1625018540000,"results":"59","hashOfConfig":"32"},{"size":1033,"mtime":1625536468000,"results":"60","hashOfConfig":"32"},{"size":362,"mtime":1622287212000,"results":"61","hashOfConfig":"32"},{"size":15263,"mtime":1622710126000,"results":"62","hashOfConfig":"32"},{"size":11116,"mtime":1625539506000,"results":"63","hashOfConfig":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vnj0iy",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eoonpv",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"1s7g1c",{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\App.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\store\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\admin\\index.js",["136"],"import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Row, Col} from 'antd';\r\nimport Header from \"../../common/header\";\r\nimport Footer from \"../../common/footer\";\r\nimport NavLeft from \"../../components/NavLeft\";\r\nimport './common.less'\r\n\r\nclass Admin extends Component {\r\n    render() {\r\n        return (\r\n            <Row className=\"container\">\r\n                <Col span=\"4\" className=\"nav-left\">\r\n                    <NavLeft/>\r\n                </Col>\r\n                <Col span=\"20\" className=\"main\">\r\n                    <Header/>\r\n                    <Row className=\"content\">\r\n                        {/*<Home/>*/}\r\n                        {this.props.children}\r\n\r\n                    </Row>\r\n                    <Footer/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Admin;","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\store\\reducer.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\common\\header\\store\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\common\\header\\index.js",["137"],"import React from 'react';\r\nimport {Col, Row} from \"antd\";\r\nimport './index.less';\r\nimport Util from '../../utils/utils';\r\nimport axios from '../../axios';\r\nimport {connect} from \"react-redux\";\r\n\r\n class Header extends React.Component {\r\n     state = {\r\n         sysTime:'',\r\n\r\n     }\r\n    componentWillMount() {\r\n\r\n        setInterval(()=>{\r\n            let sysTime = Util.formatDate(new Date().getTime());\r\n            this.setState({\r\n                sysTime\r\n            })\r\n        },1000)\r\n        this.getWeatherAPIData();\r\n    }\r\n    getWeatherAPIData(){\r\n        let city = '北京';\r\n        axios.jsonp({\r\n            url:'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=JSON&ak=wUsSS1dGc3l3EmpgE4KLHweCUY3uIeR9'\r\n        }).then((res) => {\r\n\r\n            if (res.status === 'success'){\r\n                let data = res.results[0].weather_data[0];\r\n                this.setState({\r\n                    dayPictureUrl: data.dayPictureUrl,\r\n                    weather: data.weather\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <Row className=\"header-top\">\r\n                    <Col span=\"24\">\r\n                        <span>欢迎，{this.props.username}</span>\r\n                        <a href=\"#\">退出</a>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"breadcrumb\">\r\n                    <Col span=\"4\" className=\"breadcrumb-title\">\r\n                        首页\r\n                    </Col>\r\n                    <Col span=\"20\" className=\"weather\">\r\n                        <span className=\"date\">{this.state.sysTime}</span>\r\n                        <span className=\"weather-img\">\r\n                            <img src={this.state.dayPictureUrl} alt=\"\"/>\r\n                        </span>\r\n                        <span className=\"weather-detail\">\r\n                            {this.state.weather}\r\n                        </span>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapState = (state) => ({\r\n    username: state.getIn(['login','username']),\r\n\r\n});\r\nconst mapDispatch = (dispatch) => ({\r\n\r\n})\r\nexport default connect(mapState,mapDispatch)(Header);","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\common\\footer\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\components\\NavLeft\\menuConfig.js",["138"],"export default    [\r\n    {\r\n        title: '首页',\r\n        key: 'admin/home'\r\n    },\r\n    {\r\n        title: '社团管理',\r\n        key: 'admin/community',\r\n        children: [\r\n            {\r\n                title: '添加社团',\r\n                key: 'admin/community/addCommunity'\r\n            },\r\n            {\r\n                title: '删除社团',\r\n                key: 'admin/community/deleteCommunity'\r\n            },\r\n            {\r\n                title: '修改社团',\r\n                key: 'admin/community/updateCommunity'\r\n            },\r\n            {\r\n                title: '查找社团',\r\n                key: 'admin/community/findCommunity'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '用户管理',\r\n        key: 'admin/user',\r\n        children:[\r\n            {\r\n                title: '添加用户',\r\n                key: 'admin/user/addUser'\r\n            },\r\n            {\r\n                title: '删除用户',\r\n                key: 'admin/user/deleteUser'\r\n            },\r\n            {\r\n                title: '修改用户',\r\n                key: 'admin/user/updateUser'\r\n            },\r\n            {\r\n                title: '查找用户',\r\n                key: 'admin/user/findUser'\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n\r\n",["139","140"],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\utils\\utils.js",["141"],"export default {\r\n    formatDate(time){\r\n        if(!time) return '';\r\n        let date = new Date(time);\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\r\n    }\r\n}","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\axios\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\home\\index.js",[],["142","143"],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\router.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\nomatch\\index.js",[],["144","145"],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\actionCreators.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\constants.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\login\\store\\reducer.js",["146"],"import { fromJS } from 'immutable';\r\nimport * as constants from './constants';\r\n\r\nconst defaultState = fromJS ({\r\n    user:{},\r\n    username: '河畔一角',\r\n    roles:[],\r\n    loginState: false,\r\n    message:''\r\n});\r\n\r\nconst loginSuccess =(state,action)=>{\r\n    return state.merge({\r\n        'user': action.user,\r\n        'loginState': action.loginState,\r\n        'username': action.user.sub,\r\n        'roles': action.roles\r\n    });\r\n}\r\nconst loginError =(state,action)=>{\r\n    return state.merge({\r\n        'loginState': action.loginState,\r\n        'message': action.message\r\n    });\r\n}\r\n\r\nexport default (state = defaultState,action) => {\r\n    switch (action.type) {\r\n        case constants.LOGIN_SUCCESS:\r\n            return loginSuccess(state,action)\r\n        case constants.LOGIN_ERROR:\r\n            return loginError(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\index\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\reducer.js",["147"],"import { fromJS } from 'immutable';\r\nimport * as constants from './constants';\r\n\r\nconst defaultState = fromJS ({\r\n    registerState: false,\r\n    message:''\r\n});\r\n\r\nconst registerSuccess =(state,action)=>{\r\n    return state.merge({\r\n        'registerState': action.registerState\r\n    });\r\n}\r\nconst registerError =(state,action)=>{\r\n    return state.merge({\r\n        'registerState': action.registerState,\r\n        'message': action.message\r\n    });\r\n}\r\n\r\nexport default (state = defaultState,action) => {\r\n    switch (action.type) {\r\n        case constants.REGISTER_SUCCESS:\r\n            return registerSuccess(state,action)\r\n        case constants.REGISTER_ERROR:\r\n            return registerError(state, action)\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\actionCreators.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\register\\store\\constants.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\community\\index.js",["148"],"import React, {Component} from 'react';\r\nimport {Table, Tag, Space, Form, Row, Col, Input, Button, Modal, Select, Card, message} from 'antd';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PlusSquareOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nclass Community extends Component {\r\n\r\n    state = {\r\n        data:[],\r\n        getState: false,\r\n        message: '',\r\n        visible: false,\r\n        loading: false,\r\n        deleteState: false,\r\n        updateVisible: false,\r\n        updateState: false,\r\n        updateId: 0\r\n\r\n    };\r\n\r\n    handleSearch = (values) => {\r\n        axios.get('/api/admin/searchCommunity',{\r\n            params: values\r\n        }).then((res)=>{\r\n            const result = res.data.data;\r\n            this.setState({\r\n                data: result,\r\n            });\r\n            message.success(\"操作成功\")\r\n        }).catch(error=>{\r\n            message.error(\"查询失败\"+error)\r\n        })\r\n    };\r\n\r\n    getCommunity(){\r\n        axios.get('/api/admin/getCommunity').then((res) => {\r\n            const result = res.data.data;\r\n            this.setState({\r\n                data: result,\r\n            })\r\n        }).catch(err => {\r\n            message.error(\"获取用户列表失败\"+err);\r\n        });\r\n    };\r\n\r\n    handleShowModal= () => {\r\n        this.setState({\r\n            visible: true,\r\n        })\r\n    };\r\n    handleCancel= () =>{\r\n        this.setState({\r\n            visible: false,\r\n        })\r\n    };\r\n    handleAddCommunity = (value) =>{\r\n        axios.post('/api/admin/addCommunity',value,{\r\n            contentType: \"application/json charset=utf-8\",\r\n        }).then((res =>{\r\n            this.setState({\r\n                visible: false,\r\n            })\r\n        })).catch(error => {\r\n            message.error(\"添加用户失败\"+error);\r\n        })\r\n    };\r\n    handleUpdate= (id) =>{\r\n        this.setState({\r\n            updateId: id,\r\n            updateVisible: true,\r\n        })\r\n    };\r\n    handleDelete= (id) =>{\r\n\r\n        axios.delete('/api/admin/deleteCommunity',{\r\n            params: {\r\n                'id':id,\r\n            }\r\n        }).then((res) => {\r\n            message.success(\"删除成功\");\r\n        }).catch(error => {\r\n            message.error(\"删除失败\"+error);\r\n        })\r\n    };\r\n    handleCancelUpdate= () =>{\r\n        this.setState({\r\n            updateVisible: false,\r\n        })\r\n    };\r\n    handleUpdateCommunity=(values,id)=>{\r\n        console.log(id);\r\n        axios.post('/api/admin/updateCommunity',qs.stringify({\r\n            name: values.name,\r\n            description: values.description,\r\n            type: values.type,\r\n            id: id\r\n\r\n        })).then((res) => {\r\n            this.setState({\r\n                updateVisible: false\r\n            });\r\n            message.success(\"操作成功\");\r\n        }).catch(error => {\r\n            message.error(\"操作失败\"+error);\r\n        })\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        this.getCommunity();\r\n        console.log(this.state.data)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                title: '社团名称',\r\n                dataIndex: 'name',\r\n                key: 'id',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '社团类型',\r\n                dataIndex:'type',\r\n                key: 'id',\r\n                render: (type) => (\r\n                    <Tag color={\"green\"} key={type}>{type.name}</Tag>\r\n                ),\r\n            },\r\n\r\n\r\n            {\r\n\r\n                title: '操作',\r\n                key: 'id',\r\n                render: (text,record) => (\r\n\r\n                    <Space size=\"middle\">\r\n                        <Button onClick={()=> handleUpdate(record.id-1)}>修改</Button>\r\n                        <Button onClick={()=> handleDelete(record.id)}>删除</Button>\r\n                    </Space>\r\n\r\n                ),\r\n            },\r\n        ];\r\n\r\n\r\n        const {updateId} = this.state;\r\n        const {handleSearch,handleShowModal,handleAddCommunity,handleUpdate,handleCancel,handleDelete,handleCancelUpdate,handleUpdateCommunity} = this;\r\n        if(this.state.deleteState){return <Redirect to=\"/admin/community\"/>}\r\n        return(\r\n            <div className=\"communityList\">\r\n\r\n                <Card style={{width: 1240}}>\r\n                <Form\r\n\r\n                    name=\"advanced_search\"\r\n                    className=\"ant-advanced-search-form\"\r\n                >\r\n                    <Row type=\"flex\"  align=\"middle\" style={{marginBottom:10}}>\r\n\r\n                        <Col>\r\n                            <Form layout=\"inline\"  ref=\"searchForm\">\r\n                                <Form.Item label={\"社团名\"}  name=\"fields\">\r\n                                    <Input  />\r\n                                </Form.Item>\r\n                                <Form.Item style={{float:\"right\"}}>\r\n                                    <Button  type=\"primary\" onClick={()=>handleSearch(this.refs.searchForm.getFieldValue())} style={{marginRight:\"10px\"}}>查找</Button>\r\n                                    <Button  type=\"default\"  onClick={()=>handleShowModal()}><PlusSquareOutlined />添加社团</Button>\r\n\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n\r\n\r\n                <Table\r\n                    columns={columns}\r\n                    pagination={{ pageSize:6, position: [ 'bottomCenter'] }}\r\n                    dataSource={this.state.data}\r\n                />\r\n                </Card>\r\n\r\n                <Modal\r\n                    visible={this.state.visible}\r\n                    destroyOnClose={true}\r\n                    title=\"添加社团\"\r\n                    onOk={()=>handleAddCommunity()}\r\n                    onCancel={()=>handleCancel()}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={()=>handleCancel()}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.loading} onClick={()=>handleAddCommunity(this.refs.communityForm.getFieldValue())}>\r\n                            确定\r\n                        </Button>,\r\n\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        name=\"addCommunity\"\r\n                        ref=\"communityForm\"\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"社团名称\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入所要添加的社团的名字!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"description\"\r\n                            label=\"社团简介\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写社团简介!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"type\"\r\n                            label=\"社团类型\"\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择社团类型!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select placeholder=\"请选择社团类型\">\r\n                                <Option value=\"文体类\">文体类</Option>\r\n                                <Option value=\"艺术类\">艺术类</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    visible={this.state.updateVisible}\r\n                    destroyOnClose={true}\r\n                    title=\"修改社团\"\r\n                    onOk={()=>handleUpdateCommunity()}\r\n                    onCancel={()=>handleCancelUpdate()}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={()=>handleCancelUpdate()}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.state.loading} onClick={()=>handleUpdateCommunity(this.refs.communityForm.getFieldValue(),updateId+1)}>\r\n                            确定\r\n                        </Button>,\r\n\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        name=\"updateCommunity\"\r\n                        ref=\"communityForm\"\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"社团名称\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入所要添加的社团的名字!',\r\n                                },\r\n                            ]}\r\n                        >\r\n\r\n                            {/*<Input defaultValue={this.props.data[updateId].name}/>*/}\r\n                            <Input defaultValue=\"大学生心里社团\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"description\"\r\n                            label=\"社团简介\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写社团简介!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            {/*<Input defaultValue={this.props.data[updateId].description}/>*/}\r\n                            <Input defaultValue=\"我是大学生心里社团\"/>\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"type\"\r\n                            label=\"社团类型\"\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择社团类型!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select placeholder=\"请选择社团类型\" defaultValue=\"文体类\">\r\n                                <Option value=\"文体类\">文体类</Option>\r\n                                <Option value=\"艺术类\">艺术类</Option>\r\n                                <Option value=\"体育类\">体育类</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Community;\r\n","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\components\\NavLeft\\index.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\utils\\AuthToken.js",[],"D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\user\\index.js",["149","150","151"],"import React,{Component}from 'react';\r\nimport {Button, Card, Col, Form, Input, Modal, Row, Select, Space, Table,message, Tag} from \"antd\";\r\nimport {PlusSquareOutlined} from \"@ant-design/icons\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst { Option } = Select;\r\nclass User extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        visible: false,\r\n        loading:false,\r\n        deleteState:false,\r\n        updateVisible:false,\r\n        updateState:false,\r\n        updateId: 0\r\n    };\r\n    componentWillMount() {\r\n        this.getUsers();\r\n        console.log(this.state.data);\r\n    }\r\n\r\n    handleSearch= (values) => {\r\n        axios.get('/api/admin/searchUser',{\r\n            params: values\r\n        }).then((res)=>{\r\n            const result = res.data.data;\r\n            this.setState({\r\n                data: result,\r\n            });\r\n            message.success(\"操作成功\")\r\n        }).catch(error=>{\r\n            message.error(\"查询失败\"+error)\r\n        })\r\n    };\r\n    getUsers(){\r\n        axios.get('/api/admin/getUser').then((res) => {\r\n            const result = res.data.data;\r\n            this.setState({\r\n                data: result,\r\n            })\r\n        }).catch(err => {\r\n            message.error(\"获取用户列表失败\"+err);\r\n        });\r\n    };\r\n    handleShowModal= () => {\r\n        this.setState({\r\n            visible: true,\r\n        })\r\n    };\r\n    handleCancel= () =>{\r\n        this.setState({\r\n            visible: false,\r\n        })\r\n    };\r\n    handleAddUser = (value) =>{\r\n        axios.post('/api/admin/addUser',value,{\r\n            contentType: \"application/json charset=utf-8\",\r\n        }).then((res =>{\r\n                this.setState({\r\n                    visible: false,\r\n                })\r\n        })).catch(error => {\r\n                message.error(\"添加用户失败\"+error);\r\n        })\r\n    };\r\n    handleUpdate= (id) =>{\r\n        this.setState({\r\n            updateId: id,\r\n            updateVisible: true,\r\n        })\r\n    };\r\n    handleDelete= (id) =>{\r\n\r\n        axios.delete('/api/admin/deleteUser',{\r\n            params: {\r\n                'id':id,\r\n            }\r\n        }).then((res) => {\r\n            message.success(\"删除成功\");\r\n        }).catch(error => {\r\n            message.error(\"删除失败\"+error);\r\n        })\r\n    };\r\n    handleCancelUpdate= () =>{\r\n        this.setState({\r\n            updateVisible: false,\r\n        })\r\n    };\r\n    handleUpdateUser=(value,id)=>{\r\n        axios.post('/api/admin/updateUser',qs.stringify({\r\n            user: value,\r\n            id: id,\r\n        })).then((res) => {\r\n            this.setState({\r\n                updateVisible: false\r\n            });\r\n            message.success(\"操作成功\");\r\n        }).catch(error => {\r\n            message.error(\"操作失败\"+error);\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const columns = [\r\n            {\r\n                title: '成员名称',\r\n                dataIndex: 'name',\r\n                key: 'id',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '所属院系',\r\n                dataIndex:'department',\r\n                key: 'id',\r\n                render: (department) => (\r\n                    <Tag color={\"green\"} key={department}>{department}</Tag>\r\n                ),\r\n            },\r\n\r\n            {\r\n                title: '联系电话',\r\n                dataIndex:'phone',\r\n                key: 'id',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n\r\n            {\r\n                title: '年级',\r\n                dataIndex:'grade',\r\n                key: 'id',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n\r\n            {\r\n\r\n                title: '操作',\r\n                key: 'id',\r\n                render: (text,record) => (\r\n\r\n                    <Space size=\"middle\">\r\n                        <Button onClick={()=> handleUpdate(record.id-1)}>修改</Button>\r\n                        <Button onClick={()=> handleDelete(record.id)}>删除</Button>\r\n                    </Space>\r\n\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const {handleSearch,handleShowModal,handleAddUser,handleUpdate,handleCancel,handleDelete,handleCancelUpdate,handleUpdateUser} = this;\r\n        if(this.props.deleteState){return <Redirect to=\"/admin/user\"/>}\r\n        return(\r\n            <div className=\"userList\">\r\n\r\n                <Card style={{width: 1227}}>\r\n                    <Form\r\n                        name=\"advanced_search\"\r\n                        className=\"ant-advanced-search-form\"\r\n                    >\r\n                        <Row type=\"flex\"  align=\"middle\" style={{marginBottom:10}}>\r\n\r\n                            <Col>\r\n                                <Form layout=\"inline\"  ref=\"searchForm\">\r\n                                    <Form.Item label={\"用户名\"}  name=\"fields\">\r\n                                        <Input  />\r\n                                    </Form.Item>\r\n                                    <Form.Item style={{float:\"right\"}}>\r\n                                        <Button  type=\"primary\" onClick={()=>handleSearch(this.refs.searchForm.getFieldValue())} style={{marginRight:\"10px\"}}>查找</Button>\r\n                                        <Button  type=\"default\"  onClick={()=>handleShowModal()}><PlusSquareOutlined />添加用户</Button>\r\n\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n\r\n\r\n                    <Table\r\n                        columns={columns}\r\n                        pagination={{ pageSize:6, position: [ 'bottomCenter'] }}\r\n                        dataSource={this.state.data}\r\n                        rowKey={(record) => {\r\n                            return (record.id + Date.now()) //在这里加上一个时间戳就可以了\r\n                        }}\r\n                    />\r\n                </Card>\r\n\r\n                <Modal\r\n                    visible={this.state.visible}\r\n                    destroyOnClose={true}\r\n                    title=\"添加用户\"\r\n                    onOk={()=>handleAddUser()}\r\n                    onCancel={()=>handleCancel()}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={()=>handleCancel()}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.props.loading} onClick={()=>handleAddUser(this.refs.userForm.getFieldValue())}>\r\n                            确定\r\n                        </Button>,\r\n\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        name=\"addUser\"\r\n                        ref=\"userForm\"\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            label=\"用户名\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入所要添加的用户名!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            label=\"用户密码\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写用户密码!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"用户姓名\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写用户姓名!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"phone\"\r\n                            label=\"联系电话\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写联系电话!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"sex\"\r\n                            label=\"性别\"\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择性别!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select placeholder=\"请选择性别\">\r\n                                <Option value=\"男\">男</Option>\r\n                                <Option value=\"女\">女</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"department\"\r\n                            label=\"所属院系\"\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择所属院系!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select placeholder=\"请选择所属院系\">\r\n                                <Option value=\"智能工程学院计算机与科学系\">智能工程学院计算机与科学系</Option>\r\n                                <Option value=\"智能工程学院软件工程系\">智能工程学院软件工程系</Option>\r\n                                <Option value=\"智能工程学院网络工程系\">智能工程学院网络工程系</Option>\r\n                                <Option value=\"智能工程学院物联网工程系\">智能工程学院物联网工程系</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"grade\"\r\n                            label=\"年级\"\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择年级!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select placeholder=\"请选择年级\">\r\n                                <Option value=\"大一\">大一</Option>\r\n                                <Option value=\"大二\">大二</Option>\r\n                                <Option value=\"大三\">大三</Option>\r\n                                <Option value=\"大四\">大四</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    visible={this.state.updateVisible}\r\n                    destroyOnClose={true}\r\n                    title=\"修改用户\"\r\n                    onOk={()=>handleUpdateUser()}\r\n                    onCancel={()=>handleCancelUpdate()}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={()=>handleCancelUpdate()}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.props.loading} onClick={()=>handleUpdateUser(this.refs.userForm.getFieldValue(),this.state.updateId)}>\r\n                            确定\r\n                        </Button>,\r\n\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        name=\"updateUser\"\r\n                        ref=\"userForm\"\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            label=\"用户名\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入所要添加的用户名!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input defaultValue=\"admin\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            label=\"用户密码\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写用户密码!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"用户姓名\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写用户姓名!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item\r\n                            name=\"grade\"\r\n                            label=\"年级\"\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择年级!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Select placeholder=\"请选择年级\" defaultValue=\"大一\">\r\n                                <Option value=\"大一\">大一</Option>\r\n                                <Option value=\"大二\">大二</Option>\r\n                                <Option value=\"大三\">大三</Option>\r\n                                <Option value=\"大四\">大四</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default User;","D:\\IDEA workspace\\ZUA\\community-manage-react\\src\\pages\\activity\\index.js",["152","153","154"],"import React,{Component}from 'react';\r\nimport {Button, Card, Col, Form, Input, Modal, Row, Select, Space, Table,message, Tag} from \"antd\";\r\nimport {PlusSquareOutlined} from \"@ant-design/icons\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nconst { Option } = Select;\r\nclass Activity extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        visible: false,\r\n        loading:false,\r\n        deleteState:false,\r\n        updateVisible:false,\r\n        updateState:false,\r\n        updateId: 0\r\n    };\r\n    componentWillMount() {\r\n        this.getActivity();\r\n        console.log(this.state.data);\r\n    }\r\n\r\n    handleSearch= (values) => {\r\n        axios.get('/api/activity/searchActivity',{\r\n            params: values\r\n        }).then((res)=>{\r\n            const result = res.data.data;\r\n            this.setState({\r\n                data: result,\r\n            });\r\n            message.success(\"操作成功\")\r\n        }).catch(error=>{\r\n            message.error(\"查询失败\"+error)\r\n        })\r\n    };\r\n    getActivity(){\r\n        axios.get('/api/activity/getActivity').then((res) => {\r\n            const result = res.data.data;\r\n            this.setState({\r\n                data: result,\r\n            })\r\n        }).catch(err => {\r\n            message.error(\"获取用户列表失败\"+err);\r\n        });\r\n    };\r\n    handleShowModal= () => {\r\n        this.setState({\r\n            visible: true,\r\n        })\r\n    };\r\n    handleCancel= () =>{\r\n        this.setState({\r\n            visible: false,\r\n        })\r\n    };\r\n    handleAddActivity = (value) =>{\r\n        axios.post('/api/activity/addActivity',value,{\r\n            contentType: \"application/json charset=utf-8\",\r\n        }).then((res =>{\r\n            this.setState({\r\n                visible: false,\r\n            })\r\n        })).catch(error => {\r\n            message.error(\"添加用户失败\"+error);\r\n        })\r\n    };\r\n    handleUpdate= (id) =>{\r\n        this.setState({\r\n            updateId: id,\r\n            updateVisible: true,\r\n        })\r\n    };\r\n    handleDelete= (id) =>{\r\n\r\n        axios.delete('/api/activity/deleteActivity',{\r\n            params: {\r\n                'id':id,\r\n            }\r\n        }).then((res) => {\r\n            message.success(\"删除成功\");\r\n        }).catch(error => {\r\n            message.error(\"删除失败\"+error);\r\n        })\r\n    };\r\n    handleCancelUpdate= () =>{\r\n        this.setState({\r\n            updateVisible: false,\r\n        })\r\n    };\r\n    handleUpdateActivity=(value,id)=>{\r\n        axios.post('/api/activity/updateActivity',qs.stringify({\r\n            name: value.name,\r\n            content: value.content,\r\n            communityName:value.communityName,\r\n            id: id,\r\n        })).then((res) => {\r\n            this.setState({\r\n                updateVisible: false\r\n            });\r\n            message.success(\"操作成功\");\r\n\r\n        }).catch(error => {\r\n            message.error(\"操作失败\"+error);\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const columns = [\r\n            {\r\n                title: '活动名称',\r\n                dataIndex: 'name',\r\n                key: 'id',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '活动内容',\r\n                dataIndex:'content',\r\n                key: 'id',\r\n                render: text => <a>{text}</a>,\r\n            },\r\n            {\r\n                title: '所属社团',\r\n                dataIndex:'community',\r\n                key: 'id',\r\n                render: (community) => (\r\n                    <Tag color={\"green\"} key={community}>{community.name}</Tag>\r\n                ),\r\n            },\r\n\r\n            {\r\n\r\n                title: '操作',\r\n                key: 'id',\r\n                render: (text,record) => (\r\n\r\n                    <Space size=\"middle\">\r\n                        <Button onClick={()=> handleUpdate(record.id)}>修改</Button>\r\n                        <Button onClick={()=> handleDelete(record.id)}>删除</Button>\r\n                    </Space>\r\n\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const {handleSearch,handleShowModal,handleAddActivity,handleUpdate,handleCancel,handleDelete,handleCancelUpdate,handleUpdateActivity} = this;\r\n        if(this.props.deleteState){return <Redirect to=\"/admin/activity\"/>}\r\n        return(\r\n            <div className=\"activityList\">\r\n\r\n                <Card style={{width: 1227}}>\r\n                    <Form\r\n                        name=\"advanced_search\"\r\n                        className=\"ant-advanced-search-form\"\r\n                    >\r\n                        <Row type=\"flex\"  align=\"middle\" style={{marginBottom:10}}>\r\n\r\n                            <Col>\r\n                                <Form layout=\"inline\"  ref=\"searchForm\">\r\n                                    <Form.Item label={\"活动名\"}  name=\"fields\">\r\n                                        <Input  />\r\n                                    </Form.Item>\r\n                                    <Form.Item style={{float:\"right\"}}>\r\n                                        <Button  type=\"primary\" onClick={()=>handleSearch(this.refs.searchForm.getFieldValue())} style={{marginRight:\"10px\"}}>查找</Button>\r\n                                        <Button  type=\"default\"  onClick={()=>handleShowModal()}><PlusSquareOutlined />添加活动</Button>\r\n\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n\r\n\r\n                    <Table\r\n                        columns={columns}\r\n                        pagination={{ pageSize:6, position: [ 'bottomCenter'] }}\r\n                        dataSource={this.state.data}\r\n                        rowKey={(record) => {\r\n                            return (record.id + Date.now()) //在这里加上一个时间戳就可以了\r\n                        }}\r\n                    />\r\n                </Card>\r\n\r\n                <Modal\r\n                    visible={this.state.visible}\r\n                    destroyOnClose={true}\r\n                    title=\"添加活动\"\r\n                    onOk={()=>handleAddActivity()}\r\n                    onCancel={()=>handleCancel()}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={()=>handleCancel()}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.props.loading} onClick={()=>handleAddActivity(this.refs.activityForm.getFieldValue())}>\r\n                            确定\r\n                        </Button>,\r\n\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        name=\"addActivity\"\r\n                        ref=\"activityForm\"\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"活动名\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入所要添加的活动名!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"content\"\r\n                            label=\"活动内容\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写活动内容!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"communityName\"\r\n                            label=\"所属社团\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写所属社团!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    visible={this.state.updateVisible}\r\n                    destroyOnClose={true}\r\n                    title=\"修改活动\"\r\n                    onOk={()=>handleUpdateActivity()}\r\n                    onCancel={()=>handleCancelUpdate()}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={()=>handleCancelUpdate()}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.props.loading} onClick={()=>handleUpdateActivity(this.refs.activityForm.getFieldValue(),this.state.updateId)}>\r\n                            确定\r\n                        </Button>,\r\n\r\n                    ]}\r\n                >\r\n                    <Form\r\n                        name=\"updateActivity\"\r\n                        ref=\"activityForm\"\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label=\"活动名\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入所要添加的活动名!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input defaultValue=\"admin\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"content\"\r\n                            label=\"活动内容\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写活动内容!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"communityName\"\r\n                            label=\"所属社团\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请填写社团名!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Activity;",{"ruleId":"155","severity":1,"message":"156","line":2,"column":9,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":45,"column":25,"nodeType":"161","endLine":45,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":1,"column":1,"nodeType":"164","endLine":50,"endColumn":3},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"162","severity":1,"message":"169","line":1,"column":1,"nodeType":"164","endLine":7,"endColumn":2},{"ruleId":"165","replacedBy":"170"},{"ruleId":"167","replacedBy":"171"},{"ruleId":"165","replacedBy":"172"},{"ruleId":"167","replacedBy":"173"},{"ruleId":"162","severity":1,"message":"174","line":27,"column":1,"nodeType":"164","endLine":37,"endColumn":2},{"ruleId":"162","severity":1,"message":"174","line":21,"column":1,"nodeType":"164","endLine":31,"endColumn":2},{"ruleId":"159","severity":1,"message":"175","line":129,"column":33,"nodeType":"161","endLine":129,"endColumn":36},{"ruleId":"159","severity":1,"message":"175","line":114,"column":33,"nodeType":"161","endLine":114,"endColumn":36},{"ruleId":"159","severity":1,"message":"175","line":129,"column":33,"nodeType":"161","endLine":129,"endColumn":36},{"ruleId":"159","severity":1,"message":"175","line":136,"column":33,"nodeType":"161","endLine":136,"endColumn":36},{"ruleId":"155","severity":1,"message":"176","line":8,"column":9,"nodeType":"157","messageId":"158","endLine":8,"endColumn":15},{"ruleId":"159","severity":1,"message":"175","line":117,"column":33,"nodeType":"161","endLine":117,"endColumn":36},{"ruleId":"159","severity":1,"message":"175","line":123,"column":33,"nodeType":"161","endLine":123,"endColumn":36},"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["177"],"no-negated-in-lhs",["178"],"Assign object to a variable before exporting as module default",["177"],["178"],["177"],["178"],"Assign arrow function to a variable before exporting as module default","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Option' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]